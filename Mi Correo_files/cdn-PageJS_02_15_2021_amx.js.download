//::::::::::::::::::::::::@ MAIL APP :::::::::::::::::::::::::::::::::
//-------------------------------------------------------------------- ...
//::::::GLOBAL VARS
var m_sInboxMode = '';
var m_sSearchFolder = '';
var dtTS = "full";
var dtTSLastInbox = "full";
var m_MsgIndex = -1;
var m_CurrentMsgIndex = -1;
var m_bManualCheck = false;
var m_iCurentFlagImg = 0;
var m_iNumPages = 0;
var m_CDelimiter	= "_#c|-";
var m_RDelimiter	= "_#r|-";
var m_iLastAction = -911;
var m_iLastSelected = -911;
var m_TotalMsgs = 0;
var m_TotalDelMoveMsgs = 0;
var m_bGotFolders = false;
var v_sFolder = "/inbox";
var m_sPrevFolder = v_sFolder;
var CurentPage = 1;

var m_sFolderFetchFilter = "8"; //<uad_korney> 06/07/2016 added the Filter support
var m_sFilterFromEmails = "";
var m_bMultiInboxQuickView = true;
var m_iQuickViewStartIndex = 100101;
var m_iQuickViewTotal = 0;
var m_bInQuickViewMode = false;
var m_bInitQuickViewClick = false;
var m_bNewQuickViewOpt = false;

var sHighlightColor = '#e5f3fb';
var exColorSelectedHighlight = "#DBE1EE";
var deleteconfirmation = "true";
var bShowAutoTrashDelMsg = true;
var bShowAutoJunkhDelMsg = true;
var PopUpMessageView = false;
var m_sFlagsType = 'star';
var m_sFlagtitleOn = mcLang.Text('Click to clear the star',1);

var m_bShowHeaders = false;
var bMoveScrollTop = false;
//----auto-check
var m_AutoCheckTime = 25000;
var m_AutoCheckTimeID = null;
var m_AutoSaveDraftTimeID = null;
var bFlipDate = false;
var bDanishDate = false;

var m_sMyFiles_DocumentsID = '';
var m_sMyFiles_NoteID = '';
var m_sMyFiles_PhotosID = '';
var m_sMyFiles_AudioID = '';
var m_sMyFiles_VideosID = '';
var m_sMyFiles_DesktopID = '';

var m_bManualPriority = false;

var mSelectedPOPIcon = null;
var m_bSendingMail = false;
var mbDropMode = false;
var m_sReadRequestURL = '';

var mInlineEditMode = 'inbox';
var mInlineEditValue= '';
var mInlineEditID = '';

var mContextMenuObj  = null;
var m_iContextMenuAC = null;

var m_objDirContextMenu = null;
var m_bMoveToAction = false;
var m_sMoveToNEwFolderName = '';

var m_ObjCurretnSelectedDir = null;

var m_ObjCurretnApp = null;
var m_iCurrentAppIndex = 0;

var bQuickResponseInt = false;

//backpack
var mBackpackFolderID = '';
var msBackPackMainID = '';
var m_sBackPackSahresFolderID = '';
var m_sBackPackTrashFolderID = '';
var miTotalBackpackFile = 0;
var miTotalBackpackDirs = 0;
var msBackPackMoveMode = 'move';
var m_sBackPackStorage = '';

var arrBackPackFoldersTree = [];
var m_sBackPackFoldersTree = '';
var m_iBackPackAdd_tab =-1;
var m_iBackPackSideFolders = 0;

var m_iTotalParents = 0;
var imBackPackMiniShareIndex = 0;

//Contacts
var G_ViewType = 'card';//"phone";
var G_DispType = "home";
var G_ViewSort = 0;

var m_objDragDrop = null;
var m_objDragDropMsgs = null;

var Msg_Panel_Type = 'b';
var Msg_Panel_Inbox;

var messages;

// pre fetch STARTS
var m_iPreFetchMsgIndex = 0;
var m_iPreFetchMsgTotal = 15;
var m_iPreFetchNewOnly = true;
var m_iPreFetchAttach = false;
var m_iPreFetchMsgIDs  = '';
var m_iPreFetchSMsgID = '';

var m_RTEEmptyChars = '30';
var m_RTEViewMode = 'normal';



// Build an array for multi-tabs
var m_aMultiTabs = [];
var m_aMultiTabsTxt = [];
var m_aMultiTabsm_MSGID = [];
var m_aMultiTabsTitle = [];
var m_bMultiTabStar = false;
var m_iMultiTabsTotal = 5;
var m_iiMultiTabsCurrentIndex = 0;
var m_iMultiTabOptIndex = 0;

var m_iTotalMsgAttach = 0;

var mRTEReady = false;
var mRTEMini = false;
var mRTEMsgAction = '';
var mRTEMsgGUID = '';
var mRTEMsgSaveAction = '';
var mRTEOpen = false;
var mQuickRTEOpen = false;
var mQuickRTEKeepAttach = false;
var mmRTE1stOpen = true;

var mCurrentSavedDraftGUID = '';
var mSavedDraftBusy = false;
var mSavedDraftCloseRTE = false;

var mEmoticonCalled = false;

var mBMiniCalOpen = false;


//----auto-check
var m_bBusyEmptyTrash = false;
var m_bBusyEmptyJunk = false;
var iTreashTotal = 0;
var iJunkMailTotal = 0;

var m_AutoCheckTimeCount = 35000;
var m_AutoCheckTimeCountID = null;

var m_iTotalIncomingMsg = 0;
var m_iTotalNewMsg =0;
var m_UpdateTimeID  = null;
var m_sInfoBarMsg    = "";

var mYUIDialog_callbackFn = '';
var mYUIDialog_callbackFnArguments = [];
var mYUIDialog_called = false;

var images = new Array();

var m_bad_SpellWords_count = 0;
var m_arrSpellCheck = new Array();
var menuobj;
var m_objURLSpell = null;
var m_SpellStatus = "off";
var m_sSelectSpellLang = "English";
var m_bAutoSpellCall = false;
var m_sAutoDraftDIVMsg = "";
var m_iActualSpellErr = 0;
var m_sSpellIgnoreList = "";

var g_oConnect = null;

//contacts auto-comp
var m_SearchQ = '';
var m_bContactExist = false;
var m_TotalAutoComp = 0;
var m_iCurentAutoScroll = 1;
var m_iCurentAutoComp = -1;
var m_bAutoSmartScroll = false;
var m_iMaxAutoComp = 10;
var iTotalToEmails = 0;
var irteEmailsCounter = 0;
var oCurrentAutoTextBox = null;

var mBTEMPAutoBlure = false;

var m_bDontShowPOPOpt = false;

var sIconCon   = '<img  src="' + m_sRessIMGURL + 'contact_card_icon&16.png" style="height:16px; width:16px;"/>';
var sIconGroup = '<img  src="' + m_sRessIMGURL + 'users_icon&16.png" style="height:16px; width:16px;"/>';

// :::::: DRIVE BOX
var m_bDriveBoxAttachBtn = false;
var m_bDriveBoxBackuidFolderID = []; 

/////GLOBAL Search box :::::::
var g_sField		 = 'full';
var g_sOptions		 = false;
var g_sDate			 = '';
var g_sRestrict_date = '';
var g_sRestrict_size = '';
var g_sMessage_type  = '';
var g_sSize			 = '';
var g_sSearchFolders = 'all';
var m_iTotalSearchFolders = 0;
var g_sFoldersExpand = '';
var g_arrFoldersExpandIndex = [];
var g_sFoldersExpandDrive = '';
var g_arrFoldersExpandIndexDrive = [];

////POPup win
var myURL;
var myid;
var mywidth;
var myheight;

var m_bShowPOPOptClick = false;

// begin 01/12/2016 <uad_korney>
//RESTAPI 
var m_bMSAjaxRESTAPI = true;
// end 01/12/2016 <uad_korney>

//:::::::
//:::::::
function fnShowPOPOpt(oObj, sMenuID, iCustomX, iCustomY) 
{
	if (m_bDontShowPOPOpt && (($.browser.name == "firefox")) )
	{
		m_bDontShowPOPOpt = false;
		return;
	}

	m_bShowPOPOptClick = false;

	$('#mPOPOpt').height('');
	var elements = YAHOO.util.Dom.getChildren('mPOPOpt');  
    for (c=0; c < elements.length; c++)
        elements[c].style.display = "none";
	
	
	if (oObj == mPOPOptLastVisablesMenuID)
	{
		//***TEMP
		if ( oObj != 'rte_attach')
		{
			//***TEMP 
			if ( (sMenuID != 'mContactsAutoCompMenu') && (sMenuID != 'mNavDirsOptMenu')  && (sMenuID != 'mBackPackDirsOptMenu') )
			{
				mPOPOptLastVisablesMenuID = '';
			
				fnDocOnClick();
				document.getElementById("mPOPOpt").style.visibility = "hidden";		
				return;
			}
		
		}

	}
	
	

	m_bShowPOPOptClick = true;

	var xy = YAHOO.util.Dom.getXY(oObj);
	//xy[0] -= 56;
	xy[1] += 31;

	xy[0] += iCustomX;
	xy[1] += iCustomY;

	YAHOO.util.Dom.setXY('mPOPOpt', xy);	
	mPOPOptVisable = true;
	document.getElementById("mPOPOpt").style.visibility= "visible"; 
		
	document.getElementById(sMenuID).style.display = "";
		
	mPOPOptLastVisablesMenuID = oObj;
	mSelectedPOPIcon = oObj;
	
		setTimeout(function() {
				m_bShowPOPOptClick = false;
		}, 200);

			

}


//:::::::
//:::::::            
function fnShowMiniPOPOpt(oObj, sMenuID, e)
{
        
	var elements = YAHOO.util.Dom.getChildren('mPOPOpt');  
    for (c=0; c < elements.length; c++)
        elements[c].style.display = "none";

	if ( (mbMenuClosed == false) && (oObj == mSelectedPOPIcon) )
	{
		fnDocOnClick(); 
		YAHOO.util.Event.stopEvent(e); 
		return;
	}
	mbMenuClosed = false;
	
	if(YAHOO.util.Dom.hasClass(document.getElementById(mSelectedPOPIcon), 'MsgActionsSelect'))
		YAHOO.util.Dom.removeClass(document.getElementById(mSelectedPOPIcon), 'MsgActionsSelect');
		
	m_iCurentFlagImg = parseInt(document.getElementById(oObj).getAttribute("FI"));

	var xy = YAHOO.util.Dom.getXY(oObj);
	xy[0] += 24;
	xy[1] -= 4;
	YAHOO.util.Dom.setXY('mPOPOpt', xy);	
	mPOPOptVisable = true;
	document.getElementById("mPOPOpt").style.visibility= "visible"; 
	document.getElementById(sMenuID).style.display = "";

	mPOPOptLastVisablesMenuID = oObj;
	mSelectedPOPIcon = oObj;
	YAHOO.util.Event.stopEvent(e);
}

//:::::::
//:::::::
function fnAddStarBulk(iValue)
{
        var iTotalSelected= 0;
        var sInfoMsg = "";
        var m_sMsgIDs = "";
        
        for (var i=0; i < m_TotalMsgs; i++)
	    {
		    ObjBox = document.getElementById(("C" + i));
		    
            if (ObjBox == null)
            {
	            continue;
	        }
		    
		     if (ObjBox.checked)
		     {
                m_iCurentFlagImg = i;
                fnAddStar(iValue);
                iTotalSelected +=1;

                ObjDiv = document.getElementById(("MDD" + i));
                //ObjBox.parentNode.parentNode.style.backgroundColor = "";
                m_sMsgIDs += "|" +  ObjDiv.getAttribute("msgid") + "*" + "reminderID";
             }
             
	    }
	    
	    //CheckBoxOpt('None');
	    
		if (iValue ==0)
		{
			//remove star
        	//add star
	        if (iTotalSelected == 1)
	                 sInfoMsg = mcLang.Text('lang_mail_119',1);
	        else
	        {
	             	sMessage = mcLang.Text('lang_mail_120',1);
					sMessage = sMessage.replace(/xxxx/gi, iTotalSelected);
	                sInfoMsg = sMessage;     
	        }
		
		}
		else
		{
        	//add star
	        if (iTotalSelected == 1)
	                 sInfoMsg = mcLang.Text('lang_mail_57',1);
	        else
	        {
	             	sMessage = mcLang.Text('lang_mail_58',1);
					sMessage = sMessage.replace(/xxxx/gi, iTotalSelected);
	                sInfoMsg = sMessage;     
	        }
	    }
                
        
        document.getElementById("Call").checked = false;

        f_sPostData = 'Action=' + 17 + '&folder=' + encodeURI(v_sFolder) + '&FlagV=' + iValue + '&MsgIDs=' + m_sMsgIDs;
       
        AJAXCallInbox('../../mail/mail_action.asp',true, f_sPostData);
        UpdateInboxAlert(sInfoMsg, 'infoi.gif');

}

//:::::::
//:::::::
function fnAddStar(iValue)
{
        var ObjImg;
         var m_sMsgIDs = '';
          
        if(m_bMultiTabStar)
        {
        	ObjImg = document.getElementById('mtf' + m_iMultiTabOptIndex); 
        	m_bMultiTabStar = false;
        	fnDocOnClick();
        	
        	fnChangeStarColor(ObjImg, iValue);
        	
        	//getting the inbox star obj and update it as well...
        	var s_GUID = m_aMultiTabsm_MSGID[m_iMultiTabOptIndex];
        	var iInboxStarIndex = $('div[msgid*="' + s_GUID + '"]').attr('cindex');
        	
       		m_sMsgIDs = s_GUID + "*" + "reminderID";
     	
        	ObjImg = document.getElementById('fl' + iInboxStarIndex );
        	fnChangeStarColor(ObjImg, iValue);
      
        }
        else
        {
        	ObjImg = document.getElementById('fl' + m_iCurentFlagImg);  
        	fnChangeStarColor(ObjImg, iValue);
        	
        	//one more thing...is there an open tab for this star?..if yes, update it too!
        	var s_InboxGUID = $(ObjImg).parent().parent().attr('msgid');
        	m_sMsgIDs = s_InboxGUID + "*" + "reminderID";
        	var iTabIndex = jQuery.inArray(s_InboxGUID, m_aMultiTabsm_MSGID);
        	if (iTabIndex > -1)
			{
				ObjImg = document.getElementById('mtf' + iTabIndex); 
        		fnChangeStarColor(ObjImg, iValue);
			}
 
        }
        	              
       var f_sPostData = 'Action=' + 17 + '&folder=' + encodeURI(v_sFolder) + '&FlagV=' + iValue + '&MsgIDs=' + m_sMsgIDs;
       AJAXCallInbox('../../mail/mail_action.asp', false, f_sPostData);
}

//:::::::
//:::::::
function fnChangeStarColor(ObjImg, iValue)
{

        switch (iValue) 
        {
            case 0:   
				        ObjImg.src = m_sRessIMGURL + m_sFlagsType + "_off.png";
				        ObjImg.setAttribute("FC", "0");
				        break;
            case 1:   
                        ObjImg.src = m_sRessIMGURL + m_sFlagsType + "_red.png";
				        ObjImg.setAttribute("FC", "1");
				        break;
    				    
            case 2:   
                        ObjImg.src = m_sRessIMGURL + m_sFlagsType + "_yellow.png";
				        ObjImg.setAttribute("FC", "2");
				        break;
				        
            case 3:   
                        ObjImg.src = m_sRessIMGURL + m_sFlagsType + "_green.png";
				        ObjImg.setAttribute("FC", "3");
				        break;
				        
            case 4:   
                        ObjImg.src = m_sRessIMGURL + m_sFlagsType + "_blue.png";
				        ObjImg.setAttribute("FC", "4");
				        break;
        }

}

//:::::::
//:::::::
function fnRestPOPOptTimer()
{
	mPOPOptTimeID = window.setTimeout("fnClosePOPOpt()",mPOPOptTimeOut);
}


//:::::::
//:::::::
function fnClosePOPOpt()
{
	try {
			document.getElementById(mPOPOptLastVisablesMenuID).style.display = "none";
			mPOPOptLastVisablesMenuID = '';
			document.getElementById("mPOPOpt").style.visibility = "hidden";
		}
		catch (x) {
		
		}
}


//:::::::
//:::::::
var fnDocOnClick = function(e)  
{ 

	document.getElementById("mPOPOptFiltersFromEmails").style.visibility = "hidden";

	setTimeout(function() {

		if (m_bShowPOPOptClick == false)
		{
			mPOPOptLastVisablesMenuID = '';
  			document.getElementById('imgdivPrv').style.display = 'none';
			document.getElementById("mPOPOpt").style.visibility = "hidden";

			//msg colorcode color picker 
			//sMsgColorCodePickerClose();
						
		}
		
	}, 100);

}  


//:::::::
//:::::::
function fnInnerHTML(objID, sobjValue)
{
	document.getElementById(objID).innerHTML = sobjValue;
}

//:::::::
//:::::::
function fnGetFolders()
{
	var sURL = '../app/folders.asp';
    var obj_callback = new clsAjaxcallback();    
    obj_callback.Ajaxcallback.success = fShowFoldersModule;
    makeRequest(sURL, obj_callback.Ajaxcallback);
}

//:::::::
//:::::::
function fnRefreshFolders()
{
	var sURL = '../app/folders.asp';
    var obj_callback = new clsAjaxcallback();    
    obj_callback.Ajaxcallback.success = fRefreshFoldersModule;
    fnSaveFoldersExpand();
    makeRequest(sURL, obj_callback.Ajaxcallback);
}

function fnSaveFoldersExpand()
{
	var l_iTotalDirs = document.getElementById('TotalDirs').value;
	for (var i=0; i < l_iTotalDirs; i++)
	{  
		sValue =  $('#dexp' + i).attr('atrShow');
		if (sValue == 1)
		{
			g_sFoldersExpand += ' ' + $('#udir' + i).attr('atrdid') + ' ';
		}
	} 
}

function fnSaveFoldersExpandDrive()
{

	for (var i=0; i < m_iBackPackSideFolders; i++)
	{  
		if($('#PBexpand' + i).length )
		{		
			sValue =  $('#PBexpand' + i).attr('atrShow');
			if (sValue == 1)
			{
				g_sFoldersExpandDrive += ' ' + $('#uBPdir' + i).attr('atrdid') + ' ';
			}
		}
	} 
}


function fnDirExpandDir(v_iIndex, ImgObj, e, ilevel)
{
	e.stopPropagation();
	e.preventDefault();
	YAHOO.util.Event.stopPropagation(e);

	var l_sDirCSS = '';
	m_bIgnoreDirClcik = true;
	
	var l_iTotalSubs = document.getElementById('udir' + v_iIndex).getAttribute('atrSubdirTotal');
	var l_iTotalDirs = document.getElementById('TotalDirs').value;

	if (ImgObj.getAttribute('atrShow') == '0')
	{
		ImgObj.setAttribute('atrShow','1');
		ImgObj.src = m_sRessIMGURL + 'minus.png';
		ImgObj.setAttribute('title','Hide subfolders');
	}
	else
	{
		l_sDirCSS = 'none';
		ImgObj.setAttribute('atrShow','0');
		ImgObj.src = m_sRessIMGURL + 'plus.png';
		ImgObj.setAttribute('title','Show subfolders');
	}
	
		
	if (l_sDirCSS == '')
	{
		    for (var i=0; i < l_iTotalDirs; i++)
			{  
				objDir = document.getElementById('udir' + i); 
				if ( objDir.getAttribute('atrpd') == v_iIndex)
					objDir.style.display = l_sDirCSS 
			} 
	
		}
	else
	{
			objDir = $('#udir' + v_iIndex).next(); 
			while($(objDir).attr('iLevel') > ilevel)
			{
				objDir.css('display',l_sDirCSS);	
				ImgObj = $(objDir).find('img');

				if ( $(ImgObj).attr('atrShow') == '1')
				{
					$(ImgObj).attr('atrShow', '0')
					$(ImgObj).attr('src', m_sRessIMGURL + 'plus.png');
				}

			
				if ( $(objDir).next().attr('iLevel') )	
					objDir =  $(objDir).next();	
				else
					break;	
			}
	}

	
	fnCheckFolderScroll();
	
	return false;
	
}


//:::::::
//:::::::
function fnCheckFolderScroll()
{

	var scroll = $('#mLeftPanelBody').scrollTop();
	var iMagicBox_height = parseInt($('#divMagicBox').css('height'));
	
	//console.log('iMagicBox_height :' + iMagicBox_height );
	
	var imLeftPanelBodyMinus = 83;
	
	if (mSkinUI == 'telmex')
		imLeftPanelBodyMinus = 120;

	$('#mLeftPanelBody').css('height', '');

	if ( parseInt($('#mLeftPanelBody').height()) > ( m_ClientHeight - (imLeftPanelBodyMinus + iMagicBox_height) ) )
	{
		$('#mLeftPanelBody').css('overflow-y', 'scroll');
		$('#mLeftPanelBody').height(m_ClientHeight - imLeftPanelBodyMinus);
	
	}
	else
		$('#mLeftPanelBody').css('overflow-y', 'hidden');
	
	var iTelmexTopPadding = 0;	
	if (mSkinUI == 'telmex')
		iTelmexTopPadding = 5;
		
	$('#mLeftPanelBody').height( m_ClientHeight - (imLeftPanelBodyMinus + iMagicBox_height - iTelmexTopPadding ) );
		
	$("#mLeftPanelBody").scrollTop(scroll);
	
	$(".jqTootltip").tipTip();
}

//:::::::
//:::::::	
function fRefreshFoldersModule(o) 
{
    
	if(o.responseText !== undefined)
    {
		var sHTTPData = o.responseText; 
        o = null;

		if (sHTTPData == "")
			return;	
		
		//::::save folders to storage
		//fnSotrageSave_MailFolders(sHTTPData);
		
		// restore mail filters HTML step 1
		var sHTMLMailFilters = $('#InboxQuickViewsLeftNav').html();
	 
		document.getElementById('spanLeftNavFolders').innerHTML = fnBuildMailFolder(sHTTPData);
		
		// restore mail filters HTML step 2
		$('#InboxQuickViewsLeftNav').html(sHTMLMailFilters);
		
		//re-expand folders?!
		for ( var mi=0; mi < g_sFoldersExpand.length; mi+=1 )
		{
			$('#dexp' + g_arrFoldersExpandIndex[mi]).click();		
		}
		g_sFoldersExpand = '';
		g_arrFoldersExpandIndex = [];

		fnCheckFolderScroll();
		
		//console.log( 'm_ObjCurretnSelectedDir.getAttribute(atrDID):' + m_ObjCurretnSelectedDir.getAttribute('atrDID') );
		//console.log( 'v_sFolder.toLowerCase:' + v_sFolder.toLowerCase() )
		
		////
		if ( m_ObjCurretnSelectedDir.getAttribute('atrDID') != null )
		{
			var v_sDirID = m_ObjCurretnSelectedDir.getAttribute('atrDID');
			if ( v_sFolder.toLowerCase() == v_sDirID.toLowerCase() )
			{
				m_ObjCurretnSelectedDir = document.getElementById('udir' + m_ObjCurretnSelectedDir.getAttribute('atrindex'));
				if(YAHOO.util.Dom.hasClass(m_ObjCurretnSelectedDir, 'LeftPanelDirClick') ==false)
					YAHOO.util.Dom.addClass(m_ObjCurretnSelectedDir, 'LeftPanelDirClick');  
			}
			else
			{
				m_ObjCurretnSelectedDir = document.getElementById('udir' + 0);
				YAHOO.util.Dom.addClass(m_ObjCurretnSelectedDir, 'LeftPanelDirClick');
			}
		}
		else
		{
			m_ObjCurretnSelectedDir = document.getElementById('udir' + 0);
			YAHOO.util.Dom.addClass(m_ObjCurretnSelectedDir, 'LeftPanelDirClick'); 
		}
		///

		
		$("#mLeftPanelBody").bind("contextmenu",function(e) {
		    
		    // create and show menu
		    fnDirContextMenu(e.pageX, e.pageY);
		    
		    e.preventDefault();
		});
	  
	}
	
	//WE are moving msgs to a new folder?
	if (m_bMoveToAction)
	{
		m_bMoveToAction = false;
		//Get new folder Index
		for (var i=0; i < document.getElementById("TotalDirs").value; i++)
		{
			var FolderName = trim(document.getElementById(("dirtxt" + i)).getAttribute('title'));
			if ( trim(m_sMoveToNEwFolderName) == FolderName)
			{
				fnMoveInboxMsgs(i); 	
				break;
			}		          
		}
	}
	////////////////
	
	
	    $(function(){
	    mInlineEditMode = 'inbox';
        $('.editable').inlineEdit();
    });

}


//inline edit for left-nav folders

// Numeric only control handler
//:::::::
//:::::::
jQuery.fn.ForceNumericOnly =
function()
{
    return this.each(function()
    {
        $(this).keydown(function(e)
        {
        
            var key = e.charCode || e.keyCode || 0;
    
            if (key == 13)
            {
            	//$(this).blur();
            	$("input").blur();
            }
            
          	//if (e.shiftKey) 
          	//{
          	//	alert(String.fromCharCode(key))
          	//}
          	
          	// allow backspace, tab, delete, arrows, numbers and keypad numbers ONLY
            // home, end, period, and numpad decimal
            return (
                key == 8 || 
                key == 9 ||
                key == 46 ||
                key == 110 ||
                key == 190 ||
                key == 189 ||
                key == 32 ||
                (key >= 35 && key <= 40) ||
                (key >= 65 && key <= 90) ||
                (key >= 48 && key <= 57) ||
                (key >= 96 && key <= 105));
               
        });
    });
};



//:::::::
//:::::::
    (function($) {

        $.fn.inlineEdit = function(options) {
        
            // define some options with sensible default values
            // - hoverClass: the css classname for the hover style
            options = $.extend({
                hoverClass: 'hover'
            }, options);
        
            return $.each(this, function() {
        
                // define self container
                var self = $(this);
        
                // create a value property to keep track of current value
                self.value = self.text();
        
                // bind the click event to the current element, in this example it's span.editable
                self.bind('dblclick', function() {
                
                        mInlineEditValue= $(self).attr('title');
						mInlineEditID = $(self).attr('atrdid');    


                self
                        // populate current element with an input element and add the current value to it
                        //.html('<div style="position:absolute"><input type="text" style="border:1px #26A0DA solid; width:110px; height:25px; line-height:24px; " value="'+ $(self).attr('title') +'">&nbsp;&nbsp;<img onclick="" style="border:0px; width:16px; height:16px" src="' + m_sRessIMGURL + 'delete_icon_gray_16.png" title="Cancel">&nbsp;&nbsp;&nbsp;<img onclick="" style="border:0px; width:16px; height:16px" src="' + m_sRessIMGURL + 'checkmark_icon_gray_16.png" title="Rename"></div>')		
                       

                        // select this newly created input element
                        .find('input')
                            // bind the blur event and make it save back the value to the original span area
                            // there by replacing our dynamically generated input element
                            .bind('blur', function(event) {
                            
                             		
                          		if(!$.trim(this.value).length) { // zero-length string AFTER a trim
                          			self.text(self.value);
                          		}
                          		else
                          		{
                          			self.value = $(this).val();
	                                self.text(self.value);
	                                var sDirID = $(self).attr('atrdid');
	                                
	                                //app action?
	                                if (mInlineEditMode == 'inbox')
	                                	//fnRenameDir(self.value, sDirID);
	                                	
	                                if (mInlineEditMode == 'backpack')
	                                	fnRenameBackpackDir(self.value, sDirID);

                          		}

                          		
                            })
                            // give the newly created input element focus
                            .focus();
                            
                            $(self).ForceNumericOnly();
                            
                })
                // on hover add hoverClass, on rollout remove hoverClass
                /*
                .hover(
                    function(){
                        self.addClass(options.hoverClass);
                    },
                    function(){
                        self.removeClass(options.hoverClass);
                    }
                );
                */
            });
        }
        
    })(jQuery);
        

//:::::::
//:::::::
function fnRenameDir(sDirName, sDirID)
{
	var obj_callback = new clsAjaxcallback();    
    obj_callback.Ajaxcallback.success = fAJAXResponsefnRenameDir;
	var sURL = '../../nfolders/nfolders_manage.asp?action=RenameFolder&folder_id=' + sDirID + '&folder_new_name=' + sDirName + '&bAJAXCall=on';
    makeRequest(sURL, obj_callback.Ajaxcallback);
      
}


//:::::::
//:::::::
function fnDeleteDir(sDirID)
{
	var obj_callback = new clsAjaxcallback();    
	obj_callback.Ajaxcallback.success = fAJAXResponsefnDeleteDir;
	var sURL = '../../nfolders/nfolders_manage.asp?action=DeleteFolder&folder_id=' + sDirID + '&bAJAXCall=on';
	makeRequest(sURL, obj_callback.Ajaxcallback);
}

function fAJAXResponsefnDeleteDir()
{
	fnRefreshFolders();
}

//:::::::
//:::::::
function fnNeweDir(sDirName, sDirID)
{
	var obj_callback = new clsAjaxcallback();    
	obj_callback.Ajaxcallback.success = fAJAXResponsefnRenameDir;
	var sURL = '../../nfolders/nfolders_manage.asp?action=CreateFolder&folder_id=' + sDirID + '&folder_new_name=' + sDirName + '&bAJAXCall=on';
	makeRequest(sURL, obj_callback.Ajaxcallback);
}


//:::::::
//:::::::
function fAJAXResponsefnRenameDir(o)
{
    fnRefreshFolders();    
}

//:::::::
//:::::::
function fnInboxContextAC(iAction)
{
	m_iContextMenuAC = iAction;
	C(mContextMenuObj,2);	
	
}


//:::::::
//:::::::
function fnInboxContextMenu(ObjRow, e)
{ 
	
	mContextMenuObj = ObjRow;
	
	var iTotalSelected = 0;
	for (var i=0; i < m_TotalMsgs; i++)
	{
		ObjBox = document.getElementById(("C" + i));
		    
            if (ObjBox == null)
	            continue;
	            
		if (ObjBox.checked)
        {	
		 	iTotalSelected +=1;
		 	if (iTotalSelected >= 2)
		 		break;
		}     
	}
	

	fnDocOnClick(); 	
	
	iMsgIndex = $(ObjRow).attr('cindex');
	
	if (iTotalSelected <= 1)
	{
		if (document.getElementById(("Ico" + iMsgIndex)).src.indexOf('/n.png') > 1)
		{
			$('#mInboxcontextmenu_read').css( "display", "" );
			$('#mInboxcontextmenu_unread').css( "display", "none" );
		}
		else
		{
			$('#mInboxcontextmenu_read').css( "display", "none" );
			$('#mInboxcontextmenu_unread').css( "display", "" );

		}	
			
		fnShowPOPOpt(ObjRow.id, 'mInboxcontextmenu', 0,0);
	}
	else
		fnShowPOPOpt(ObjRow.id, 'mInboxShortcontextmenu', 0,0);

			
	var xy = YAHOO.util.Dom.getXY('mPOPOpt');
	xy[0] = e.pageX;
	xy[1] = e.pageY;
	
	//check popup X Y positions
	m_ClientWidth = $(window).width();
	m_ClientHeight = $(window).height();

	iMenuWidth = $('#mPOPOpt').width();
	iMenuHeight = $('#mPOPOpt').height();
	
	if ( (xy[0] + iMenuWidth + 10) > m_ClientWidth  )
		xy[0] = m_ClientWidth - iMenuWidth - 30;
		
	if ( (xy[1] + iMenuHeight + 10) > m_ClientHeight  )
		xy[1] = m_ClientHeight - iMenuHeight - 30;

	
	YAHOO.util.Dom.setXY('mPOPOpt', xy);
	
	
	
	ObjBox = document.getElementById(("C" + iMsgIndex));
	
	if (ObjBox.checked == false)
		CheckBoxOpt('None');
	
	ObjBox = document.getElementById(("C" + iMsgIndex));
	ObjBox.parentNode.parentNode.style.backgroundColor = sCheckboxCheckedColor;
	ObjBox.checked = true;
	
	fnShowInboxActions();
}


//:::::::
//:::::::
function fnDirContextMenu(iMouseX, iMouseY)
{

	if (m_objDragDrop != null)
	{	
		//dir type
		if ($(m_objDragDrop).attr('ddType') == "dir")
		{
			var sDirName = $(m_objDragDrop).attr('atrDName');       
			iDirIndex = $(m_objDragDrop).attr('atrindex');
			dirID = $(m_objDragDrop).attr('atrdid');
			
			fnDocOnClick(); 
			
			fnShowPOPOpt(m_objDragDrop.id, 'mNavDirsOptMenu', 0,0);
			
			///////////
			var xy = YAHOO.util.Dom.getXY('mPOPOpt');
			var mPOPOpt_Height = $('#mPOPOpt').outerHeight();

			if ( (xy[1] + mPOPOpt_Height) > m_ClientHeight )
			{
					xy[1] = (m_ClientHeight - mPOPOpt_Height) - 20;
			}
			else
				xy[1] -= 0;
			
			//fnAddDebug('xy[1]:' + xy[1]);
			YAHOO.util.Dom.setXY('mPOPOpt', xy);	
			///////////

			
			m_objDirContextMenu = m_objDragDrop;
		
			document.getElementById("mNavDirsOptMenuEmpty").style.display = "";
			document.getElementById("mNavDirsOptMenudivide").style.display = "";

			
			if ( (dirID.toLowerCase() == '/deleted items') || (dirID.toLowerCase() == '/junk mail') )
			{
				document.getElementById("mNavDirsOptMenuEmpty").style.display = "";
				document.getElementById("mNavDirsOptMenudivideRoot").style.display = "";
				
			}
			else
			{
				document.getElementById("mNavDirsOptMenuEmpty").style.display = "none";
				document.getElementById("mNavDirsOptMenudivideRoot").style.display = "none";
			}
			
			
			if ($(m_objDirContextMenu).find('.editable').length)
			{
				document.getElementById("mNavDirsOptMenuRename").style.display = "";
				document.getElementById("mNavDirsOptMenuDelete").style.display = "";
				document.getElementById("mNavDirsOptMenudivide").style.display = "";
				
			}
			else
			{
				document.getElementById("mNavDirsOptMenuRename").style.display = "none";
				document.getElementById("mNavDirsOptMenuDelete").style.display = "none";
				document.getElementById("mNavDirsOptMenudivide").style.display = "none";
				
				
				if ( (dirID.toLowerCase() == '/deleted items') || (dirID.toLowerCase() == '/junk mail') )
				{
					document.getElementById("mNavDirsOptMenuEmpty").style.display = "";
					document.getElementById("mNavDirsOptMenudivide").style.display = "";
					
				}

			}

			//alert(sDirName + dirID + '\n' + iMouseX + ' ' + iMouseY);
		}
	}

}

//:::::::
//:::::::
function fnMoveToNewDir()
{
	m_bMoveToAction = true;
	m_objDirContextMenu =  $('#udir0');
	fnNavDirMenuAction(10);
}


function fnTrim(stringToTrim) {
	return stringToTrim.replace(/^\s+|\s+$/g,"");
}
function fnLTrim(stringToTrim) {
	return stringToTrim.replace(/^\s+/,"");
}
function fnRTrim(stringToTrim) {
	return stringToTrim.replace(/\s+$/,"");
}

//:::::::
//:::::::
function fnPrompt(sText, sValue)
{
	if ( sValue == '' )
		sValue = ' ';

	var p=prompt(sText,sValue);
	if(!p)// cancel was *probably* clicked
	{
		return(null);
	}
	else if(p===' ')//ok was clicked with no input
	{
		return('');
	}
	else// there is user input
	{
		p = fnLTrim(p);
		return(p);
	}
	
	if ( fnTrim(p) == '' )
		return('');
	

}

//:::::::
//:::::::
function fnNavDirMenuAction(iAction)
{
	//refresh folders
	if (iAction == 11)
	{
		fnRefreshFolders();
		return;
	}

	//rename
	if (iAction == 1)
	{
		//$(m_objDirContextMenu).find('.editable').dblclick();
		
		value = fnPrompt(mcLang.Text('lang_mail_65',0),'');
		while( value == '')
		{
					alert(mcLang.Text('lang_mail_66',0)) 
					value = fnPrompt(mcLang.Text('lang_mail_108',0),'');
		}
		
		if( value == null)
			return;
			
		value = trim(value); 
			
		//check if dir name already exist
		dirIndex = $(m_objDirContextMenu).attr('atrpd'); 
		
		$('a[atrpd="' + dirIndex + '"]').each(function() { 		
		
			if (  $(m_objDirContextMenu).attr('id') != $(this).attr('id') )
			{
				dirIndex = $(this).attr('atrindex');   		
				var v_sDirText = $('#dirtxt' + dirIndex).attr('title');  		
				if ( v_sDirText.toLowerCase() == value.toLowerCase() )
				{
					UpdateInboxAlert(nFolderExistErr);
	    			value = null;
	    			return;
				}  	
			}	    		   		
		});
		
		if( value == null)
			return;
		
		dirID = $(m_objDirContextMenu).attr('atrdid');
		
		
		fnRenameDir(encodeURI(value) , encodeURI(dirID));
		
		if ( v_sFolder.toLowerCase() == dirID.toLowerCase() ) 
			fnSDir(0);
	}
	
	//new dir
	if ( (iAction == 0) || (iAction == 10) )
	{
		value =  fnPrompt(mcLang.Text('lang_mail_65',0),'');
		while( value == '')
		{
			alert(mcLang.Text('lang_mail_66',0)) 
			value = fnPrompt(mcLang.Text('lang_mail_108',0),'');
		}
		
		if( value == null)
			return;
					
		value = trim(value); 
		
		//check if dir already exist
		dirIndex = $(m_objDirContextMenu).attr('atrindex');
		$('a[atrpd="' + dirIndex + '"]').each(function() { 		
			dirIndex = $(this).attr('atrindex')   		
			var v_sDirText = $('#dirtxt' + dirIndex).attr('title');  		
			if ( v_sDirText.toLowerCase() == value.toLowerCase() )
			{
				UpdateInboxAlert(nFolderExistErr);
    			value = null;
    			return;
			}  		    		   		
		});
		
		if( value == null)
			return;

		
		value = encodeURI(value);
	
		m_sMoveToNEwFolderName = value;
			
		dirID = $(m_objDirContextMenu).attr('atrdid');
		
		if (iAction == 10)
			dirID = '';
		
		fnNeweDir(value, dirID)
	}
	
	//delete
	if (iAction == 3)
	{			

		var sDirName = $(m_objDirContextMenu).attr('atrDName'); 
		
		var sMessage = mcLang.Text('lang_mail_67',0);
		sMessage = sMessage.replace(/_xxbreaklinexx_/gi, "\n\n");
		sMessage = sMessage.replace(/_xxFolderNamexx_/gi, sDirName);
		if(confirm(sMessage))
		{
		
		}
		else 
			return;
	
		dirID = $(m_objDirContextMenu).attr('atrdid'); 
		
		sArrowImgObj = $(m_objDirContextMenu).find("img");
		if (sArrowImgObj.attr('atrshow') == "1")
			$(m_objDirContextMenu).find("img").click();
		$(m_objDirContextMenu).css('display','none');
		$(m_objDirContextMenu).attr('atrpd','');

		fnDeleteDir(encodeURI(dirID));
		
		if ( v_sFolder.toLowerCase() == dirID.toLowerCase() )
			fnSDir(0);

	}



	//empty folder
	if (iAction == 2)
	{			

		var sDirName = $(m_objDirContextMenu).attr('atrDName');
		
		var sMessage = mcLang.Text('lang_mail_71',0);
		sMessage = sMessage.replace(/_xxbreaklinexx_/gi, "\n\n");
		sMessage = sMessage.replace(/xxFolderNamexx_/gi, sDirName);
		
		if(confirm(sMessage))
		{
		
		}
		else 
			return;
			
		dirID = $(m_objDirContextMenu).attr('atrdid');
		if ( dirID.toLowerCase() == '/deleted items' )
		{
			fnEmptyTrash();
		}
		
		if ( dirID.toLowerCase() == '/junk mail' )
		{
			fnEmptyJunk();
		}
		
		if ( ( dirID.toLowerCase() != '/junk mail' ) && ( dirID.toLowerCase() != '/deleted items' ) )
			fnEmptyFolder(dirID);
		
		
		if ( v_sFolder.toLowerCase() == dirID.toLowerCase() )
			fnSDir(0);

		
	}


}

function fnAddTab(v_iTotalTabs)
{	
	var sHTMLTab = "";

	for(var i=0; i <  v_iTotalTabs; i++)
	{
		sHTMLTab += "&nbsp;&nbsp;";
	}

	return(sHTMLTab);
}


function fnBuildMailFolder(sData)	
{
	
	var aFolders = sData.split("||");
	sData = '';   	
	var m_sDirHTML = '';
	var TotalDirs = 0;
	
	var v_iIndex, FolderName, SubFolders, v_iParentIndex, iPersistance, sFolderID, iCurrentLevel, sTotalNew;
	var sDropFoldersHTML = '';
			
	for(var i=0; i < aFolders.length - 1; i++)
	{
		if ( aFolders[i].length < 10 )
		    		continue;

		v_iIndex = aFolders[i].split("^")[0];
		FolderName = aFolders[i].split("^")[1];
		SubFolders = parseInt(aFolders[i].split("^")[2]);
		v_iParentIndex = aFolders[i].split("^")[3];
		iPersistance = aFolders[i].split("^")[4];
		sFolderID = aFolders[i].split("^")[5];
		iCurrentLevel = parseInt(aFolders[i].split("^")[6]);
		sTotalNew = parseInt(aFolders[i].split("^")[7]);
		
		//Counter ---
		var iCount = sTotalNew/1000;
      	var iCountRound = parseInt(iCount);
        	
        if (iCount >= 100)
        		iCount = "99K+"
        else
        {
        	if (iCount >= 1)
        	{
        		if  (iCount > iCountRound )
        				iCount = (iCountRound)  + "K+";
        		else
        		{
        			if  (iCountRound > iCount)
        				iCount = (iCountRound - 1)  + "K+";
        			else
        				iCount = (iCount)  + "K";	
        		}
 			}
 			else
        		iCount = sTotalNew;
        }
        
        sNewDirClss = '';
        if (sTotalNew > 0)
        {
        	sTotalNew = '<div class="DirCount" id="' + sFolderID + '" title="' + sTotalNew + '" >' + iCount + '</div>';
        	sNewDirClss = ' LeftPanelDirNew ';
        }
        else
        	sTotalNew = '<div class="DirCount" style="display:none" mcount="0" title="0" id="' + sFolderID +'" >0</div>';
        //Counter ---

		var PersistanceCSS = '';
		var editableHTML = ' class="editable sMFoldertext" ';
		if (iPersistance == 1)
		{ 
			PersistanceCSS = "LeftPanelDirSys sMFoldertext"
			editableHTML = ""
		}
				
		var sExpandIMG = ""
		if (SubFolders > 0) 
			sExpandIMG = '<img id="dexp' + v_iIndex  + '" src="' + m_sRessIMGURL + 'plus.png" style="border:0px; width:10px; height:10px" title="Show subfolders" atrShow="0" onclick="fnDirExpandDir(\'' + v_iIndex + '\', this, event, ' + iCurrentLevel + ')" />&nbsp;'
		else
			sExpandIMG = '<img  id="dexp' + v_iIndex  + '" src="' + m_sRessIMGURL + 'trans.png" style="border:0px; width:10px; height:10px"  atrShow="0" />&nbsp;';
				
		SubDirCSS = ""
		if (v_iParentIndex != '')
			SubDirCSS = ' style="display:none" '
		
		if (FolderName == "Priority") 
			SubDirCSS = ' style="display:none" '
			
		if(g_sFoldersExpand.indexOf(sFolderID) != -1)
		{
			g_arrFoldersExpandIndex.push(v_iIndex);
		}
		
		iFoldernameWith = 133;
		
		//for quick filters arrow - just next to inbox
		var sDirHTMLQuickFilterArrow = '';
		if (i == 0)
		{
			sDirHTMLQuickFilterArrow =  '		<div class="DirCountBox" id="qInboxViews" onclick="fnInboxQuickViews(\'qInboxViews\', event)" style="width:20px; height:30px;" title="' + m_sQuickFilters + '">' +
										'			<div class="DirCount" style="width:6px"><img onclick="" style="cursor:pointer; padding-top:3px" src="' + m_sRessIMGURL + 'N1.gif" height="8px" width="4px"></div>' +
										'		</div>';
			iFoldernameWith = 113;
		}
		
		/*
		m_sDirHTML+= '<a href="JavaScript:fnSDir(' + v_iIndex + ')" ddType="dir" onmouseout="fnDirDragLeave()" atrDName="' + FolderName + '" onmouseover="fnDirDragEnter(this)" atrIndex="' + v_iIndex + '" atrDID="' + sFolderID + '" id="udir' + v_iIndex + '" atrSubdirTotal="' + SubFolders + '" atrPD="' + v_iParentIndex + '" iLevel=' + iCurrentLevel + ' class="LeftPanelDir"  ' + SubDirCSS + ' >' +
					 '	<div class="' + PersistanceCSS + ' LeftPanelDirTxt ' + sNewDirClss + '" style="white-space:nowrap; overflow:hidden;">' +
					 '		<div ' + editableHTML + ' style="width:133px;white-space:nowrap; overflow:hidden; text-overflow: ellipsis; display:inline-block; ; float:left" atrDID="' + sFolderID + '" id="dirtxt' + v_iIndex + '" title="' + FolderName +'">' + fnAddTab(iCurrentLevel) + sExpandIMG + FolderName + '&nbsp;&nbsp;</div>' +
					 '		<div class="DirCountBox">' + sTotalNew + '</div>' + sDirHTMLQuickFilterArrow
					 '	</div>' +
					 '</a>';
		*/
		
		/*
		m_sDirHTML+= '<a href="JavaScript:fnSDir(' + v_iIndex + ')" ddType="dir" onmouseout="fnDirDragLeave()" atrDName="' + FolderName + '" onmouseover="fnDirDragEnter(this)" atrIndex="' + v_iIndex + '" atrDID="' + sFolderID + '" id="udir' + v_iIndex + '" atrSubdirTotal="' + SubFolders + '" atrPD="' + v_iParentIndex + '" iLevel=' + iCurrentLevel + ' class="LeftPanelDir"  ' + SubDirCSS + ' >' +
					 '	<div class="' + PersistanceCSS + ' LeftPanelDirTxt ' + sNewDirClss + '">' +
					 '		<div ' + editableHTML + ' style="width:' + iFoldernameWith + 'px;white-space:nowrap; overflow:hidden; text-overflow: ellipsis; display:inline-block; ; float:left" atrDID="' + sFolderID + '" id="dirtxt' + v_iIndex + '" title="' + FolderName +'">' + fnAddTab(iCurrentLevel) + sExpandIMG + FolderName + '&nbsp;&nbsp;</div>' +
					 '		<div style="display:inline-block">' +
					 '			<div class="DirCountBox">' + sTotalNew + '</div>' + 
					 			sDirHTMLQuickFilterArrow +
					 '</div>' +			
					 '	</div>' +
					 '</a>';
					 */

		m_sDirHTML+= '<a href="JavaScript:fnSDir(' + v_iIndex + ')" ddType="dir" onmouseout="fnDirDragLeave()" atrDName="' + FolderName + '" onmouseover="fnDirDragEnter(this)" atrIndex="' + v_iIndex + '" atrDID="' + sFolderID + '" id="udir' + v_iIndex + '" atrSubdirTotal="' + SubFolders + '" atrPD="' + v_iParentIndex + '" iLevel=' + iCurrentLevel + ' class="LeftPanelDir"  ' + SubDirCSS + ' >' +
					 '	<div class="' + PersistanceCSS + ' LeftPanelDirTxt ' + sNewDirClss + '">' +
					 '		<div ' + editableHTML + ' style="width:' + iFoldernameWith  + 'px;white-space:nowrap; overflow:hidden; text-overflow: ellipsis; display:inline-block; ; float:left" atrDID="' + sFolderID + '" id="dirtxt' + v_iIndex + '" title="' + FolderName +'">' + fnAddTab(iCurrentLevel) + sExpandIMG + FolderName + '&nbsp;&nbsp;</div>' +
					 sDirHTMLQuickFilterArrow+ '		<div class="DirCountBox">' + sTotalNew + '</div>' + 
					 '	</div>' +
					 '</a>';

		
		//////// move-to-folder menu
		sDropFoldersHTML += '<a href="JavaScript:fnMoveInboxMsgs(' + v_iIndex + ')" atrindex="' + v_iIndex + '" class="menulink">' + fnAddTab(iCurrentLevel * 2) + FolderName + '</a>';                    
		/////////

		//for Inbox QuickViews
		if (i == 0)
		{
			m_sDirHTML+= '<div id="InboxQuickViewsLeftNav"></div>';
		}						 
					 
		TotalDirs +=1;
		    
	}

	sDropFoldersHTML += '<div class="MSLine"></div>';
	sDropFoldersHTML += '<a href="JavaScript:fnMoveToNewDir()" class="menulink">&nbsp;' +  mcLang.Text('lang_mail_40',1) + '</a>';
	document.getElementById("mInboxDirsList").innerHTML = sDropFoldersHTML;
	
	return(m_sDirHTML + '\n' + '<input type="hidden" name="TotalDirs" value=' + TotalDirs + ' ID="TotalDirs">');

}

//::::::::::::::::::::::::::::: Inbox Qick Views STARTS :::::::::::::::::::::::::::::

//:::::::
//:::::::


function fnAddInboxQickViewDir(iFilterID, sFilterName, sFilters, sFromEmails, sFolderGUID, bMainFilter, sTextTitle)
{
	var sFolderID = sFolderGUID;
	var v_iIndex = m_iQuickViewStartIndex + m_iQuickViewTotal; 
	var sHTMLHideShowX = '';	

	sHTMLHideShowX = ' onmouseover="fnFiltersShowHideClose(' + v_iIndex + ',true)" onmouseleave="fnFiltersShowHideClose(' + v_iIndex + ',false)" ';

	var sDirHTML =  '<a ' + sHTMLHideShowX + ' class="LeftPanelDir" ilevel="0" atrpd="" atrsubdirtotal="0" id="udir' + v_iIndex + '" udirFilter="' + sFilters + '" atrdid="' + sFolderID + '" FilterID="' + iFilterID + '" MainFilter="' + bMainFilter + '" FromEmails="' + sFromEmails + '" oncontextmenu="fnInboxQuickViews(\'qInboxViews\', event)" atrindex="' + v_iIndex + '" atrdname="' +sFilterName + '" href="JavaScript:fnSwitchQickViewFilters(' + v_iIndex + ')">' +
					'	<div class="LeftPanelDirSys sMFoldertext LeftPanelDirTxt ">' +
					'		<div style="width:153px;white-space:nowrap; overflow:hidden; text-overflow: ellipsis; display:inline-block; ; float:left; color:#1772c6" atrdid="/inbox" id="dirtxt' + v_iIndex + '" title="' + sTextTitle + '">' +
					'			<img id="dexp0" src="' + m_sRessIMGURL + 'trans.png" style="border:0px; width:10px; height:10px" atrshow="0">&nbsp;<span id="InboxQuickViewTree' + v_iIndex + '">' + sFilterName + '</span>&nbsp;&nbsp;' +
					'		</div>';
					
		
	sDirHTML += 	'		<div class="DirCountBox" id="qInboxViews"   onclick="fnInboxQuickViewsRemove(\'' + v_iIndex + '\', event)" style="width:26px; height:30px" title="' + m_sRemovefilterTitle + '">' +
					'			<div class="DirCountX" style="width:16px"><img id="imgFilterX' + v_iIndex + '" onclick="" style="cursor:pointer; padding-top:6px; padding-left:3px; visibility:hidden" src="' + m_sRessIMGURL + 'close_16.png" height="16px" width="16px"></div>' +
					'		</div>';
								 
	sDirHTML +=		'	</div>' +
					'</a>';
				
	$('#InboxQuickViewsLeftNav').append(sDirHTML);
	m_iQuickViewTotal +=1;
}

function fnFiltersShowHideClose(iIndex, bShow)
{

	if (bShow)
	{
		$('#imgFilterX' + iIndex).css('visibility', 'visible');
	}
	else
	{
		$('#imgFilterX' + iIndex).css('visibility', 'hidden');
	}
}


//:::::::
//:::::::
function fnInboxQuickViewsRemove(v_iIndex, e)
{
	e.stopPropagation();
	e.preventDefault();
	YAHOO.util.Event.stopPropagation(e);
	
	//if we are removing a selected view, then open Inbox
	if ( m_ObjCurretnSelectedDir == document.getElementById('udir' + v_iIndex) )
		fnSDir(0);

	var iFilterID = $('#udir' + v_iIndex ).attr('FilterID');
	$('#udir' + v_iIndex).remove();

	//check for saved last Quick Viwes
	$.ajax({
		     type: "GET",
		     url: '../../app/InboxFilters.asp',
		     data: "action=delete&FilterID=" + iFilterID,
		     success: function(data) {
		     
		     		 	 
		     }

	});

} 


//:::::::
//:::::::
function fnSwitchQickViewFilters(v_iIndex)
{
	var QickViewFilter = $('#udir' + v_iIndex ).attr('udirFilter');
	
	m_sFilterFromEmails = $('#udir' + v_iIndex ).attr('FromEmails');
	
	m_sFolderFetchFilter = QickViewFilter; 
	fnSDir(v_iIndex);
}


//:::::::
//:::::::
function fnMultiInboxQickViewMoreOpt()
{
	document.getElementById('QickViewsMoreOpt').style.display = "";
	document.getElementById('QickViewMoreOptLink').style.display = "none";
}

//:::::::
//:::::::
function fnInboxQuickViews(sBtn, e)
{

	//restore the drop-menu opt to the main view(s)
	fnInboxQickViewREstoreDropMenuChecks( $('#udir' + m_iQuickViewStartIndex ).attr('udirFilter') );

	e.stopPropagation();
	e.preventDefault();
	YAHOO.util.Event.stopPropagation(e);

	var QRMenuWidth = 0 //$('#mInboxQuickViewMenu').width();
	var QRMenuHeight = $('#mInboxQuickViewMenu').height();
	//QRMenuWidth += 1;
	//QRMenuHeight += 73;
	fnShowPOPOpt(sBtn, 'mInboxQuickViewMenu', 29, -30 );
	
	//reset  From someone fields
	$('#txtFilterFromEmailsName').val('');
	$('#txtFilterFromEmails').val('');
	$('#divFilterFromEmails').html('');
	
	fnInboxQuickViews
}

//:::::::
//:::::::
function fnRestoreInboxQuickViwes()
{

	//check for saved last Quick Viwes
	$.ajax({
		     type: "GET",
		     dataType: "json",
		     url: '../../app/InboxFilters.asp',
		     data: "action=list",
		     success: function(data) {
		     

		     	//did we get the saved JSON filters?
		     	////////////////////
		     	if ( data.length > 0 )
		     	{
		     		m_iQuickViewTotal = 0;
		     	
			     	var oJSON = data;
			     	////////////////////
					for (var i=0; i < oJSON.length; i++)
					{
						iFilterID 	= oJSON[i]['iFilterID'];
						iMemberID 	= oJSON[i]['iMemberID'];
						sFilterName = oJSON[i]['nvcFilterName'];
						sFilters	= oJSON[i]['nvcFilters'];
						sFromEmails	= oJSON[i]['nvcEmails'];
						sFolderGUID = oJSON[i]['nvcFolderGUID'];
						bMainFilter = oJSON[i]['bMainFilter'];
						
						var aViewsFilters =  sFilters.split(",");	
						var sInboxQuickViewTreeText  = '';
							
						//---------
						for(var b=0; b < aViewsFilters.length; b++)
						{
							if ( aViewsFilters[b].length == 0 )
								break;
			
							var qvIndex = aViewsFilters[b];
							var sTextVal = $('#InboxQView' + qvIndex).html();
							
							//from someone filter?...if yes, then use the sFilterName instead
							if ( (qvIndex + '') == '13' )
							{
								sTextVal = sFilterName;
							}
							
							if (sInboxQuickViewTreeText == '')	
								sInboxQuickViewTreeText = sTextVal;
							else
								sInboxQuickViewTreeText += ', ' + sTextVal;
						}
						//---------
						
						
						//add the sFromEmails if we got them
						if ( sFromEmails.length > 0 )
						{
							sTextTitle = sInboxQuickViewTreeText + ' - ' + sFromEmails;
						}
						else
							sTextTitle = sInboxQuickViewTreeText;
						
						fnAddInboxQickViewDir(iFilterID, sInboxQuickViewTreeText, sFilters, sFromEmails, sFolderGUID, bMainFilter, sTextTitle);

					}
					////////////////////
				}
				////////////////////
	 
		     }

	});
	
	
} 

//:::::::
//:::::::
function fnInboxQickViewREstoreDropMenuChecks(QuickViwesData)
{

		$('.QInboxViewChk').each(function() { 		
			$(this).attr('src', m_sRessIMGURL + 'trans.png');
		});

		
		//temp default to unread
		$('#QInboxViewChkImg' + 1).attr('src', m_sRessIMGURL + 'small_checkmark.png');
		return;


			
		var aViewIndex = QuickViwesData.split(",");		
		for(var i=0; i < aViewIndex.length; i++)
		{
			if (aViewIndex[i] != 13)
				$('#QInboxViewChkImg' + aViewIndex[i]).attr('src', m_sRessIMGURL + 'small_checkmark.png');
		}
				
		if ( aViewIndex.length > 1 )
		{
			$("#QInboxViewChkMulti").prop('checked', true);
			m_bMultiInboxQuickView = true;	
		}			
}

//:::::::
//:::::::
function fnOpenInboxQickView(iIndex)
{
	if ( m_bMultiInboxQuickView == false )
	{	
		$('.QInboxViewChk').each(function() { 		
			$(this).attr('src', m_sRessIMGURL + 'trans.png');
		});
	}
		
	var sIMGICO = $('#QInboxViewChkImg' + iIndex).attr('src');
	
	if ( sIMGICO.indexOf("trans.png") > 0 )
		sIMGICO = 'small_checkmark.png';
	else
		sIMGICO = 'trans.png';

	//user can only select one 7|8
	if ( (iIndex == 8) || (iIndex == 7) )
	{
		$('#QInboxViewChkImg' + 8).attr('src', m_sRessIMGURL + 'trans.png');
		$('#QInboxViewChkImg' + 7).attr('src', m_sRessIMGURL + 'trans.png');
		$('#QInboxViewChkImg' + 12).attr('src', m_sRessIMGURL + 'trans.png');
		$('#QInboxViewChkImg' + 13).attr('src', m_sRessIMGURL + 'trans.png');
	}	

	//user can only select one 9 & 10 || 11
	if ( (iIndex == 11) )
	{
		$('#QInboxViewChkImg' + 9).attr('src', m_sRessIMGURL + 'trans.png');
		$('#QInboxViewChkImg' + 10).attr('src', m_sRessIMGURL + 'trans.png');
	}	
	//user can only select one 9 & 10 || 11
	if ( (iIndex == 9) ||  (iIndex == 10) )
	{
		$('#QInboxViewChkImg' + 11).attr('src', m_sRessIMGURL + 'trans.png');
	}
	
	//user can only select 12 (can't mix it with 9,10, 11, 8, or 7)
	if ( (iIndex == 12) || (iIndex == 13) )
	{
		$('#QInboxViewChkImg' + 9).attr('src', m_sRessIMGURL + 'trans.png');
		$('#QInboxViewChkImg' + 10).attr('src', m_sRessIMGURL + 'trans.png');
		$('#QInboxViewChkImg' + 11).attr('src', m_sRessIMGURL + 'trans.png');
		$('#QInboxViewChkImg' + 8).attr('src', m_sRessIMGURL + 'trans.png');
		$('#QInboxViewChkImg' + 7).attr('src', m_sRessIMGURL + 'trans.png');
		$('#QInboxViewChkImg' + 13).attr('src', m_sRessIMGURL + 'trans.png');
		$('#QInboxViewChkImg' + 12).attr('src', m_sRessIMGURL + 'trans.png');
	}

	//unselect 12 with 9,10, and aa
	if ( (iIndex == 9) || (iIndex == 10) || (iIndex == 11) )
	{
		$('#QInboxViewChkImg' + 12).attr('src', m_sRessIMGURL + 'trans.png');
		$('#QInboxViewChkImg' + 13).attr('src', m_sRessIMGURL + 'trans.png');
	}

	
	//user can only select one 4|5|6
	if ( (iIndex == 4) || (iIndex == 5) || (iIndex == 6) )
	{
		$('#QInboxViewChkImg' + 4).attr('src', m_sRessIMGURL + 'trans.png');
		$('#QInboxViewChkImg' + 5).attr('src', m_sRessIMGURL + 'trans.png');
		$('#QInboxViewChkImg' + 6).attr('src', m_sRessIMGURL + 'trans.png');
	}

	$('#QInboxViewChkImg' + iIndex).attr('src', m_sRessIMGURL + sIMGICO);
	
	//
	m_bNewQuickViewOpt = true;
	
}

function fnLoadMailFilters()
{
	//check for saved last Quick Viwes
	$.ajax({
		     type: "GET",
		     dataType: "json",
		     url: '../../app/InboxFilters.asp',
		     data: "action=list",
		     success: function(data) {
		     

		     	//did we get the saved JSON filters?
		     	if ( data.length > 0 )
		     	{
			     	var oJSON = data;
					for (var i=0; i < oJSON.length; i++)
					{
						iFilterID 	= oJSON[i]['iFilterID'];
						iMemberID 	= oJSON[i]['iMemberID'];
						sFilterName = oJSON[i]['nvcFilterName'];
						sFilters	= oJSON[i]['nvcFilters'];
						sEmails 	= oJSON[i]['nvcEmails'];
						sFolderGUID = oJSON[i]['nvcFolderGUID'];

					}
				}

		     	
		     	alert( fnTOOL_JSONtoTEXT(data) );
		     			 
		     }

	});
}

function fnSaveMailFilters(sFilterName, sFilters, sFromEmails, sFolderGUID, bMainFilter, sQuickViewTreeText, bOpenIt, sTextTitle)
{
	$.ajax({
		     type: "GET",
		     url: '../../app/InboxFilters.asp',
		     data: "action=add&Filters=" + encodeURIComponent(sFilters) + "&FilterName=" + encodeURIComponent(sFilterName) + "&FolderGUID=" + encodeURIComponent(sFolderGUID) + "&FromEmails=" + encodeURIComponent(sFromEmails) + "&MainFilter=" + bMainFilter,
		     success: function(data) {
		     		     	
		     	var iFilterID = data;
				fnAddInboxQickViewDir(iFilterID, sQuickViewTreeText, sFilters, sFromEmails, sFolderGUID, bMainFilter, sTextTitle);
	
				//open the viwe
				if (bOpenIt)
					fnSwitchQickViewFilters( (m_iQuickViewStartIndex + m_iQuickViewTotal) - 1);
		     	
		     }
	});
}

function fnUpdateMailFilters(iFilterID, sFilterName, sFilters, sFromEmails, sFolderGUID, bMainFilter)
{
	$.ajax({
		     type: "GET",
		     url: '../../app/InboxFilters.asp',
		     data: "action=update&FilterID=" + iFilterID + "&Filters=" + encodeURIComponent(sFilters) + "&FilterName=" + encodeURIComponent(sFilterName) + "&FolderGUID=" + encodeURIComponent(sFolderGUID) + "&FromEmails=" + encodeURIComponent(sFromEmails) + "&MainFilter=" + bMainFilter,
		     success: function(data) {
		     		     	
		     	
		     }
	});
}


function fnCheckFilterFromEmailsPOP(oObj)
{

	var sFromEmailEmails = $(oObj).val();
		
	if ( fnTrim(sFromEmailEmails).length == 0 )
	{
		document.getElementById("mPOPOptFiltersFromEmails").style.visibility = "hidden";
	}

}



//:::::::
//:::::::
function fnTOOL_JSONtoTEXT(oJSON)
{
	var items = [];
	items.push( "Total nodes:" + oJSON.length + "\n\n" );
	
	for (var i=0; i < oJSON.length; i++)
	{
		items.push( "-- node[" + i +  "]:\n" );
		
		//alert(oJSON[i]['iMemberID'])
		
		$.each( oJSON[i], function( key, val ) {
			items.push( key + ":" + val + "\n" );
		});
		
		items.push( "\n" );    	
	}

	return(items.join(""));
}


function fnGetInboxFromEmails()
{
	var sEmailAddresses = '';
	
	var iTotalFromEmails = 0; 
	$('.clsInboxFromEmails').each(function() { 	
	
		if (sEmailAddresses == '')
		{	
			sEmailAddresses = $(this).attr('title');
		}else
		{
			sEmailAddresses += ', ' + $(this).attr('title');
		}
				
		iTotalFromEmails += 1 	
	});


	return(sEmailAddresses);

}

function fCheckInboxFromEmailsExist(sNewEmail)
{

	bEmailExist = false;
	
	$('.clsInboxFromEmails').each(function() { 	
		
		if ( fnTrim($(this).attr('title')).toLowerCase() == fnTrim(sNewEmail).toLowerCase() )
		{
			bEmailExist = true;
			return;
		}
			
	});

	return(bEmailExist);
}



//:::::::
//:::::::
function fnNewInboxQickView(bMainFilterView)
{

	var sEmailAddresses = '';
	var sFromEmailName = '';
	var bFromEmailOpt = false;
	var sTextTitle = '';

	//user selected From someone?
	if ( $('#QInboxViewChkImg13').attr('src').indexOf("trans.png") < 0 )
	{
		sEmailAddresses = fnGetInboxFromEmails();
		sFromEmailName = $('#txtFilterFromEmailsName').val();
		
		if ( fnTrim(sFromEmailName).length == 0 )
		{
			UpdateInboxAlert( mcLang.Text('lang_mfilter_40',1)  );
			fnQTitleInboxQickView(13,true);
			$('#txtFilterFromEmailsName').focus();
			return;
		}

	
		if ( sEmailAddresses.length == 0 )
		{
			UpdateInboxAlert(mcLang.Text('lang_mfilter_41',1)); 
			$('#txtFilterFromEmails').val('');

			fnQTitleInboxQickView(13,true);
			$('#txtFilterFromEmails').focus();			
			return;
		}
		
		bFromEmailOpt = true;
	}
	else
		bFromEmailOpt = false;
		
	var sQuickViewTreeText = '';
	var sFolderFetchFilter = '';

	$('.QInboxViewChk').each(function() { 		
		
		sIMGICO = $(this).attr('src');
		if ( sIMGICO.indexOf("trans.png") < 0 )
		{
			var qvIndex =  $(this).attr('qvIndex');
			var sTextVal = $('#InboxQView' + qvIndex).html();
			
			//if filter 13 (From someone), then use what the user typed instead
			if ( (qvIndex == '13') && (bFromEmailOpt) )
				sTextVal = sFromEmailName;
			
			if (sQuickViewTreeText == '')
			{	
				sQuickViewTreeText = sTextVal;
				sFolderFetchFilter = qvIndex;
			}else
				{
					sQuickViewTreeText += ', ' + sTextVal;
					sFolderFetchFilter += ',' + qvIndex;
				}
		}
   		   		
	});
	
	
	//check if the user already added the same viwe(s)....
	if ( fnCheckInboxViewExist(sFolderFetchFilter) )
	{
		//yup, viwe(s) exist, alert the user and exit...but ignore from-someone for now
		if( sEmailAddresses.length == 0 )
		{
			UpdateInboxAlert(mcLang.Text('lang_mfilter_47',1));
			return;
		}
	}
	
	//if we have sEmailAddresses, then add them too
	if( sEmailAddresses.length > 0 )
	{
		sTextTitle = sQuickViewTreeText + ' - ' + sEmailAddresses;
	}
	else
	{
		sFromEmailName = '';
		sEmailAddresses = '';
		sTextTitle = sQuickViewTreeText;
	}
	
	//add the filter to the dir treee and save it	
	if (bMainFilterView == false)
		fnSaveMailFilters(sFromEmailName, sFolderFetchFilter, sEmailAddresses, '/INBOX', false, sQuickViewTreeText, true, sTextTitle);
	else
	{

		// if nothing was selected then default to "To me"
		if (sQuickViewTreeText.length == 0)
		{
			/*
			iIndex = 8;
			$('#QInboxViewChkImg' + iIndex).attr('src', m_sRessIMGURL + 'small_checkmark.png'); 
			sInboxQuickViewTreeText = "To me";
			m_sFolderFetchFilter = iIndex;
			*/
			
			//FOR NOW DO NOTHING
		}
		else
		{

			$('#InboxQuickViewTree' + m_iQuickViewStartIndex).html( sQuickViewTreeText); 
			$('#dirtxt' + m_iQuickViewStartIndex).attr('title', sTextTitle);
			$('#udir' + m_iQuickViewStartIndex ).attr('udirFilter', sFolderFetchFilter );
			$('#udir' + m_iQuickViewStartIndex ).attr('FromEmails', sEmailAddresses);
			FilterID =  $('#udir' + m_iQuickViewStartIndex ).attr('filterid');
			
			//Update the main filter
			sFolderGUID = '/INBOX';
			bMainFilter = true;
			fnUpdateMailFilters(FilterID, sFromEmailName, sFolderFetchFilter , sEmailAddresses, sFolderGUID, bMainFilter);
			
			fnSwitchQickViewFilters(m_iQuickViewStartIndex);
		}
		
	
	}
		
	m_bNewQuickViewOpt = false;
	fnDocOnClick();


	
}


function fnCheckInboxViewExist(sNewViwes)
{

	//check all views
	var sQickViewFiltersList = ''; 
	for (var i = 0; i < m_iQuickViewTotal; i++) 
	{
		if ( $('#udir' + (m_iQuickViewStartIndex + i)).length )
		{
			//Viwe(s) exist
			if ( sNewViwes == $('#udir' + (m_iQuickViewStartIndex + i)).attr('udirFilter') )
				return(true);
		}
	}

	//
	return(false);

}


//:::::::
//:::::::
function fnQTitleInboxQickView(iView, bShow)
{

	$('.QInboxViewTitle').each(function() { 		
		$(this).css( "display", "none" );   		   		
	});
		
	
	//user selected From someone?
	if ( $('#QInboxViewChkImg13').attr('src').indexOf("trans.png") < 0 )
	{
		$('#QInboxQickViewTitle' + 13).css( "display", "" );
		
		if ( (bShow) && (iView == 300) )
		{
			$('#QInboxQickViewTitle' + 13).css( "display", "none" );
			$('#QInboxQickViewTitle' + 300).css( "display", "" );
		}
		
		return;
	}
	else
	{

		if (bShow)
			$('#QInboxQickViewTitle' + iView).css( "display", "" );
		else
		{
		
			$('#QInboxQickViewTitle' + 0).css( "display", "" );
		}
		
		document.getElementById("mPOPOptFiltersFromEmails").style.visibility = "hidden";

	}	
	
}


//:::::::
//:::::::
function fnMultiInboxQickView()
{
	if (m_bMultiInboxQuickView)
	{
		$("#QInboxViewChkMulti").prop('checked', false);
		m_bMultiInboxQuickView = false;
		
		fnOpenInboxQickView(8);
	}
	else
	{
		
		$("#QInboxViewChkMulti").prop('checked', true);
		m_bMultiInboxQuickView = true;
	}
}

//::::::::::::::::::::::::::::: Inbox Qick Views ENDS :::::::::::::::::::::::::::::




//:::::::
//:::::::	
function fShowFoldersModule(o) 
{

	if(o.responseText !== undefined)
    {
		var sHTTPData = o.responseText; 
        o = null;

		if (sHTTPData == "")
			return;
		
		//::::save folders to storage
		//fnSotrageSave_MailFolders(sHTTPData);
		
		// restore mail filters HTML step 1
		var sHTMLMailFilters = $('#InboxQuickViewsLeftNav').html();

		
		document.getElementById('spanLeftNavFolders').innerHTML = fnBuildMailFolder(sHTTPData);

		// restore mail filters HTML step 2
		$('#InboxQuickViewsLeftNav').html(sHTMLMailFilters);
		
		$("#mLeftPanelBody").bind("contextmenu",function(e) {
		    e.preventDefault();
		    // create and show menu
		    fnDirContextMenu(e.pageX, e.pageY);
		
		});

	}
	
	fnGetInbox('/Inbox');
	
	$(function(){
	    mInlineEditMode = 'inbox';
        $('.editable').inlineEdit();
    });

}


//:::::::
//:::::::
function fnGetFoldersMovetoMenu()
{
}


//:::::::
//:::::::
function fnSDir(v_iIndex)
{
	
	//clear global Inbox MSGID
	m_MSGID = '';
	$('.MData').each(function() { 		 
		$(this).css('background-color', ''); 		   		
	});
	m_CurrentMsgIndex = -1;


	//Quick View?
	if ( v_iIndex >=  m_iQuickViewStartIndex )
	{
		m_bInQuickViewMode = true;
		m_bInitQuickViewClick = true;
	}
	else
	{
		//if we were in Quick Views, then reset the m_dtTSFirstMsg to last inbox check
		if (m_bInQuickViewMode)
		{
			m_dtTSFirstMsg = dtTSLastInbox;
		}
		
		m_bInQuickViewMode = false;
		m_bInitQuickViewClick = false;
	}
	
	m_bInboxAutoNextPageCount = 1;
	
	if (m_ObjCurretnSelectedDir != null)
		YAHOO.util.Dom.removeClass(m_ObjCurretnSelectedDir, 'LeftPanelDirClick');
	
	m_ObjCurretnSelectedDir = document.getElementById('udir' + v_iIndex); 
	var v_sDirID = m_ObjCurretnSelectedDir.getAttribute('atrDID');
	
	//if search was used, then clear it
	fnmSearchClear(false);
	
	 
	//remove current opne message highlight if not checked 
	if ( $('#C' + m_CurrentMsgIndex).length )
	{
		ObjBox = document.getElementById("C" + m_CurrentMsgIndex);	    
		if (ObjBox.checked == false)
			YAHOO.util.Dom.setStyle(('MDD' + m_CurrentMsgIndex), 'background-color', '');			
	}

	if(YAHOO.util.Dom.hasClass(m_ObjCurretnSelectedDir, 'LeftPanelDirClick') ==false)
		YAHOO.util.Dom.addClass(m_ObjCurretnSelectedDir, 'LeftPanelDirClick');           
	
	fnApp(0,true);
	fnShowInbox(v_sDirID);

	m_iTotalIncomingMsg = 0;
	UpdatePageTitle(); 
	
	//do we need to refresh banners?
	fnRefreshBanners();

	//if(typeof f_ObjMainPanel.CheckMail =='function')	
}


//:::::::
//:::::::
function fnApp(v_iIndex, b_dir)
{
	
	if (m_ObjCurretnApp != null)
		YAHOO.util.Dom.removeClass(m_ObjCurretnApp, 'TopmenuSelect');
	
	m_ObjCurretnApp = document.getElementById('mApp' + v_iIndex); 
	
	if(YAHOO.util.Dom.hasClass(m_ObjCurretnApp, 'TopmenuSelect') ==false)
		YAHOO.util.Dom.addClass(m_ObjCurretnApp, 'TopmenuSelect');           
	
	m_iCurrentAppIndex = v_iIndex;
	
	document.getElementById("mdivApps").style.display = "none";
	
	$('#mMainPanelHead').css( "height", "30px");
	
	document.getElementById('mLeftPanelTitle').setAttribute('title','');
	
	//close Quick Reply for all apps except mail
	if (v_iIndex != 0)
		fnCloseQuickRTE();


	 switch (v_iIndex) 
     {
        case 0:   
         
        		document.getElementById('mdivApps').innerHTML = '';
        		$('#Msg_Panel_Inbox_Data').scrollTop(0);
        		 msUploaderApp = 'composer';
        		
        		 try {
					
					uploader.set("uploadURL", "/app/mfile.asp?UploaderApp=composer");					
					
				}
					catch (x) {
				
				}

                 if (b_dir == false)
                 	fnSDir(0);
                 	
                 document.getElementById('mLeftPanelTitle').innerHTML = mcLang.Text('lang_Gen_20',1) + "&nbsp;&nbsp;";
                 document.getElementById('mLeftPanelTitle').setAttribute('title', mcLang.Text('lang_Gen_11',0));
                 
                 $('#spanLeftNavContacts').css( "display", "none" );
                 $('#spanLeftNavFolders').css( "display", "block" );
                 
                 $('#spanAppTitle').html( fnGetAppIcon(v_iIndex) + m_sMailAppTxt );
                 
                 //rebind it for inline edit 
                 $("#mLeftPanelBody").bind("contextmenu",function(e) {
				    e.preventDefault();
				    // create and show menu
				    fnDirContextMenu(e.pageX, e.pageY);
				
				});
		         
				 fnShowMailMiniCal(false);        
                 break; 
                 
        case 1:   
        
                 fnOpenApp(v_iIndex);
                 $('#spanAppTitle').html( fnGetAppIcon(v_iIndex) + mcLang.Text('lang_Gen_5',0));
                 break; 

        case 2:   
                 fnOpenApp(v_iIndex);
                 break; 

        case 3:   
                 fnOpenApp(v_iIndex);
                 $('#spanAppTitle').html( fnGetAppIcon(v_iIndex) + m_sDriveAppTxt );
                 break; 

        case 4:   
                 fnOpenApp(v_iIndex);
                 $('#spanAppTitle').html( fnGetAppIcon(v_iIndex) + mcLang.Text('lang_Gen_6',0));
                 break; 

        case 5:   
                 fnOpenTranslatorApp();
                 break; 


        case 6:  
        		 fnSDir(0);
        		 m_iCurrentAppIndex = 6; 
        		 document.getElementById("mFolderData").style.display = "none";
                 fnOpenPopCollectorapp();	
                 $( ".LeftPanelDirClick" ).removeClass( "LeftPanelDirClick" );
                 break; 


        case 7:   
        
                 fnOpenApp(v_iIndex);
                 $('#spanAppTitle').html('Welcome');
                 break; 



        case 99:   
                 fnOpenApp(v_iIndex);
                 break; 
       
        default:
				YAHOO.util.Dom.addClass(m_ObjCurretnApp, 'TopmenuSelect'); 
    }

	fnGetAppIcon(v_iIndex);
}

function fnGetAppIcon(v_iIndex)
{

	if (mSkinUI != 'telmex')
		return ('');

	 switch (v_iIndex) 
     {
        case 0:   
                         
                 sAppIcon = '<img class="postLoadIMG" src="../../app/ress/theme/Telmex/IMG/main_correo.png"  width="26px" height="26px" alt="" />&nbsp;&nbsp;';      
                 break; 
                 
        case 1:   
        
                 sAppIcon = '<img class="postLoadIMG" src="../../app/ress/theme/Telmex/IMG/main_contacto.png"  width="26px" height="26px" alt="" />&nbsp;&nbsp;'; 
                 break; 

        case 2:   
                 sAppIcon = ''; 
                 break; 

        case 3:   
                 sAppIcon = '<img class="postLoadIMG" src="../../app/ress/theme/Telmex/IMG/main_drive.png"  width="26px" height="26px" alt="" />&nbsp;&nbsp;'; 
                 break; 

        case 4:   
                 sAppIcon = '<img class="postLoadIMG" src="../../app/ress/theme/Telmex/IMG/main_calendario.png" " width="26px" height="26px" alt="" />&nbsp;&nbsp;';  
                 break; 

        case 5:   
        
                 sAppIcon = ''; 
                 break; 


        case 99:   
                 sAppIcon = ''; 
                 break; 
       
        default:
				sAppIcon = ''; 
    }

	return(sAppIcon);

}


//:::::::
//:::::::
function fnOpenMsgRule()
{


	$.ajax({
     type: "POST",
     url: '../../filter/filter_set_v12.asp',
     data: '', 
     success: function(data) {
       
			$('#divMsgRuleBoxList').html(data);
			
				$(function() {
		
					var iTop =  ( ($(window).height() - $('#divMsgRuleMenu').outerHeight())/2) - 100;
					if (iTop < 20)
						iTop += 100
					
					    $('#divMsgRuleMenu').css({
			     		position:'absolute',
			     		display:'block',
			        	left: ($(window).width() - $('#divMsgRuleMenu').outerWidth())/2,
			        	top: iTop		    }); 
					});
					
					$("#MsgRule-fullscreen").css( "display", "" );
					$('#value2').val(messages.from_email);
					
					
				var arrFolders = $("#mInboxDirsList").children('a');
				var sHTMLDir = '<select name="folder">';
				m_iTotalSearchFolders = arrFolders.length - 1;
				for (var i=0; i < arrFolders.length - 1; i++ )
				{
					iIndex = $(arrFolders[i]).attr('atrindex') ;
					sHTMLDir += '<option value="' + $('#udir' + iIndex).attr('atrdid') + '">' + $(arrFolders[i]).html() + '</option>';
				}
				sHTMLDir += '</select>';
				$('#divMsgRuleFolders').html(sHTMLDir) ;

			
		}
   	});

	
}

function fnGetFiltersFoldersList()
{

		var arrFolders = $("#mInboxDirsList").children('a');
		var sHTMLDir = '';
		m_iTotalSearchFolders = arrFolders.length - 1;
		for (var i=0; i < arrFolders.length - 1; i++ )
		{
			iIndex = $(arrFolders[i]).attr('atrindex') ;
			sHTMLDir += '<option value="' + $('#udir' + iIndex).attr('atrdid') + '">' + $(arrFolders[i]).html() + '</option>';
		}
		
		return(sHTMLDir);
}


//:::::::
//:::::::
function fnMsgRuleBoxClose()
{
	$("#divMsgRuleMenu").css( "display", "none" );
	$("#MsgRule-fullscreen").css( "display", "none" );
	$('#divMsgRuleBoxList').html('');
}


//:::::::
//:::::::
function fnMsgRuleOKBtn()
{
	if (fnIsEmpty(document.msgRuleform.value1.value) &&
	    fnIsEmpty(document.msgRuleform.value2.value) &&
	    fnIsEmpty(document.msgRuleform.value3.value) &&
	    fnIsEmpty(document.msgRuleform.value4.value) &&
	    (document.msgRuleform.criteria5.options[0].selected) == true &&
	    (document.msgRuleform.criteria6.options[0].selected) == true &&
	    (document.msgRuleform.criteria7.options[0].selected) == true &&
	    (document.msgRuleform.criteria8.options[0].selected) == true)
    {
		UpdateInboxAlert(mcLang.Text('lang_msearch_50',1));
		document.msgRuleform.value1.focus();
		return;
    }
    if (!(document.msgRuleform.criteria5.options[0].selected) == true)
	{
		var monthIndex = document.msgRuleform.month.options.selectedIndex;
		var monthVal = document.msgRuleform.month.options[monthIndex].value;
		var dayIndex = document.msgRuleform.day.options.selectedIndex;
		var dayVal = document.msgRuleform.day.options[dayIndex].value;
		var yearIndex = document.msgRuleform.year.options.selectedIndex;
		var yearVal = document.msgRuleform.year.options[yearIndex].value;
		if (!(fnValidDate(dayVal, monthVal, yearVal)))
		{
			UpdateInboxAlert(mcLang.Text('lang_msearch_51',1));
			return;
		}
	}
	if (!(document.msgRuleform.criteria6.options[0].selected) == true)
	{
		document.msgRuleform.type6.value = 7;
		if (fnIsEmpty(document.msgRuleform.value6.value))
		{
			UpdateInboxAlert(mcLang.Text('lang_msearch_46',1));
			document.msgRuleform.value6.focus();
			return false;
		}
		if (!fnValidcharsinstring(document.msgRuleform.value6.value.toLowerCase(),'0123456789'))
		{
			UpdateInboxAlert(mcLang.Text('lang_msearch_52',1));
			document.msgRuleform.value6.focus();
			return;
		}
		if (document.msgRuleform.value6.value == 0)
		{
			UpdateInboxAlert(mcLang.Text('lang_msearch_52',1));
			document.msgRuleform.value6.focus();
			return;
		}
	}
	if (!(document.msgRuleform.criteria7.options[0].selected) == true)
	{
		document.msgRuleform.type7.value = 9;
		//document.msgRuleform.value7.value = '';
	}
	if (!(document.msgRuleform.criteria8.options[0].selected) == true)
	{
		document.msgRuleform.type8.value = 8;
		//document.msgRuleform.value8.value = '';
	}


	UpdateInboxAlert(mcLang.Text('lang_msearch_53',1));
	
	document.getElementById("msgRuleform").submit();

	fnMsgRuleBoxClose(); 
}


//:::::::
//:::::::
function fnOpenTranslatorApp(sMode)
{
	$(function() {
		
			var iTop =  ( ($(window).height() - $('#divTranslatorMenu').outerHeight())/2) - 100;
			if (iTop < 20)
				iTop += 100
		
		    $('#divTranslatorMenu').css({
     		position:'absolute',
     		display:'block',
        	left: ($(window).width() - $('#divTranslatorMenu').outerWidth())/2,
        	top: iTop		    });
		});
		
		//$('#MBoxDoneBtn').html('Done');
		
		
		$("#Translator-fullscreen").css( "display", "" );

		
		
		$('#TranslatorOpt' + 0).prop( "checked", false);
		$('#TranslatorOpt' + 1).prop( "checked", false);
		$('#TranslatorOpt' + 2).prop( "checked", false);
		$('#TranslatorOpt' + 3).prop( "checked", false);
		
		$('#rdbTranslatorMenu' + 99).prop( "checked", true);	
		$('#TranslatorLangMenuTxt').html(htmlDecode($('#' + 'rdbTranslatorMenu' + 99).parent().html())); 

		 
		$('textarea#translation_input').val(mcLang.Text('lang_trans_7',0));
		$('#translation_output').html('');
		
		if (sMode == 'rte')
			fnRTETranslatorApp();
		else
			$("#rteInsertTransTxt").css( "display", "none" );
		
		//$("#divMagicBoxMenu").css( "display", "none" );


}

function fnRTETranslatorApp()
{
	
	$("#rteInsertTransTxt").css( "display", "" );
	
	var myContent1;
	sMsgBody = $('#RichEditIFrameID').contents().find('body').html();
	
	
	/*
		$("body").find("*").not("a,img,br").each(function() {
    $(this).replaceWith(this.innerHTML);
	});
*/
	
	sMsgBody = sMsgBody.split('<div origmsg="yes"></div>');
	myContent1 = '<div>' + sMsgBody[0] + '</div>';
	myContent1 = myContent1.replace(/<br>/gi, "<br>\n");
    myContent1= myContent1.replace(/<\/p>/g,'</p>\n');
    myContent1= myContent1.replace(/<\/div>/g,'</div>\n');
    //myContent1= myContent1.replace(/<\/tr>/g,'</tr>\n\n');
	//myContent1= myContent1.replace(/<\/table>/g,'</table>\n\n');
	myContent1 = $("<div/>").html(myContent1).text();	
	sMsgBody = myContent1; 
	
	$('textarea#translation_input').val(sMsgBody);
}

function fnRTETranslateBtn()
{

			var myContent2;
			var myContent1;
			
			var sTranlsationTXT = $('#translation_output').html();
			
			if ( trim(sTranlsationTXT) < 2 )
			{
				fnTranslatorBoxClose();
				return;
			}
			
			sMsgBody = $('#RichEditIFrameID').contents().find('body').html();
			sMsgBody = sMsgBody.split('<div origmsg="yes"></div>');

			if ( sMsgBody.length > 1 )
			{
				myContent1 = '<div>' + sMsgBody[0] + '</div>';
				myContent2 = '<div>' + sMsgBody[1] + '</div>';				
				sMsgBody = sTranlsationTXT + '<br> <div origmsg="yes"></div>' +myContent2;
			}
			else
			{
				sMsgBody = sTranlsationTXT; 
			}
		
		
			
			if (sMsgBody.length > 2)	
				$('#RichEditIFrameID').contents().find('body').html(sMsgBody);
				
			fnTranslatorBoxClose();

}

//:::::::
//:::::::
function fnTranslatorBoxClose()
{
	$("#divTranslatorMenu").css( "display", "none" );
	$("#Translator-fullscreen").css( "display", "none" );
}

function fnTranslateBtn()
{

	if ( $('textarea#translation_input').val() == '' )
		return;

	var translation_input = $('textarea#translation_input').val();
	var sTranslateLang = $('input[name=rdbTranslatorMenu]:checked').val(); 
	
	//alert(translation_input + '\n' + sTranslateFrom )
	 
	sTranslateFrom = sTranslateLang.split('_')[0];
	sTranslateTo   = sTranslateLang.split('_')[1];

	//

	
	//TranslatorOpt0
	
	$('#translation_output').html(mcLang.Text('lang_Gen_9',0));
	
	translation_input = translation_input.replace(/\n/gi, "|*|");
		
	POSTData = 'translation_input=' + encodeURI(translation_input) + '&translate_menu=' + sTranslateLang + '&authormale=on&recipientmale=on&formal=on&translate=v12&translation_output=Translation+will+appear+here.&translate_to=' + sTranslateTo + '&translate_from=' + sTranslateFrom;
	
	$.ajax({
     type: "post",
     url: '../../app/translator.asp',
     data: POSTData, 
     success: function(data) {
       
			$('#translation_output').html(data);
		}
   });

}

//:::::::
//:::::::
function fnmTranslateFocus()
{
	var translation_input = $('textarea#translation_input').val();
	if ( translation_input == mcLang.Text('lang_trans_7',0) )
		 $('textarea#translation_input').val('');

}

function fnTranslatorSelect(iIndex)
{
	$('#rdbTranslatorMenu' + iIndex).prop( "checked", true);	
	$('#TranslatorLangMenuTxt').html(htmlDecode($('#' + 'rdbTranslatorMenu' + iIndex).parent().html())); 
}


//:::::::
//:::::::
function fnTranslatorBoxSelect(iIndex)
{
	if ( $('#TranslatorOpt' + iIndex).prop( "checked") )
		$('#TranslatorOpt' + iIndex).prop( "checked", false);
	else
		$('#TranslatorOpt' + iIndex).prop( "checked", true);
		
	fnShowPOPOpt('btnTranslatorLangOptMenu', 'mTranslatorOptMenu',0,0);
	
}


//:::::::
//:::::::
function fnOpenApp(v_iIndex)
{
	document.getElementById("mFolderData").style.display = "none";
	
	if (m_ObjCurretnSelectedDir != null)
		YAHOO.util.Dom.removeClass(m_ObjCurretnSelectedDir, 'LeftPanelDirClick');

	//hide minin cal
	fnShowMailMiniCal(false);
		
	switch (v_iIndex) 
    {
        case 0:  
        		 //mail app...nothing here..check fnApp(...);
        		 msUploaderApp = 'composer';
        		 break;                  
        case 1:  
        		 //document.getElementById('mMainPanelTitle').innerHTML = '<div style="width:100%; text-align: center; padding-top:55px; padding-left:25px; font-size: 18px; font-weight:bold; line-height:48px; color:#708194"><img  height="48" src="' + m_sRessIMGURL + 'notepad_2_icon&48.png" style="vertical-align: middle" width="48" />&nbsp;&nbsp;Contacts</div>';
                 
                 //$('#mMainPanelHead').css( "height", "64px");
                 //$('#mdivApps').css('overflow', 'hidden');
                 $('#mdivApps').css('overflow', '');
                 fnOpenContactapp();
                 
                 msUploaderApp = 'composer';
                 break; 
        case 2:  
				 document.getElementById('mMainPanelTitle').innerHTML = '<div style="width:100%; text-align: center; padding-top:55px; padding-left:25px; font-size: 18px; font-weight:bold; line-height:48px; color:#708194"><img  height="48" src="' + m_sRessIMGURL + 'calendar_2_icon&48.png" width="48" style="vertical-align: middle" />&nbsp;&nbsp;Calendar</div>'; 
                 break; 
        case 3:  
        		 
        		 fnOpenBackpackapp();	
        		 $('#mdivApps').css('overflow-y', 'auto');
        		 //document.getElementById('mMainPanelTitle').innerHTML = '<div style="width:100%; text-align: center; padding-top:55px; padding-left:25px; font-size: 18px; font-weight:bold; line-height:48px; color:#708194"><img  height="48" src="' + m_sRessIMGURL + 'db_icon&48.png" width="48" style="vertical-align: middle" />&nbsp;&nbsp;Backpack</div>'; 
                 break; 
        case 4:  
        		 fnOpenCalendarapp();
				 //document.getElementById('mMainPanelTitle').innerHTML = '<div style="width:100%; text-align: center; padding-top:55px; padding-left:25px; font-size: 18px; font-weight:bold; line-height:48px; color:#708194"><img  height="48" src="' + m_sRessIMGURL + 'phone_touch_icon&48.png" style="vertical-align: middle" width="48" />&nbsp;&nbsp;Calendar</div>'; 
                 break; 
        case 6:  
                 break;

        case 7:  
        

        
        		 fnOpenWelcomePage();
                 break; 


        case 99:  
				 document.getElementById('mMainPanelTitle').innerHTML = '<div style="width:100%; text-align: center; padding-top:55px; padding-left:25px; font-size: 18px; font-weight:bold; line-height:48px; color:#708194"><img  height="48" src="' + m_sRessIMGURL + '1359597990_4.png" style="vertical-align: middle" width="48" />&nbsp;&nbsp;V12 is Going To Kick Gmail\'s Butt!</div>'; 
                 break; 
        default:

				
    }

}

function fnAppMenu(e)
{

	if (mSkinUI == 'telmex')
		fnShowPOPOpt('dviAppDivBtn', 'mAppListMenu',0,29);
	else
		fnShowPOPOpt('dviAppDivBtn', 'mAppListMenu',0,9);
	e.stopPropagation();
}

function fnBIGRedBtn(e)
{

	switch (m_iCurrentAppIndex) 
     {
     
        case 0:  
        		 QComposer('n');
        		 break;                  
        case 6:  
        		 QComposer('n');
        		 break;    

       case 1:  
        		 fnAddNewContact();
                 break; 
                 
        case 3:  
        		 //For MagicBox ::::::
        		 mbDropMode = true;	                
	   
        		 if (m_bUploaderBusy == false) 
        		 {
        		 	fnRTEClose();    		 
        		 	InitQuickAttach('backpack');
                 }
                 break; 

        case 4:  
        		 fnCalendarNewAction('appointment');
                 break; 

        case 7:  
        		//fnSDir(0);
        		 QComposer('n');
        		 break;      
        default:
				
    }


}


function fnShowMailMiniCal(bShow)
{

	if (m_iCurrentAppIndex != 0)
	{
		$('#divMagicBox').css('height','0px');
		return;
	}
	

	if (mBMiniCalOpen && bShow)
	{
		fnHideMailMiniCal();
		return;
	}
	
	if (bShow == false)
	{
		if( mBMiniCalOpen)
			$('#divMagicBox').css('height','217px');
		else
			$('#divMagicBox').css('height','22px');
		
		fnCheckFolderScroll();				
		return;
		
	}
	
	
	$('#MiniCalmailico').attr('title', m_sMiniCalMailTitleH)
	
	mBMiniCalOpen = true;

	$('#ifm_mini_cal_mail').attr('src', "../../calendar/SideCallPanel.asp")
		
	$('#divMagicBox').css('height','217px');
	$('#ifm_mini_cal_mail').css('display','');
		
	fnCheckFolderScroll();
}

function fnHideMailMiniCal()
{
	$('#MiniCalmailico').attr('title', m_sMiniCalMailTitleS)
	mBMiniCalOpen = false;
	$('#ifm_mini_cal_mail').css('display','none');
	$('#divMagicBox').css('height','22px');
	fnCheckFolderScroll();
}


//:::::::
//:::::::
function fnOpenWelcomePage()
{
	document.getElementById('mMainPanelTitle').innerHTML = ' ';	
	
	$('#spanLeftNavFolders').css( "display", "block" );	
	YAHOO.util.Dom.setStyle('mdivApps', 'height', ((mimMainPanelHeight - 50) + "px"));
		
	document.getElementById('mdivApps').innerHTML = '<iframe id="ifm_apps" frameborder="0" border=0 name="ifm_apps" src="http://www.spray.se/mail/valkommen/start-gratis.php" width="100%" height="100%" style="background-color:#fff;padding-top:0px; BORDER: #ffffff 0px solid; overflow-x: hidden; overflow-y: scroll" allowTransparency  borderwidth="0"></iframe>';
	
	$('#ifm_apps').attr('src',msWelcomePageURL);
			
	$('#mdivApps').css( "display", "block" );


}

//:::::::
//:::::::
function fnOpenCalendarapp()
{

	$('#spanLeftNavFolders').css( "display", "none" );
	
	document.getElementById('mLeftPanelTitle').innerHTML = '&nbsp;' + mcLang.Text('lang_cal_4',1) + '&nbsp;&nbsp;&nbsp;<div class="RedBtnDivide" style="display:inline-block; width:4px; height:25px; line-height:30px; padding:0px;  margin:0px; position:absolute"></div><div onclick="fnShowCalendarNewOpt(event)" alt="' + mcLang.Text('lang_mail_46',1) + '" style="padding:10px; padding-right:20px ; padding-left:20px; text-align:center; display:inline-block; background-color:"><img onclick="fnShowCalendarNewOpt(event)" alt="' + mcLang.Text('lang_mail_46',1) + '" height="4" src="' + m_sRessIMGURL + 'arrow_8_white.png" width="8" /></div>';
	
	
	var sHTML = ''+
				'<a href="JavaScript:fnChangeCalType(\'today\')" id="cal_today" class="LeftPanelDir LeftPanelDirClick"><img atrshow="0" style="border:0px; width:10px; height:10px" src="' + m_sRessIMGURL + 'trans.png">&nbsp;' + mcLang.Text('lang_mail_63',1) + '</a>' +
				'<a href="JavaScript:fnChangeCalType(\'day\')" id="cal_day" class="LeftPanelDir"><img atrshow="0" style="border:0px; width:10px; height:10px" src="' + m_sRessIMGURL + 'trans.png">&nbsp;' + mcLang.Text('lang_msearch_24',1) + '</a>' +
				'<a href="JavaScript:fnChangeCalType(\'week\')" id="cal_week" class="LeftPanelDir"><img atrshow="0" style="border:0px; width:10px; height:10px" src="' + m_sRessIMGURL + 'trans.png">&nbsp;' + mcLang.Text('lang_cal_5',1) + '</a>' +
				'<a href="JavaScript:fnChangeCalType(\'month\')" id="cal_month" class="LeftPanelDir"><img atrshow="0" style="border:0px; width:10px; height:10px" src="' + m_sRessIMGURL + 'trans.png">&nbsp;' + mcLang.Text('lang_msearch_11',1) + '</a>' +
				'<a href="JavaScript:fnChangeCalType(\'year\')" id="cal_year" class="LeftPanelDir"><img atrshow="0" style="border:0px; width:10px; height:10px" src="' + m_sRessIMGURL + 'trans.png">&nbsp;' + mcLang.Text('lang_cal_6',1) + '</a>' +	
				'<iframe id="ifm_mini_cal_app" frameborder="0" border=0 name="ifm_mini_cal_app" src="../../calendar/SideCallPanel.asp" width="175px" height="195px" style="padding-top:10px; padding-left:10px;;BORDER: #ffffff 0px solid; overflow-x: hidden; overflow-y: hidden" allowTransparency  borderwidth="0"></iframe>';

						
	document.getElementById('mMainPanelTitle').innerHTML = ' ';		

	
	document.getElementById('spanLeftNavContacts').innerHTML = sHTML;
	$('#spanLeftNavContacts').css( "display", "block" );
	
	YAHOO.util.Dom.setStyle('mdivApps', 'height', ((mimMainPanelHeight - 50) + "px"));
	
	
	document.getElementById('mdivApps').innerHTML = '<iframe id="ifm_apps" frameborder="0" border=0 name="ifm_apps" src="about:blank" width="100%" height="100%" style="background-color:#fff;padding-top:0px; BORDER: #ffffff 0px solid; overflow-x: hidden; overflow-y: scroll" allowTransparency  borderwidth="0"></iframe>';

	//$('#ifm_apps').contents().find("html").html('');
	
	var d = new Date();
	sTodayDate = (d.getMonth() + 1) + '/' + d.getDate() + '/' + d.getFullYear();

	$('#ifm_apps').attr('src','../../calendar/today.asp?Date=' + sTodayDate +'&ss=' + guid());
			
	$('#mdivApps').css( "display", "block" );
	
	


	
	fnCheckFolderScroll();
	

}



//:::::::
//:::::::
function fnOpenContactapp()
{
	var sContactsOrder = fnSotrageLoad_ContactsOrder();

	if ( sContactsOrder != false )
	{
		G_ViewSort = parseInt(fnGetUrlParameter(sContactsOrder, 'sortby'));
		G_ViewType = fnGetUrlParameter(sContactsOrder, 'ViewType');
		G_DispType = fnGetUrlParameter(sContactsOrder, 'DispType');
		//alert('G_ViewSort:' + G_ViewSort + '\n' + 'G_ViewType:' + G_ViewType + '\n' + 'G_DispType:' + G_DispType + '\n')
	}
	
	$('#spanLeftNavFolders').css( "display", "none" );
	
	document.getElementById('mLeftPanelTitle').innerHTML = '&nbsp;' + mcLang.Text('lang_cont_131',1) + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<div class="RedBtnDivide" style="display:inline-block; width:4px; height:25px; line-height:30px; padding:0px;  margin:0px; position:absolute"></div><div onclick="fnShowContactNewOpt(event)" alt="' + mcLang.Text('lang_mail_46',1) + '" style="padding:10px; padding-right:20px ; padding-left:20px; text-align:center; display:inline-block; background-color:"><img onclick="fnShowContactNewOpt(event)" alt="' + mcLang.Text('lang_mail_46',1) + '" height="4" src="' + m_sRessIMGURL + 'arrow_8_white.png" width="8" /></div>';
	
	
	var sHTML = ''+
				'<a href="JavaScript:fnChangeConType(\'private\')" id="cont_private" class="LeftPanelDir"><img atrshow="0" style="border:0px; width:10px; height:10px" src="' + m_sRessIMGURL + 'trans.png">&nbsp;' + mcLang.Text('lang_cont_33',1) + '</a>' +
				'<a href="JavaScript:fnChangeConType(\'global\')" id="cont_global" class="LeftPanelDir LeftPanelDirClick"><img atrshow="0" style="border:0px; width:10px; height:10px" src="' + m_sRessIMGURL + 'trans.png">&nbsp;' + mcLang.Text('lang_cont_32',1) + '</a>' +
				'<a href="JavaScript:fnShowTags()" class="LeftPanelDir">&nbsp;<img id="mTagImg" style="width:10px; height:10px" src="' + m_sRessIMGURL + 'minus.png" alt="">&nbsp;' + mcLang.Text('lang_cont_34',1) + '</a>' +
				'<div id="divContactsTags">loading tags...</div>';
				
	document.getElementById('mMainPanelTitle').innerHTML = ' ' +
				'<span style="font-size: 14px;"><a  class="InboxActions" style="padding-right:0px; padding-left:5px" id="ckContacts" href="JavaScript:fnShowPOPOpt(\'ckContacts\', \'mContactsCheckBoxOptions\',0,0)">&nbsp;<input name="CallContact" id="CallContact" type="checkbox" value="ON" onclick="fnContactsCAll()" />&nbsp;&nbsp;<img alt="' + mcLang.Text('lang_mail_46',1) + '" height="4" src="' + m_sRessIMGURL + 'down_icon.png" width="8" />&nbsp;&nbsp;</a>&nbsp;' +
				'<a  class="InboxActions" style="display:none" href="JavaScript:fnDeleteContact()" id="btnContactDelete">' + mcLang.Text('lang_mail_22',1) + '</a>' +
				'<a  class="InboxActions" style="display:none" href="JavaScript:fnShowPOPOpt(\'btnContactSendMail\', \'mContactsEmailtMenu\',0,0)" id="btnContactSendMail">' + mcLang.Text('lang_cont_37',1) + '&nbsp;&nbsp;<img alt="' + mcLang.Text('lang_mail_46',1) + '" height="4" src="' + m_sRessIMGURL + 'down_icon.png" width="8" /></a>' +
				'<a  class="InboxActions" style="visibility:" id="btnContactsList" href="JavaScript:fnShowPOPOpt(\'btnContactsList\', \'mContactsListMenu\',0,0)"><span id="spantxtContacttype">' + mcLang.Text('lang_cont_33',1) + '</span>: <span id="spanContactsList">' + mcLang.Text('lang_cont_1',1) + '</span>&nbsp;&nbsp;<img alt="' + mcLang.Text('lang_mail_46',1) + '" height="4"  src="' + m_sRessIMGURL + 'down_icon.png" width="8" /></a></a>' +
				'<a  class="InboxActions" style="visibility:" id="btnContactsFields" href="JavaScript:fnShowPOPOpt(\'btnContactsFields\', \'mContactsFieldstMenu\',0,0)">' + mcLang.Text('lang_cont_36',1) + ': <span id="spanContactsFields">' + mcLang.Text('lang_cont_8',1) + '</span>&nbsp;&nbsp;<img alt="' + mcLang.Text('lang_mail_46',1) + '" height="4" src="' + m_sRessIMGURL + 'down_icon.png" width="8" /></a></a>' +
				'<span id="spanContMood" style="color:#454545; font-family:arial, helvetica, sans-serif; font-size: 12px;"></span>' +
				'&nbsp;&nbsp;&nbsp;' +
				'' +
				'<div id="divInboxOpt" style="color:#454545; display:inline-block; float: right; font-size: 12px;">' +
				'&nbsp;&nbsp;&nbsp;<span id="PagesDIV"></span>&nbsp;' +
				'<a  class="InboxActions" style="visibility:" id="btnContactsView" href="JavaScript:fnShowPOPOpt(\'btnContactsView\', \'mContactsViewtMenu\',0,0)">' + mcLang.Text('lang_cont_38',1) + ': <span id="spanContactsView">' + mcLang.Text('lang_cont_4',1) + '</span>&nbsp;&nbsp;<img alt="' + mcLang.Text('lang_mail_46',1) + '" height="4" src="' + m_sRessIMGURL + 'down_icon.png" width="8" /></a></a>' +
				'	<a  class="InboxActions" style="visibility:X" id="btnContactArrangeBy" href="JavaScript:fnShowPOPOpt(\'btnContactArrangeBy\', \'mContactsbtnArrangeBy\',-70,0)">' + mcLang.Text('lang_mail_47',1) + '&nbsp;&nbsp;<img alt="' + mcLang.Text('lang_mail_46',1) + '" height="4" id="mMainCheckOptImg" src="' + m_sRessIMGURL + 'down_icon.png" width="8" />&nbsp;&nbsp;' +
				'</div>' +
				'</<span>';			

	
	document.getElementById('spanLeftNavContacts').innerHTML = sHTML;
	$('#spanLeftNavContacts').css( "display", "block" );
	
	YAHOO.util.Dom.setStyle('mdivApps', 'height', ((mimMainPanelHeight - 50) + "px"));
	
	
	document.getElementById('mdivApps').innerHTML = '<iframe id="ifm_apps" frameborder="0" border=0 name="ifm_apps" src="about:blank" width="100%" height="100%" style="background-color:#fff;padding-top:0px; BORDER: #ffffff 0px solid; overflow-x: hidden; overflow-y: scroll" allowTransparency  borderwidth="0"></iframe>';

	//$('#ifm_apps').contents().find("html").html('');
	$('#ifm_apps').attr('src','../../contacts/contacts_sys.asp');

	$( ".LeftPanelDirClick" ).removeClass( "LeftPanelDirClick" );
	$( "#cont_private").addClass( "LeftPanelDirClick" );

	
	if (m_bPublicContacts == false)
	{
		$('#cont_global').css( "display", "none" );
	}

	
	//$$$$$$$$$$$$$$$$ fnChangeConType('private');
	
	
	$('#mdivApps').css( "display", "block" );
	//$('#mdivApps').fadeOut(500, function() { });	
	//$('#mdivApps').fadeIn(500, function() { });	
	

	fnBuildContactsTags();
	
	fnCheckFolderScroll();
	

}

/////// Pop Collector /////////////////////////////////////////////////////////  STARTS


var m_iTotalPOPAccounts = 0;
var m_sCurrentPOPID = '';
var m_sCurrentPOPIndex = 0;
var m_sCurrentPOPAXData = '';



//:::::::
//:::::::
function fnOpenPopCollectorapp()
{
	m_sCurrentPOPID = '';	
	
	document.getElementById('mMainPanelTitle').innerHTML = ' ' + 
				'<span style="font-size: 14px;"><a  class="InboxActions" title="' + mcLang.Text('lang_mail_107',1) + '" style="padding-right:0px; padding-left:5px" id="ckbackpack" href="JavaScript:fnShowPOPOpt(\'ckbackpack\', \'mPopCollectorCheckBoxOptions\',0,0)">&nbsp;<input name="CallBackpack" id="CallBackpack" type="checkbox" title="' + mcLang.Text('lang_mail_61',1) + '" value="ON" onclick="fnPOPCAll(this)" />&nbsp;&nbsp;<img alt="' + mcLang.Text('lang_mail_46',1) + '" height="4" src="' + m_sRessIMGURL + 'down_icon.png" width="8" />&nbsp;&nbsp;</a>&nbsp;' +
				'<a  class="InboxActions" style="display:" title="Add account" href="JavaScript:fnPOPEdit(0)" id="btnPOPAdd">' + m_sPOPAddLang  + '</a>' +
				'<a  class="InboxActions" style="display:none" title="Enable account"  href="JavaScript:fnPOPAC(8)" id="btnPOPEnable">' + mcLang.Text('lang_pop_20',1)  + '</a>' +
				'<a  class="InboxActions" style="display:none" title="Disable account" href="JavaScript:fnPOPAC(9)" id="btnPOPDisable">' + mcLang.Text('lang_pop_21',1) + '</a>' +
				'<a  class="InboxActions" style="display:none"title="Delete account"  href="JavaScript:fnPOPAC(5)" id="btnPOPDelete">' + mcLang.Text('lang_mail_22',1)  + '</a>';
								
	$('#mdivApps').css( "display", "block" );

		$.ajax({
		
		     type: "GET",
		     url: '../../app/PopCollector.asp',
		     data: "",
		     success: function(data) {
		     
		     	document.getElementById('mdivApps').innerHTML = '';
		     	
		     	var sHTML = '';	
		     
		     	var aDataPOP = data.split("@|-@");
		     	data = '';
		     	
		     	m_iTotalPOPAccounts = 0;
						
				for(var i=0; i < aDataPOP.length - 1; i++)
				{
					if ( aDataPOP[i].length < 10 )
					    		continue;
			
					POPID				= aDataPOP[i].split("|-|")[0];
					ServerName 			= aDataPOP[i].split("|-|")[1];
					Username 			= aDataPOP[i].split("|-|")[2];
					Port 				= aDataPOP[i].split("|-|")[3];
					Folder 				= aDataPOP[i].split("|-|")[4];
					bAutoCheck 			= aDataPOP[i].split("|-|")[5];
					AutoPOPIntervalMins = aDataPOP[i].split("|-|")[6];
					AccountName 		= aDataPOP[i].split("|-|")[7];
					sEnabled 			= aDataPOP[i].split("|-|")[8]; 
					sLastCheck			= aDataPOP[i].split("|-|")[9]; 
					
					
					sPOPInfo =	'<p style="line-height: 70%"><span id="POP3User' + i + '">' + Username + '</span></p>' + 	
								'<p style="line-height: 70%"><span id="POP3Server' + i + '">' + ServerName + ' (' + Port + ')' + '</span></p>' +		
								'<p style="line-height: 70%">' + m_sPOPLastcheck + ' ' + sLastCheck + ' </p>' + 
								'<div class="MSLine"></div>';

					
					if (bAutoCheck == "Yes" )		
						sPOPInfo += '<p style="line-height: 70%"><img height="16" src="' + m_sRessIMGURL + 'clock_auto.png" width="16" />&nbsp;&nbsp;' + mcLang.Text('lang_pop_2',1) + ' (' + AutoPOPIntervalMins + ')</p>';
					else
						sPOPInfo += '<p style="line-height: 70%"><img height="16" src="' + m_sRessIMGURL + 'clock_off.png" width="16" />&nbsp;&nbsp;' + mcLang.Text('lang_pop_3',1)  + '</p>';
					
					
					if (sEnabled == "Yes") 	
						sPOPInfo += '<p style="line-height: 70%"><img height="16" src="' + m_sRessIMGURL + 'check-16.png" width="16" />&nbsp;&nbsp;' + mcLang.Text('lang_pop_4',1) + '</p>';
					else
						sPOPInfo += '<p style="line-height: 70%"><img height="16" src="' + m_sRessIMGURL + 'error-16.png" width="16" />&nbsp;&nbsp;' + mcLang.Text('lang_pop_5',1) + '</p>';
		
					 	
					sHTML += '<div style="cursor: default; margin: 5px; float: left; height: 180px ! important; width: 320px ! important; border-width: 1px 1px 5px; border-style: solid; border-color: rgb(238, 238, 238); -moz-border-top-colors: none; -moz-border-right-colors: none; -moz-border-bottom-colors: none; -moz-border-left-colors: none; border-image: none; font-family: Arial,Helvetica,sans-serif; font-size: 12px; overflow: hidden;"  id="POPTBL' + i + '" cindex="' + i + '"  autocheck="' + bAutoCheck  + '" enabled="' + sEnabled  + '" popid="' + POPID + '" >' +	
								'<div onclick="top.fnCancelClick(event)" style="height:30px; line-height:30px;background-color:#F7F7F7; width: 100%; font-weight:bold"><div style="display:inline-block; float:left">&nbsp;<input type="checkbox" value="ON" style="" onclick="POPCBO(this, event)" id="POPCBC' + i + '">&nbsp;&nbsp; ' + AccountName + '</div><div  class="jqTootltip" title="' + mcLang.Text('lang_pop_19',1) + '" onclick="fnPOPCheckMail(\'' + POPID + '\', ' + i + ')" style="display:inline-block; float:right; color: #1b92d1 !important; cursor: pointer">' + m_sPOPCheckMail + '&nbsp;&nbsp;</div></div>	' +	
								'<div style="width: 60px;  height:101px;float:left; margin:5px; overflow:hidden; text-align:center; cursor:pointer" onclick="fnPOPCheckMail(\'' + POPID + '\', ' + i + ')" class="jqTootltip" title="' + mcLang.Text('lang_pop_19',1) + '">' +	
								'	<div style="font-size: 10px; color: rgb(183, 181, 182); " id="Prev0">&nbsp;<img height="48" src="' + m_sRessIMGURL + 'inbox-download-48.png" width="48" /></div>' +	
								'</div>	' +	
								'<div style="float:left; width:230px;height: 151px;  margin:5px; overflow:hidden; text-align:left; cursor:pointer" class="jqTootltip" title="' + mcLang.Text('lang_pop_18',1) + '" onclick="fnPOPEdit(\'' + POPID + '\', ' + i + ')" id="R' + i + '">' + sPOPInfo + '</div>' +	 
							'</div>	';	
							
					m_iTotalPOPAccounts += 1;
				}
				
				if (m_iTotalPOPAccounts == 0)
					sHTML = '<div class="MHEmpty">' + mcLang.Text('lang_pop_28',1) + '</div>'; 
				

						
				document.getElementById('mdivApps').innerHTML = sHTML ;	
				$(".jqTootltip").tipTip();	
				
				fnReselectPOPAcc();
				
				fnResizePage();
				
	   		}
	   	});
}

function fnReselectPOPAcc()
{

	for (var i=0; i < m_iTotalPOPAccounts; i++)
	{
		if( m_sSelectedPOPIndex.indexOf('|' + i + '|') != -1)
		{
			ObjBox = document.getElementById(("POPCBC" + i));
			ObjBox.click();	
		}
   
	 }
	 
	  m_sSelectedPOPIndex = '|';

}


//:::::::
//:::::::
function POPCBO(ObjBox, e)
{
	var ParentRow = ObjBox.parentNode.parentNode;
    var f_iIndex = ParentRow.getAttribute("cindex");
        
    if (ObjBox.checked)
		ObjBox.parentNode.parentNode.style.backgroundColor = sCheckboxCheckedColor;
     else
		ObjBox.parentNode.parentNode.style.backgroundColor = "";
            
	YAHOO.util.Event.stopPropagation(e);
	fnShowPOPActions();
}

function fnShowPOPActions()
{

	var sDisplayCSS = "none";		
	for (var i=0; i < m_iTotalPOPAccounts; i++)
	{
		    ObjBox = document.getElementById(("POPCBC" + i));
		    
            if (ObjBox == null)
	            continue;
	            
            if (ObjBox.checked)
            {
            	sDisplayCSS = "";
            	break;
            }     
	 }
	  
	document.getElementById("btnPOPEnable").style.display = sDisplayCSS;
	document.getElementById("btnPOPDisable").style.display = sDisplayCSS;
	document.getElementById("btnPOPDelete").style.display = sDisplayCSS;
}


function fnPopCollectorCheckBoxOpt(sType)
{

	var ParentRow;
//autocheck="' + bAutoCheck  + '" enabled="'

	for (var i=0; i < m_iTotalPOPAccounts; i++)
	{
	    ObjBox = document.getElementById(("POPCBC" + i));
		    
		if (ObjBox == null)
			continue;

		ParentRow = ObjBox.parentNode.parentNode;
		ParentBox = ObjBox.parentNode.parentNode.parentNode;
		
		ObjBox.checked = false;
		ParentRow.style.backgroundColor = "";
		      
        switch (sType) 
        {
            case 'all':   
				        ObjBox.click();				        
				        break;
    				    
            case 'active':   
                        if( ParentBox.getAttribute("enabled") == "Yes" )
                        	ObjBox.click();
				        break;
				        
            case 'disable':   
                        if( ParentBox.getAttribute("enabled") != "Yes" )
                        	ObjBox.click();
				        break;

            case 'auto':   
                         if( ParentBox.getAttribute("autocheck") == "Yes" )
                        	ObjBox.click();
				        break;


            case 'manual':   
                         if( ParentBox.getAttribute("autocheck") != "Yes" )
                        	ObjBox.click();
				        break;
	        
            case 'none':   
				        ObjBox.click();	
				        ObjBox.click();	
				        break;
			default:
						
        }

	}

}

function fnPOPCAll(ckBoxObj)
{
	for (var i=0; i < m_iTotalPOPAccounts; i++)
	{
	    ObjBox = document.getElementById(("POPCBC" + i));
		    
		if (ObjBox == null)
			continue;

		ObjBox.checked = ckBoxObj.checked;
		    
  
       if (ckBoxObj.checked)
			ObjBox.parentNode.parentNode.style.backgroundColor = sCheckboxCheckedColor;
		else
			ObjBox.parentNode.parentNode.style.backgroundColor = "";
        
                
	}
	
	m_bDontShowPOPOpt = true;    
	fnShowPOPActions();

}

var m_sSelectedPOPIndex = '';

function fnPOPAC(iAction)
{
	m_sSelectedPOPIndex = '|';

	var sPOPIDS = '';
	for (var i=0; i < m_iTotalPOPAccounts; i++)
	{
		ObjBox = document.getElementById(("POPCBC" + i));
		    
		if (ObjBox == null)
			continue;
   
       if (ObjBox.checked)
		{
			sPOPIDS += document.getElementById(("POPTBL" + i)).getAttribute("popid") + '|';
			
			//remember selected account
			if ( (iAction == 8) || (iAction == 9) )
				m_sSelectedPOPIndex +=  i + '|';
		}              
	}
	

	if ( (delemessageconf != '0') && (iAction == 5) )
	{
		inbox_confirmdelete = mcLang.Text('lang_cont_97',0);
		inbox_confirmdelete = inbox_confirmdelete.replace(/_xxbreaklinexx_/gi, "\n\n");
	
		if (confirm(inbox_confirmdelete) != true)
				    return;
	} 


	$.ajax({
		
		     type: "GET",
		     url: '../../app/PopCollector.asp',
		     data: "sAction=" + iAction + "&spopids=" + sPOPIDS,
		     success: function(data) {
		     	
				fnOpenPopCollectorapp();
	
	   		}
	});



}


function fnPOPBtnsInt()
{
	$("#btnPOP3ViewSave").css( "display", "" );
	$("#btnPOP3ViewDelete").css( "display", "" );
}

function fnPOPBtnSave()
{
	$("#btnPOP3ViewSave").css( "display", "" );
}

function fnPOPBtnSaveDone()
{
	fnOpenPopCollectorapp();
	fnPOP3ExitFullscreen();
}


function fnPOPCheckMail(iPOPID, iIndex)
{

	var iMsgDivTop = 80;
	var iMsgDivLeft= 120;
	
	var iCenterPos = (m_ClientWidth / 2) - (650 / 2) ;
	
	$("#POP3Status-fullscreen").css( "display", "" );
	$("#divPOP3StatusView").css( {'position' : 'absolute', 'left' : (iCenterPos + 'px'), 'top' : (iMsgDivTop + 'px'), 'display' : 'none'} );

    
    var iMsgDivHeight = 250 - (iMsgDivTop * 2);
	var iMsgDivWidth  = m_ClientWidth - (iMsgDivLeft * 2);

	$("#mPOP3StatusMainPanelHead").css( "visibility", "visible" );
		
	$('#divPOP3StatusView').width(450);
	$('#divPOP3StatusView').height(iMsgDivHeight + 35);
	

	$("#divPOP3StatusView").css( "visibility", "visible" );
	$("#divPOP3StatusView").css( "display", "" );


	m_sCurrentPOPIndex = iIndex;
	m_sCurrentPOPID = iPOPID;
	
	sStatus = '&nbsp;&nbsp;&nbsp;<img border="0" src="' + m_sRessIMGURL + 'small_loader.gif" align="absmiddle" width="16" height="16">&nbsp;&nbsp;' + mcLang.Text('lang_pop_10',1);
	$('#divPOPStatusConn').html(sStatus);
	
	sServerInfo = '<div style="PADDING-top: 8px; color:#000; FONT-SIZE: 18px; FONT-FAMILY: Verdana; color:#454545">' + $('#POP3Server' + m_sCurrentPOPIndex).html() + '<br>' + $('#POP3User' + m_sCurrentPOPIndex).html() + '</div>';
	$('#divPOPStatusInfo').html(sServerInfo);
	
		
	$.ajax({
		
		     type: "GET",
		     url: '../../options/pop_action.asp',
		     data: "sAction=" + 4  + "&spopids=" + iPOPID + '*1|',
		     success: function(data) {
		     
		     	m_sCurrentPOPAXData = data;
		     					
				if (m_sCurrentPOPAXData.split('|')[0] == "true")
    			{
        			// Authenticated
        			sStatus = '&nbsp;&nbsp;&nbsp;<img border="0" src="' + m_sRessIMGURL + 'small_loader.gif" align="absmiddle" width="16" height="16">&nbsp;&nbsp;' + mcLang.Text('lang_pop_11',1);
					$('#divPOPStatusConn').html(sStatus);
        			m_AutoCheckTimeID = window.setTimeout("fnPOPNewMsgsMsg()",1500); 
    			}
    			else
    			{	// Authentication failed!
        			sStatus = '&nbsp;&nbsp;&nbsp;<img width="16" height="16" border="0" align="absmiddle" src="../../options/warningi.gif">&nbsp;&nbsp;' + mcLang.Text('lang_pop_12',1);
					$('#divPOPStatusConn').html(sStatus)
					
					m_sCurrentPOPAXData = '';
    			}

				
	   		}
	});

}

function fnPOPNewMsgsMsg()
{

	//m_sCurrentPOPID = iPOPID;
	//m_sCurrentPOPAXData

    m_iTotalNewMsgs = parseInt(m_sCurrentPOPAXData.split('|')[1]) 
    var f_MsgNum = "";
    
    if (m_iTotalNewMsgs == 0)
    {        
        sStatus = '&nbsp;&nbsp;&nbsp;<img border="0" src="../../mail/infoi.gif" align="absmiddle" width="16" height="16">&nbsp;&nbsp;' + mcLang.Text('lang_pop_13',1);
		$('#divPOPStatusConn').html(sStatus);
        return;
    }
    else
    {
        //if (m_iTotalNewMsgs == 1)
        //    f_MsgNum = m_iTotalNewMsgs + ' <%=Get_Text(lang,"popsetup_one_mail") %>';
        //else
        //    f_MsgNum = m_iTotalNewMsgs + ' <%=Get_Text(lang,"popsetup_new_mail") %>';
    }
    
   
     sStatus = '&nbsp;&nbsp;&nbsp;<img border="0" src="' + m_sRessIMGURL + 'small_loader.gif" align="absmiddle" width="16" height="16">&nbsp;&nbsp;' + mcLang.Text('lang_pop_14',1);
	$('#divPOPStatusConn').html(sStatus);

    m_AutoCheckTimeID = window.setTimeout("fnPOPFetchNewMsgsMsg()",1500); 

}

function fnPOPFetchNewMsgsMsg()
{

	$.ajax({
		
		     type: "GET",
		     url: '../../options/pop_action.asp',
		     data: "sAction=" + 10  + "&spopids=" + m_sCurrentPOPID + '*1|',
		     success: function(data) {
		    
        		if (data.indexOf("*") >= 0)
            	{
					sStatus = '&nbsp;&nbsp;&nbsp;<img border="0" src="../../mail/infoi.gif" align="absmiddle" width="16" height="16">&nbsp;&nbsp;' + data.split('*')[0];
					$('#divPOPStatusConn').html(sStatus);

				}

		     	m_sCurrentPOPAXData = '';
		     	m_sCurrentPOPID = '';
				
	   		}
	});
 


}

//::::: STATUS POP STARTS



function fnPOP3StatusExitFullscreen()
{
	$("#POP3Status-fullscreen").css( "display", "none" );
	$("#divPOP3StatusView").css( "display", "none" );
	
	$("#mPOP3StatusMainPanelHead").css( "visibility", "hidden" );
	
	fnOpenPopCollectorapp();

}



//::::::STATUS POP ENDS


function fnPOPEdit(iPOPID, iIndex)
{
	var sURL = '../../options/pop_add_edit.asp';
	$("#btnPOP3ViewDelete").css( "display", "none" );
	$("#btnPOP3ViewSave").css( "display", "none" );
	
	if (iPOPID != 0)
	{
		sURL = '../../options/pop_add_edit.asp?sAction=3&PopID=' + iPOPID;
		m_sCurrentPOPID = iPOPID;
		m_sCurrentPOPIndex = iIndex;
	}
	else
		m_sCurrentPOPID = '';
	
	

	var iMsgDivTop = 80;
	var iMsgDivLeft= 120;
	
	var iCenterPos = (m_ClientWidth / 2) - (650 / 2) ;
	
	$("#POP3-fullscreen").css( "display", "" );
	$("#divPOP3View").css( {'position' : 'absolute', 'left' : (iCenterPos + 'px'), 'top' : (iMsgDivTop + 'px'), 'display' : 'none'} );

    
    var iMsgDivHeight = 700- (iMsgDivTop * 2);
	var iMsgDivWidth  = m_ClientWidth - (iMsgDivLeft * 2);

	$("#mPOP3MainPanelHead").css( "visibility", "visible" );
		
	$('#divPOP3View').width(760);
	$('#divPOP3View').height(iMsgDivHeight + 35);
	

	$("#divPOP3View").css( "visibility", "visible" );
	$("#divPOP3View").css( "display", "" );
	
	//set iframe height
	$('#ifm_POP3View').height(iMsgDivHeight - 5);
	
	$('#ifm_POP3View').attr('src','about:blank');
	//$('#ifm_POP3View').fadeOut(200, function() 
	//{ 	
		$("#ifm_POP3View").css( {'display' : ''} );
		$('#ifm_POP3View').attr('src',sURL);
	//});

}


function fnPOP3ExitFullscreen()
{
	$("#POP3-fullscreen").css( "display", "none" );
	$("#divPOP3View").css( "display", "none" );
	$('#ifm_POP3View').attr('src','about:blank');
	
	$("#mPOP3MainPanelHead").css( "visibility", "hidden" );
	
	$("#btnPOP3ViewSave").css( "display", "none" );
	
}

function fnPOP3ViewDelete()
{

	if (delemessageconf != '0')
	{
		inbox_confirmdelete = mcLang.Text('lang_cont_97',0);
		inbox_confirmdelete = inbox_confirmdelete.replace(/_xxbreaklinexx_/gi, "\n\n");

		if (confirm(inbox_confirmdelete) != true)
				    return;
	} 
		
	$.ajax({
		
		     type: "GET",
		     url: '../../app/PopCollector.asp',
		     data: "sAction=" + 5  + "&spopids=" + m_sCurrentPOPID + '|',
		     success: function(data) {
		     	
		     	fnPOP3ExitFullscreen();
				fnOpenPopCollectorapp(); 
	
	   		}
	});

}


function fnPOP3ViewSave()
{

	$("#ifm_POP3View")[0].contentWindow.sSavePOP();
}



/////// Pop Collector /////////////////////////////////////////////////////////  ENDS

/////// BACKPACK /////////////////////////////////////////////////////////  STARTS

function fnBackpackOpenEditTool(sFileID)
{
		//::::::::::::

		$.ajax({
		
		     type: "GET",
		     url: '../../app/slideshow_api.asp',
		     data: "slider=true&L=900&uidFileID=" + sFileID + '&ClientHeight=' + $(window).height() + '&ClientWidth=' + $(window).width(),
		     success: function(data) {

				//document.getElementById('image1_aviary').src = top.m_sAttach_PrevURL + data;
				launchEditor('image1_aviary', top.m_sAttach_PrevURL + data);

	
	   		}
	   	});

}

//:::::::
//:::::::
function fnChangeBackpackView(sView)
{

	if (m_sDriveViewMode != sView)		
		fnBackpackGetFolders(mBackpackFolderID);

	m_sDriveViewMode = sView;

    if (sView == 'thumbnails')
		document.getElementById("spanBackpacView").innerHTML = m_sDriveThumbV;

	if (sView == 'details')
		document.getElementById("spanBackpacView").innerHTML = m_sDriveDetailsV;
}

//:::::::
//:::::::
function fnOpenBackpackapp()
{

	fnRTEClose();
	
	document.getElementById('mdivApps').innerHTML = '';

	$('#spanLeftNavFolders').css( "display", "none" );
	
	//with drop down options
	//document.getElementById('mLeftPanelTitle').innerHTML = '&nbsp;Upload File&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<div style="border-left:1px #B42C2C solid;display:inline-block; width:4px; height:25px; line-height:30px; padding:0px;  margin:0px; position:absolute"></div><div onclick="fnShowContactNewOpt(event)" alt="more options" style="padding:10px; padding-right:20px ; padding-left:20px; text-align:center; display:inline-block; background-color:"><img onclick="fnShowContactNewOpt(event)" alt="more options" height="4" src="' + m_sRessIMGURL + 'arrow_8_white.png" width="8" /></div>';

	document.getElementById('mLeftPanelTitle').innerHTML = mcLang.Text('lang_drive_17',1) + '&nbsp;<span id="spanBackPackUploadLoader"></span>&nbsp;';
	
	document.getElementById('mMainPanelTitle').innerHTML = ' ' + 
				'<span style="font-size: 14px;"><a  class="InboxActions" style="padding-right:0px; padding-left:5px" id="ckbackpack" href="JavaScript:fnShowPOPOpt(\'ckbackpack\', \'mBackpackCheckBoxOptions\',0,0)">&nbsp;<input name="CallBackpack" id="CallBackpack" title="' + mcLang.Text('lang_mail_61',1) + '" type="checkbox" value="ON" onclick="fnBackpackCAll(this)" />&nbsp;&nbsp;<img alt="' + mcLang.Text('lang_mail_46',1) + '" height="4" src="' + m_sRessIMGURL + 'down_icon.png" width="8" />&nbsp;&nbsp;</a>&nbsp;' +
				'<a  class="InboxActions" style="display:none" href="JavaScript:fnDeleteContact()" id="btnBackpackRename">' + mcLang.Text('lang_drive_2',1) + '</a>' +
				'<a  class="InboxActions" style="display:none" href="JavaScript:fnRemoveBackpackShare()"  id="btnRemoveBackpackShare">' + mcLang.Text('lang_drive_49',1) + '</a>' +
				'<a  class="InboxActions" style="display:none" href="JavaScript:fnDeleteBackpackFile()" title="' + mcLang.Text('lang_mail_104',1) + '" id="btnBackPackDelete">' + mcLang.Text('lang_drive_4',1) + '</a>' +
				'<a  class="InboxActions" style="display:none" href="JavaScript:fnDownloadBackpackFile()" title="' + m_sDownloadMenuDownload + '" id="btnBackPackDownload">' + mcLang.Text('lang_drive_32',1) + '</a>' +
				'<a  class="InboxActions" style="display:none" href="JavaScript:fnEnableDisableSocial();fnShowPOPOpt(\'btnBackPackShare\', \'mBackPackShareOptMenu\',0,0)" title="' + m_sDriveMenuShare + '" id="btnBackPackShare">' + mcLang.Text('lang_drive_31',1) + '&nbsp;&nbsp;<img alt="' + mcLang.Text('lang_mail_46',1) + '" height="4" src="' + m_sRessIMGURL + 'down_icon.png" width="8" /></a>' +
				'<a  class="InboxActions" style="display:none" id="btnBackPackCopy" href="JavaScript:fnShowPOPOpt(\'btnBackPackCopy\', \'mBackPackDirsList\',0,0)" onclick="msBackPackMoveMode = \'copy\'" >' + mcLang.Text('lang_drive_50',1) + '&nbsp;&nbsp;<img alt="' + mcLang.Text('lang_mail_46',1) + '" height="4"  src="' + m_sRessIMGURL + 'down_icon.png" width="8" /></a></a>' +
				'<a  class="InboxActions" style="display:none" title="' + mcLang.Text('lang_mail_106',1) + '" id="btnBackPackMove" href="JavaScript:fnShowPOPOpt(\'btnBackPackMove\', \'mBackPackDirsList\',0,0)" onclick="msBackPackMoveMode = \'move\'">' + mcLang.Text('lang_drive_51',1) + '&nbsp;&nbsp;<img alt="' + mcLang.Text('lang_mail_46',1) + '" height="4" src="' + m_sRessIMGURL + 'down_icon.png" width="8" /></a></a>' +
				'<span id="spanContMood" style="color:#454545; font-family:arial, helvetica, sans-serif; font-size: 12px;"></span>' +
				'&nbsp;&nbsp;&nbsp;' +
				'' +
				'<div id="divInboxOpt" style="color:#454545; display:inline-block; displayx:none; float: right; font-size: 12px;">' +
				'<span id="BackPackstorage"></span>' +
				'	<a  class="InboxActions" style="display:" href="JavaScript:fnBackpackPhotosSlideshow(\'\')" id="btnBackPackPhotosSlideshow"><img  height="15" src="' + m_sRessIMGURL + 'preso_icon&16.png" width="15" style="vertical-align: middle" />&nbsp;' + mcLang.Text('lang_drive_27',1) + ' </a>&nbsp;' +
				'	<a  class="InboxActions" style="display:" href="JavaScript:fnBackpackStatistics()" id="btnBackPackPhotosSlideshow"><img  height="15" src="' + m_sRessIMGURL + 'basic1-109.png" width="15" style="vertical-align: middle" />&nbsp;' + mcLang.Text('lang_drive_28',1) + '</a>' +
				'	<a  class="InboxActions" style="display:; visibility:" id="btnBackpackView" href="JavaScript:fnShowPOPOpt(\'btnBackpackView\', \'mBackpackViewtMenu\',0,0)">' + mcLang.Text('lang_cont_38',1)  + ': <span id="spanBackpacView">' + m_sDriveThumbV + '</span>&nbsp;&nbsp;<img alt="' + mcLang.Text('lang_mail_46',1) + '" height="4" src="' + m_sRessIMGURL + 'down_icon.png" width="8" /></a></a>' +
				'	<a  class="InboxActions" style="display:none; visibility:X" id="btnContactArrangeBy" href="JavaScript:fnShowPOPOpt(\'btnContactArrangeBy\', \'mContactsbtnArrangeBy\',-50,0)">' + mcLang.Text('lang_mail_47',1) + '&nbsp;&nbsp;<img alt="' + mcLang.Text('lang_mail_46',1) + '" height="4" id="mMainCheckOptImg" src="' + m_sRessIMGURL + 'down_icon.png" width="8" />&nbsp;&nbsp;' +
				'</div>' +
				'</<span>';	
							
	YAHOO.util.Dom.setStyle('mdivApps', 'height', ((mimMainPanelHeight - 31) + "px"));
	
	$('#mdivApps').css( "display", "block" );
	
	fnChangeBackpackView(m_sDriveViewMode);
	
	mBackpackFolderID = 'backpack'; 

	fnBuildBackpackFolders('app');	
}

//:::::::
//::::::: NOT USED ####
function fnBackpackGetMainFolderID()
{

}

//:::::::
//:::::::
function fnBuildBackpackFolders(sType)
{
	/*
		"uidFolderID": "{64B3821C-8B98-4636-8254-2E6DF6CB7A9B}" ,
		"uidParentFolderID": "{90FD6A66-51B2-4D9D-B021-7148B08F1EFF}" ,
		"iMemberID": "7351" ,
		"iDomainID": "" ,
		"vcName": "Recycle Bin" ,
		"sdtCreated": "3/17/2005 12:41:00 PM" ,
		"sdtModified": "3/17/2005 12:41:00 PM" ,
		"iTotalItems": "" ,
		"iSize": "0" ,
		"iSizeMessageID": "0" ,
		"vcComments": "" ,
		"iFlags": "1" ,
		"bPublic": "False" ,
		"iIconType": "7" ,
		"tsAdded": "" ,
		"tsModified": ""
	*/
	//../../app/backpack_api.asp?action=listallfolders

	$.ajax({
	
     type: "GET",
     url: '../../app/backpack_api.asp',
     data: "action=listallfolders", 
     success: function(data) {
          
          //$('#divContactsTags').html(data);
     
          	aFolders = data.split("||");   	
			var sHTML = '';
			
			arrBackPackFoldersTree = [];
			m_sBackPackFoldersTree = '';
			m_iBackPackAdd_tab =0;
			m_iBackPackSideFolders = aFolders.length;
			sBackPackDirsList = '';
			
		    for(var i=0; i < aFolders.length; i++)
		    {
		    	if ( aFolders[i].length < 10 )
		    		continue;
		    		
		    	sSelectedClass = ''
		    	
		    	sFolderName = aFolders[i].split('!-!')[1];
		    	s_FolderID 	= aFolders[i].split('!-!')[0]
				switch (sFolderName) 
			    {
			            case 'My Documents':   
							        sFolderName = mcLang.Text('lang_drive_19',1);
							        m_sMyFiles_DocumentsID = s_FolderID + '|' + sFolderName;
							        break;
			            case 'My Notes':   
							        sFolderName = mcLang.Text('lang_drive_22',1);
							        m_sMyFiles_NoteID = s_FolderID + '|' + sFolderName;
							        break;
			            case 'My Pictures':   
							        sFolderName = mcLang.Text('lang_drive_20',1);
							        m_sMyFiles_PhotosID = s_FolderID + '|' + sFolderName;
							        break;
			            case 'My Music':   
							        sFolderName = mcLang.Text('lang_drive_21',1);
							        m_sMyFiles_AudioID = s_FolderID + '|' + sFolderName;
							        break;			           
			            case 'My Videos':   
							        sFolderName = mcLang.Text('lang_drive_24',1);
							        m_sMyFiles_VideosID = s_FolderID + '|' + sFolderName;
							        break;
			            case 'My Shares':   
							        sFolderName = mcLang.Text('lang_drive_23',1);
							        m_sBackPackSahresFolderID = s_FolderID;
							        break;
			            case 'Recycle Bin':   
							        sFolderName = mcLang.Text('lang_drive_18',1);
							        m_sBackPackTrashFolderID = s_FolderID;
							        break;
					    case 'Backpack':   
							        sFolderName = 'Drivetop';//mcLang.Text('Drivetop',1);
							        m_sMyFiles_DesktopID = s_FolderID + '|' + sFolderName;
							        msBackPackMainID = s_FolderID; 
							        
							        if (mBackpackFolderID == 'backpack')
							        {
							        	 sSelectedClass = ' LeftPanelDirClick ';
							        	 mBackpackFolderID = s_FolderID;
							       	}
							        	
									break;   
			            case 'Public Folders':   
							        sFolderName = mcLang.Text('lang_drive_52',1);
							        break;
			    }
			    			    				    
			    //backpack move/copy drop-menu
			    sBackPackDirsList += '<a id="BPDMDir' + i + '" class="menulink" href="JavaScript:fnMoveCopyBackpackFiles(\'' + s_FolderID + '\', ' + i + ')"> ' + sFolderName + '</a>';
		    	
		    	seditableClass = 'editable';
		    	sLeftPanelDirSys = '';
		    	
		    	if (aFolders[i].split('!-!')[2] == '1')
		    	{
		    		seditableClass = '';
		    		sLeftPanelDirSys = ' LeftPanelDirSys ';
		    	}
		    	
		    	sExpanIco = '<img  height="10" src="' + m_sRessIMGURL + 'trans.png" style="vertical-align: middle" width="10" />&nbsp;&nbsp;'
				
				if (i+1 < aFolders.length)
				{
					if ( s_FolderID == aFolders[i+1].split('!-!')[3] )
					{
						sExpanIco = '<img id="PBexpand' + i + '" onclick="CBBackPackHide(this, event, ' + i + ')" title="Show" height="10" src="' + m_sRessIMGURL + 'minus.png" style="vertical-align: middle" width="10" />&nbsp;'
					}
				}

				//*******
				if (sType == 'app')
				{				
					sHTML = '<a style="" id="uBPdir' + i + '" title="' + sFolderName + '" class=" ' + sSelectedClass + sLeftPanelDirSys + ' LeftPanelDir" parentid="' + aFolders[i].split('!-!')[3] + '" atrpd="0" atrsubdirtotal="0" atrdid="' + s_FolderID + '" atrindex="' + i + '" onmouseover="fnDirDragEnterBackPack(this)" atrdname="' + sFolderName + '" onmouseout="fnDirDragLeaveBackPack()" ddtype="dir" href="JavaScript:" onclick="fnOpenBackpackDir(\'' + s_FolderID + '\', this)" >' +
							'	<div class=" LeftPanelDirTxt ">' +
							'		<div id="dirtxt' + i + '" class="' + seditableClass  + '" atrdid="' + s_FolderID + '" style="width:112px;white-space:nowrap; overflow:hidden; text-overflow: ellipsis; display:inline-block;">' + sExpanIco + sFolderName + '</div>' +
							'	</div>' +
							'</a>';							
					arrBackPackFoldersTree.push({"HTML":sHTML,"ID":s_FolderID,"ParentID":aFolders[i].split('!-!')[3],"Name":sFolderName});
					
					//expand the folder?!
					if(g_sFoldersExpandDrive.indexOf(s_FolderID) != -1)
					{
						g_arrFoldersExpandIndexDrive.push(i);  
					}
				}	
				

							    
		    }
		    
		    
		    
			//*******
			if (sType == 'app')
			{	    
			    fnBackPackGEtSubs(0); 
			    
			    var scroll = $('#mLeftPanelBody').scrollTop();
			    
			    document.getElementById('spanLeftNavContacts').innerHTML = m_sBackPackFoldersTree;   
			    
			    if (mBackpackFolderID != msBackPackMainID)
			    	$("#mLeftPanelBody").scrollTop(scroll);
			    
			    CBBackPackHide($('#PBexpand0'), null, 0);
			    
			    if ( g_sFoldersExpandDrive == '')
			    	CBBackPackHide($('#PBexpand0'), null, 0);
			    

				//re-expand folders?!
				for ( var mi=0; mi < g_arrFoldersExpandIndexDrive.length; mi+=1 )
				{
					CBBackPackHide($('#PBexpand' + g_arrFoldersExpandIndexDrive[mi]), null, g_arrFoldersExpandIndexDrive[mi]);	
				}
				g_sFoldersExpandDrive = '';
				g_arrFoldersExpandIndexDrive = [];
 
				$('#spanLeftNavContacts').css( "display", "block" );
				
				var oObj = $('a[atrdid*="' + mBackpackFolderID + '"]');
				
				fnOpenBackpackDir(mBackpackFolderID, oObj);

			}
			
			document.getElementById('mBackPackDirsList').innerHTML = sBackPackDirsList;
			
			if (sType == 'magicbox')
			{
				return;
			}

			fnCheckFolderScroll();
			
			//hide horizontal scrollbar
			$('#mLeftPanelBody').css('overflow-x', 'hidden');
			
			/*
	    	$(function(){
	    	mInlineEditMode = 'backpack';
        	$('.editable').inlineEdit();
   			 });
			*/
			
			$( "#mLeftPanelBody").unbind( "contextmenu" );

			$("#spanLeftNavContacts").bind("contextmenu",function(e) {
			    e.preventDefault();
			    // create and show menu
			    fnBackPackDirContextMenu(e.pageX, e.pageY);
			});
			
		}

   });

	
}

//:::::::
//:::::::
function CBBackPackHide(Obj, e, iIndex)
{
    	
	var bExpanded = false;
	
	if ( $(Obj).length )
	{
		//collapse 
		if ( $(Obj).attr('src').indexOf('minus.png') > 0 )
		{
			bExpanded = true;
			$(Obj).attr('src', m_sRessIMGURL + 'plus.png');
			$(Obj).attr('atrShow','0');
			
			$(Obj).attr('title','Show');
				
			for(var i= (iIndex+1); i < arrBackPackFoldersTree.length; i++)
			{
				if ( $('#uBPdir' + i).attr('totalparents') <= $('#uBPdir' + iIndex).attr('totalparents') )
				{		
					break;		 
				}
				else
				{
					$('#uBPdir' + i).css( "display", "none" );
					if($('#PBexpand' + i).length )
					{
						$('#PBexpand' + i).attr('src', m_sRessIMGURL + 'plus.png');	
						$('#PBexpand' + i).attr('title','Show');
					}
				}
			}
	
			
		}
		//expand
		else
		{
			$(Obj).attr('src', m_sRessIMGURL + 'minus.png');
			$(Obj).attr('atrShow','1');
			
			$(Obj).attr('title','Hide');
			
		    for(var i= (iIndex+1); i < arrBackPackFoldersTree.length; i++)
			{
					if (arrBackPackFoldersTree[i].ParentID == arrBackPackFoldersTree[iIndex].ID )
					{
						$('#uBPdir' + i).css( "display", "" );
						if($('#PBexpand' + i).length )
						{
							$('#PBexpand' + i).attr('src', m_sRessIMGURL + 'plus.png');
							$('#PBexpand' + i).attr('title','Show');
						}
					}
			}
		
		}
		
	}
	
	fnCheckFolderScroll();
    
	if (e != null)    
		YAHOO.util.Event.stopPropagation(e);

}

//:::::::
//:::::::
function fnBackPack_findParents(index)
{
	var sParentID =  arrBackPackFoldersTree[index].ParentID;
	for(i= (index - 1); i >= 0; i--)
	{
		if ( sParentID == arrBackPackFoldersTree[i].ID )
		{
			m_iTotalParents +=1;
			sParentID = arrBackPackFoldersTree[i].ParentID;
		}
	}
}

//:::::::
//:::::::
function fnBackPackGEtSubs(iIndex)
{
    m_iTotalParents = 0;
	fnBackPack_findParents(iIndex)

    arrBackPackFoldersTree[iIndex].HTML= arrBackPackFoldersTree[iIndex].HTML.replace(/<a style=""/g, '<a totalparents=' + m_iTotalParents + ' style="padding-left:' + (m_iTotalParents * 10) + 'px"');
	m_sBackPackFoldersTree += arrBackPackFoldersTree[iIndex].HTML;

	iIndex +=1;
	
	if (iIndex < arrBackPackFoldersTree.length) 
	{
		fnBackPackGEtSubs(iIndex);
	}
}

//:::::::
//:::::::
function fnPackPack_Add_Tab(num) 
{
  var tab = ''
  
  for( var i=0; i <= num; i++ )
       tab += '------';
  
  return(tab);
}

//:::::::
//:::::::
function fnBackPackDirContextMenu(iMouseX, iMouseY)
{

	if (m_objDragDrop != null)
	{	
	
		//dir type
		if ($(m_objDragDrop).attr('ddType') == "dir")
		{
			var sDirName = $(m_objDragDrop).attr('atrDName');       
			iDirIndex = $(m_objDragDrop).attr('atrindex');
			dirID = $(m_objDragDrop).attr('atrdid');
			
			mPOPOptLastVisablesMenuID = null;
			fnShowPOPOpt(m_objDragDrop.id, 'mBackPackDirsOptMenu', 0,0);
			

			m_objDirContextMenu = m_objDragDrop; 
					
			if ($(m_objDirContextMenu).find('.editable').length)
			{
				document.getElementById("mBackPackDirsOptMenuRename").style.display = "";
				document.getElementById("mBackPackDirsOptMenuDelete").style.display = "";
				document.getElementById("mBackPackDirsOptMenudivide").style.display = "";
				
			}
			else
			{
				document.getElementById("mBackPackDirsOptMenuRename").style.display = "none";
				document.getElementById("mBackPackDirsOptMenuDelete").style.display = "none";
				document.getElementById("mBackPackDirsOptMenudivide").style.display = "none";
			}


			///////////
			var xy = YAHOO.util.Dom.getXY('mPOPOpt');
			var mPOPOpt_Height = $('#mPOPOpt').outerHeight();
			if ( (xy[1] + mPOPOpt_Height) > m_ClientHeight )
			{
					xy[1] = (m_ClientHeight - mPOPOpt_Height) - 20;
			}
			else
				xy[1] -= 0;
			YAHOO.util.Dom.setXY('mPOPOpt', xy);	
			///////////

			
			//alert(sDirName + dirID + '\n' + iMouseX + ' ' + iMouseY);
		}
	}

}

//:::::::
//:::::::
function fnBackpackGetStorage(bRefreshVal)
{

	$.ajax({
	     type: "GET",
	     url: '../../app/backpack_api.asp',
	     data: "action=storage", 
	     success: function(data) {
	     
	     		m_sBackPackStorage = data;
	     		
	     		//are we just refreshing the global var?
	     		if (bRefreshVal)
	     			return;
	          
	          	arrStorage = data.split("|"); 
	          	
	          	m_iUserPercentage = parseInt(arrStorage[0]);
				m_iUserSise		  = parseInt(arrStorage[1]);
				m_iMaxQuota		  = parseInt(arrStorage[2]);
				
				m_iMaxQuotaMSG = parseInt(m_iMaxQuota / 1000);
				
		     	sSotrageMsg = mcLang.Text('lang_drive_26',1);
				sSotrageMsg= sSotrageMsg.replace(/xxxx/gi, m_iUserPercentage);
				sSotrageMsg= sSotrageMsg.replace(/_xxStoragexx_/gi, m_iMaxQuotaMSG);
		  	    
			
      	
	          	if (m_iMaxQuota >= 1000)
	          	{
	          		sSotrageMsg += ' GB&nbsp;&nbsp;'
	          	}
	          	else
	          		sSotrageMsg += ' MB&nbsp;&nbsp;'
	          		
	          		
	          	//sSotrageMsg += '<div style="display:none; height:17px;width:158px;background: url(' + m_sRessIMGURL + 'meter_blank.png); color:#535353; text-align: center">' +
				//			   '	<div style="height:17px;width:60%;background: url(' + m_sRessIMGURL + 'meter_full.png); color:#535353; text-align: center">67%</div>' +
				//			   '</div>';

	          
	          	$('#BackPackstorage').attr('UserPercentage',m_iUserPercentage);
				$("#BackPackstorage").html(sSotrageMsg);  
				
			}
	   });


}


//:::::::
//:::::::
function fnBackpackGetFiles(uidFolderID, sFoldersHTML)
{

	/*

	"uidFileID": "{75E568E6-049B-456F-AA68-7E20AF2035C0}" ,
	"uidFolderID": "{90FD6A66-51B2-4D9D-B021-7148B08F1EFF}" ,
	"iEmailServerID": "52" ,
	"vcName": "2009-12-17_13_56_38-2_01.jpg" ,
	"vcType": "JPEG Image" ,
	"sdtCreated": "12/22/2009 11:10:00 AM" ,
	"sdtModified": "12/22/2009 11:10:00 AM" ,
	"vcAuthor": "kabed@mail2world.net" ,
	"iSize": "128798" ,
	"iTotalDownloads": "6" ,
	"vcComments": "" ,
	"iFlags": "0" ,
	"iMemberIDUploadedBy": "7351" ,
	"bPublic": "False" ,
	"uidMessageID": "" ,
	"tsAdded": "" ,
	"tsModified": "1387820877700" ,
	"vcMD5": "" ,
	"vcFolderName": "myBackpack" ,
	"uidParentFolderID": "" ,
	"iDomainID": "" ,
	"MemberID": "7351" ,
	"Username": "kabed" ,
	"DomainName": "mail2world.net" ,
	"MultiLevel": "False" ,
	"EmailServerName": "bzmail06oc" ,
	"DomainsDir": "DomainBiz" ,
	"FullPath": "\\bzmail06oc\DomainBiz\mail2world.net\kabed\Backpack\75E\75E568E6-049B-456F-AA68-7E20AF2035C0.pak" ,
	"bAttachFolder": "False"
	
	
	        	this.index  = f_iIndex;
        	this.FileID = f_sFileID;
        	this.bImg   = f_bImg;
        	this.name   = f_sName;
        	this.size   = f_sSize;
        	this.bBP    = f_bBP;
        	this.URL    = f_sURL;
       		this.icon   = f_sIcon;
       		this.sDate  = f_sDate;
	
	*/

	$.ajax({

     type: "GET",
     url: '../../app/backpack_api.asp',
     data: "action=getfiles&uidFolderID=" + uidFolderID + '&uidShareFolderID=' + m_sBackPackSahresFolderID, 
     success: function(data) {
          
          //$('#divContactsTags').html(data);
          	aFolders = [];
			aFolders = YAHOO.lang.JSON.parse(data);
			//$('#divContactsTags').html(aFolders[0].uidFolderID);
			
			var f_sAttachBulk = '';
			
			miTotalBackpackFile = 0;

          	var sHTML = '';
		    for(var i=0; i < aFolders.length; i++)
		    {				
				f_sFileName = aFolders[i].vcName
				var ext = f_sFileName.substr(f_sFileName.lastIndexOf('.') + 1);
				ext = ext.toLowerCase();
				bImage = false;

				if ( (ext == 'jpg') || (ext == 'png') || (ext == 'bmp') || (ext == 'jpeg') || (ext == 'gif') || (ext == 'tiff') || (ext == 'tif') )
				{
					sDownloadPath  = aFolders[i].uidFileID; 
					bImage = true;
				}
				else
				{
					imgprev_path = fnFindAttachIcon(aFolders[i].vcName);
					sDownloadPath = aFolders[i].uidFileID;
				}
				
				//if ( aFolders[i].vcType.length > 5 )	
				//	sDownloadPath = 'SHARED';
				
				
				 f_Size = aFolders[i].iSize;
	
									
				f_sAttachBulk = f_sAttachBulk + i + ',"' + aFolders[i].uidFileID + '",' + bImage + ',"' + aFolders[i].vcName + '",' + f_Size + ',false," fnBackPackHandelFile(\'' + sDownloadPath + '\', event, " + i + ", ' + bImage + ') ","", "' + aFolders[i].sdtCreated + '"' + '|-*_|';
				
				miTotalBackpackFile += 1;
		    }
		    
		    
		    var sShareNotice = '';
		    if (m_sBackPackSahresFolderID == mBackpackFolderID)
		    {
		    	//sShareNotice =  '<div style="padding:15px">Public files are files that anyone can access with a special "public link" you give them.You can share the public link in an email, text message, or even publish it to your Facebook, Twitter, or blog. It\'s a simple way to share large files with lots of people -- recipients don\'t need to create an accoun.'
		    	//sShareNotice += '&nbsp;&nbsp;Don\'t share files which are confidential, such as financial information, or which you do not have the right to distribute.<br><br></div>';
		    	
		    	sShareNotice =  '<div style="padding:15px">' + mcLang.Text('lang_drive_63',1)  + '</div>';
		    }

			
			fnShowBackPackActions();
			
			sExtraBackpack = '';
			
			
			
			sDriveFiles = '';
			if (miTotalBackpackFile > 0)
			{
				sDriveFiles = Thumbnail(f_sAttachBulk, true, sExtraBackpack);
				
			}
			

			
			document.getElementById('mdivApps').innerHTML = sShareNotice + '<br>' + sFoldersHTML + '<div style="display:block;  clear:both"></div>'  + sHTML + '<div id="DIVAttachPrev">' + sDriveFiles + '</div>';
			
			fnBackpackGetStorage(false);
			
			fnEnableDragnDropBackPack();
			
			

			if ( (miTotalBackpackFile + miTotalBackpackDirs) == 0 ) 
			{
				document.getElementById('mdivApps').innerHTML = sShareNotice + '<div class="MHEmpty">' + mcLang.Text('lang_drive_35',1)  + '<br><br><img  height="32" src="' + m_sRessIMGURL + '1389238545_open-file.png"  width="32" />&nbsp;' + mcLang.Text('lang_drive_62',1) + '</div><div id="DIVAttachPrev"></div>';
			}
			
			$(".jqTootltip").tipTip();			
						
			$('#CallBackpack').removeAttr('checked');
			
			//if ( uidFolderID == m_sBackPackSahresFolderID)
			//{
			//	$('#btnBackPackPhotosSlideshow').css( "display", "none" );
			//	$('#CallBackpack').attr("disabled", true);
			//}
			//else
			//{
				$('#CallBackpack').removeAttr("disabled");
				$('#btnBackPackPhotosSlideshow').css( "display", "" );
				//$('#btnRemoveBackpackShare').css( "display", "none" );
			//}
		}

   });

	
}

function formatSizeUnits(bytes){
/*
      if      (bytes>=1073741824) {bytes=(bytes/1073741824).toFixed(2)+' GB';}
      else if (bytes>=1048576)    {bytes=(bytes/1048576).toFixed(2)+' MB';}
      else if (bytes>=1024)       {bytes=(bytes/1024).toFixed(2)+' KB';}
      else if (bytes>1)           {bytes=bytes+' bytes';}
      else if (bytes==1)          {bytes=bytes+' byte';}
      else                        {bytes='0 byte';}
      return bytes;
      */
      
      if      (bytes>=1073741824) {bytes=(bytes/1073741824).toFixed(0)+' GB';}
      else if (bytes>=1048576)    {bytes=(bytes/1048576).toFixed(0)+' MB';}
      else if (bytes>=1024)       {bytes=(bytes/1024).toFixed(0)+' KB';}
      else if (bytes>1)           {bytes= '1 KB';}
      else if (bytes==1)          {bytes= '1 KB';}
      else                        {bytes= '1 KB';}
      return bytes;

}



//:::::::
//:::::::
function fnDrivePrev(uidFolderID)
{
	return;
	$.ajax({

     type: "GET",
     url: '../../app/DrivePrev.asp',
     data: "uidFolderID=" + uidFolderID + '&uidShareFolderID=' + m_sBackPackSahresFolderID, 
     success: function(data) {

			
			//$(".postLoadThumb").each(function() {   
		  	//	$(this).attr('src', $(this).attr('data-src'));
			//}); 		    
		}

   });

}


//:::::::
//:::::::
function fnBackPackGetFoldersMovetoMenu()
{
	var sDropFoldersHTML = '';

	for (var i=0; i < document.getElementById("TotalDirs").value; i++)
	{
		var FolderName = document.getElementById(("dirtxt" + i)).innerHTML;
		sDropFoldersHTML += '<a href="JavaScript:fnMoveInboxMsgs(' + i + ')" class="menulink">&nbsp;' + FolderName + '</a>';                    
	}
	
	sDropFoldersHTML += '<div class="MSLine"></div>';
	sDropFoldersHTML += '<a href="JavaScript:fnMoveToNewDir()" class="menulink">&nbsp;' + mcLang.Text('lang_mail_40',1) + '</a>';

	document.getElementById("mInboxDirsList").innerHTML = sDropFoldersHTML;
}


//:::::::
//:::::::
function fnBackpackGetFolders(uidFolderID) 
{

	//
	fnDrivePrev(uidFolderID);


	//document.getElementById("tiptip_holder").style.display = "none";
	
	mBackpackFolderID = uidFolderID;

/*

	"uidFolderID": "{64B3821C-8B98-4636-8254-2E6DF6CB7A9B}" ,
	"uidParentFolderID": "{90FD6A66-51B2-4D9D-B021-7148B08F1EFF}" ,
	"iMemberID": "7351" ,
	"iDomainID": "" ,
	"vcName": "Recycle Bin" ,
	"sdtCreated": "3/17/2005 12:41:00 PM" ,
	"sdtModified": "3/17/2005 12:41:00 PM" ,
	"iTotalItems": "" ,
	"iSize": "0" ,
	"iSizeMessageID": "0" ,
	"vcComments": "" ,
	"iFlags": "1" ,
	"bPublic": "False" ,
	"iIconType": "7" ,
	"tsAdded": "" ,
	"tsModified": ""


*/

	$.ajax({

     type: "GET",
     url: '../../app/backpack_api.asp',
     data: "action=getfolders&uidFolderID=" + uidFolderID, 
     success: function(data) {
          
          //$('#divContactsTags').html(data);
          
          	fnBackpackCheckBoxOpt('none');
          	          
          	aFolders = [];
			aFolders = YAHOO.lang.JSON.parse(data);
			
			var iDirsTotalFiles = 0;
			var iDirsTotalSize =  0;
			
			//$('#divContactsTags').html(aFolders[0].uidFolderID);
		
			miTotalBackpackDirs = 0;
          	var sHTML = '';
          	
          	sDriveOneFile  = m_sDriveOneFile.replace("xxxx ", "");
          	sDriveFiles =  m_sDriveFiles.replace("xxxx ", "");
          	
          	iNameWidth = '265px';
          	iDateWidth = '130px';
          	i_ClientWidth = $(window).width();
          	if ( i_ClientWidth <= 1024)
          	{
          		iNameWidth = '165px';
          		iDateWidth = '100px';
          	}
          	
		    for(var i=0; i < aFolders.length; i++)
		    {
		       	iDivWidth = 110;
		       	iDivNameWidth = 100;
		       	sEditStyleIco = "display:none";
		       	f_sDownloadURL = '';
		       	
		       	sSysfolderCss = '; font-weight:bold';
		       	
		       	sFolderName = aFolders[i].vcName;
		       	switch (sFolderName) 
			    {
			    	case 'Backpack':   
							        sFolderName = 'Drivetop'; //mcLang.Text('Drivetop',1);
                                    break;
			        case 'My Documents':
							        sFolderName = mcLang.Text('lang_drive_19',1);
							        break;
			        case 'My Notes':
							        sFolderName = mcLang.Text('lang_drive_22',1);
							        break;
			        case 'My Pictures':
							        sFolderName = mcLang.Text('lang_drive_20',1);
							        break;
			        case 'My Music':
							        sFolderName = mcLang.Text('lang_drive_21',1);
							        break;			           
			        case 'My Videos':
							        sFolderName = mcLang.Text('lang_drive_24',1);
							        break;
			        case 'My Shares':
							        sFolderName = mcLang.Text('lang_drive_23',1);
							        break;
			        case 'Recycle Bin':
							        sFolderName = mcLang.Text('lang_drive_18',1);
							        break;
			        case 'Public Folders':
							        sFolderName = mcLang.Text('lang_drive_52',1);
							        break;
					default:
									sSysfolderCss = '';
			    }
			    
			    sFolderIcon =  m_sRessIMGURL + '1389225692_folder.png';
			    if (mSkinUI == 'telmex')
			    	sFolderIcon = '../../app/ress/theme/Telmex/img/folder.png'; 

         		if (m_sDriveViewMode == 'thumbnails')
         		{
	         		sHTML += ''+
					         '<div style="width:' + iDivWidth + 'px; height:110px; font-family: arial,helvetica,sans-serif; font-size: 11px; text-align:center; color:#4c6776; float:left; padding-right:15px" bbViewDir="yes"  atrdid="' + aFolders[i].uidFolderID + '" atrindex="' + i + '" onmouseover="fnDirDragEnterBackPack(this)" onmouseout="fnDirDragLeaveBackPack()" ddtype="dir"   >' +
							 '	<div title="' + mcLang.Text('lang_drive_53',1) + '" class="jqTootltip" onclick="fnBackpackGetFolders(\'' + aFolders[i].uidFolderID + '\'), fnBackpackResetFolderSelect()" style="cursor:pointer; float:center;max-height: 150px; ; background-color:#fff; display:inline-block; padding-right:6px"><a class="backpackImgprev" style="display:inline-block"><img src="' + sFolderIcon + '" class="BPFolder"></a></div>' +
							 '	<div style="display:block;  clear:both;  height:22px; line-height:22px; width:' + iDivNameWidth  + 'px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap ' + sSysfolderCss + '">' + sFolderName + '</div>' + 
							 '</div>';
      			}
      			else
      			{
      			
      				f_Size = aFolders[i].iSize
      			
      				if (f_Size.length <=1 ) 
						f_Size = 1023;
					else
						f_Size = parseInt(f_Size);
											 	
					iDirsTotalSize  += f_Size;

					f_Size = ShowFileSize(f_Size); 
					//sName = ShowFileIcon(f_sName,0,'');

					sTotalFiles = '0 ' + sDriveFiles;
					if (aFolders[i].iTotalItems > 0)
					{
						sTotalFiles = parseInt(aFolders[i].iTotalItems)
						iDirsTotalFiles += sTotalFiles ;
						
						if (sTotalFiles == 1)
							sTotalFiles = sTotalFiles  + ' ' + sDriveOneFile;
						else
							sTotalFiles = sTotalFiles  + ' ' + sDriveFiles;
      				}
      				
      				var DigitalT = new Date(aFolders[i].sdtCreated);
      				if ( (slang == 'av') ||  (slang == 'es') || (mSkinUI == 'telmex') )
		    			FullTimeY =   (DigitalT.getDate() - 1) + '/' + (DigitalT.getMonth() + 1) + '/' + DigitalT.getFullYear(); 
		    		else
		    			FullTimeY = (DigitalT.getMonth() + 1) + '/' + (DigitalT.getDate() - 1) + '/' + DigitalT.getFullYear();
		    			
		    		if ( aFolders[i].iFlags == 1)
		    			FullTimeY = '';
		    		
         
			        sHTML += ''+
					         '<div class="MData" onclick="fnBackpackGetFolders(\'' + aFolders[i].uidFolderID + '\'), fnBackpackResetFolderSelect()" style="cursor:default; min-width:800px !important" bbViewDir="yes"  atrdid="' + aFolders[i].uidFolderID + '" atrindex="' + i + '" onmouseover="fnDirDragEnterBackPack(this)" onmouseout="fnDirDragLeaveBackPack()" ddtype="dir"   >' +
							 '  <div style="width:34px">&nbsp;&nbsp;</div>\n' +
							 '	<div title="' + mcLang.Text('lang_drive_53',1) + '" style="padding-right:6px; width:25px; padding-left:6px; cursor:pointer" class="BPFolder"><img src="' + sFolderIcon + '" style="width:20px; hegiht:20px; padding-top:4px" class="BPFolder"></div>' +
							 '	<div title="' + mcLang.Text('lang_drive_53',1) + '" style="width:' + iNameWidth + '; cursor:pointer" class="BPFolder">' + sFolderName + '</div>' + 
							 '  <div title="' + m_sDriveDateCreated + '" style="width:' + iDateWidth + '; text-align:right">&nbsp;&nbsp;' + FullTimeY + '</div>\n' +
			                 '  <div style="width:90px; text-align:right">&nbsp;&nbsp;' + sTotalFiles + '</div>\n' +
			                 '  <div style="width:70px; text-align:right">&nbsp;&nbsp;' + f_Size + '</div>\n' +
							 '</div>';

			                //'	<div style="width:265px"><a class="backpackImgprev" style="display:inline-block"><div class="BPFolder">' + sFolderName + '</div></div>' +
			                
      			}
      			
      			
				miTotalBackpackDirs += 1;	    
		    }
		    
		    
		    if ( (iDirsTotalFiles > 0) || (iDirsTotalSize >= 1023)  )
		    {
		    
		    	sTotalFiles = '';
				if (iDirsTotalFiles > 0)
				{
					if (iDirsTotalFiles == 1)
							sTotalFiles = iDirsTotalFiles  + ' ' + sDriveOneFile;
					else
							sTotalFiles = iDirsTotalFiles  + ' ' + sDriveFiles;
      				
      			}
	    

	     
		    	f_Size = ShowFileSize(iDirsTotalSize); 

							 
			        sHTML += ''+
					         '<div class="MData" style="border-bottom: 1px solid #fff" >' +
							 '  <div style="width:34px">&nbsp;&nbsp;</div>\n' +
							 '	<div style="padding-right:6px; width:25px; padding-left:6px" class="BPFolder"></div>' +
							 '	<div style="width:' + iNameWidth + '" ></div>' + 
							 '  <div  style="width:' + iDateWidth + '; text-align:right">&nbsp;&nbsp;</div>\n' +
			                 '  <div style="width:90px; text-align:right; font-weight:bold">&nbsp;&nbsp;' + sTotalFiles + '</div>\n' +
			                 '  <div style="width:70px; text-align:right; font-weight:bold">&nbsp;&nbsp;' + f_Size + '</div>\n' +
							 '</div>';
							 
			}
		    
		    
			fnBackpackGetFiles(uidFolderID, sHTML);
			fnBackPaclHighlightDir(uidFolderID);

			mBackpackFolderID = uidFolderID;
			
			
			$("#mdivApps").off("contextmenu");

			//folder's contextmenu ::::::::::::::::::::::::::
			$('#mdivApps').on('contextmenu', function(e) {
			 
			 	
			 
			 	////////////// BP folder?
			    if ( $(e.target).is(".BPFolder") )
			    {
			
					if (m_sDriveViewMode == 'details')
						uidFolderID = $(e.target).parent().attr('atrdid');
					else
				    	uidFolderID = $(e.target).parent().parent().parent().attr('atrdid');
				    	
				   	m_objDragDrop = $('a[atrdid*="' + uidFolderID + '"]');
					//document.getElementById("tiptip_holder").style.display = "none";
					//dir type
					if ($(m_objDragDrop).attr('ddType') == "dir")
					{
						var sDirName = $(m_objDragDrop).attr('atrDName');       
						iDirIndex = $(m_objDragDrop).attr('atrindex');
						dirID = $(m_objDragDrop).attr('atrdid');
						
						fnDocOnClick(); 
						mbMenuClosed = true;
						
						mPOPOptLastVisablesMenuID = null;
						
						if (m_sDriveViewMode == 'details')
	
							fnShowPOPOpt(e.target, 'mBackPackDirsOptMenu', 0,10);
						else
							fnShowPOPOpt(e.target, 'mBackPackDirsOptMenu', 0,34);
			
						m_objDirContextMenu = m_objDragDrop;	
						if ($(m_objDirContextMenu).find('.editable').length)
						{
							$('#mBackPackDirsOptMenuRename').css( "display", "" );
							$('#mBackPackDirsOptMenuDelete').css( "display", "" );
							$('#mBackPackDirsOptMenudivide').css( "display", "" );
							
						}
						else
						{
							$('#mBackPackDirsOptMenuRename').css( "display", "none" );
							$('#mBackPackDirsOptMenuDelete').css( "display", "none" );
							$('#mBackPackDirsOptMenudivide').css( "display", "none" );
	
						}	
						
					}
				
				}
				//////////////



			 	////////////// BP file?
			    if ( $(e.target).is(".BPFile") )
			    { 
			    	m_objDirContextMenu = $(e.target);
			    	
			    	var iIndex =  $(m_objDirContextMenu).attr('cindex');
			    	var ObjBox = document.getElementById(("pkc" + iIndex));
			    	
			    	
			    	if (ObjBox.checked == false)
			    		fnBackpackCheckBoxOpt('none');
			    		
			    	ObjBox.checked = false;
			    	$(ObjBox).click();
			    
			    	fnDocOnClick(); 
					mbMenuClosed = true;
					
					
					mPOPOptLastVisablesMenuID = null; 
					
					var iTotalSelected = 0;
					for (var i=0; i < miTotalBackpackFile; i++)
					{
					    ObjBox = document.getElementById(("pkc" + i));
						    
						if (ObjBox == null)
							continue;
				
						if (ObjBox.checked) 
						{
							iTotalSelected +=1;
							if (iTotalSelected >= 2)
								break;
						}
				    }
				    
				    if (iTotalSelected >= 2)
				    	$('#mBackPackFileOptMenuRename').css( "display", "none" );
				    else
				    	$('#mBackPackFileOptMenuRename').css( "display", "" );
				    
				     
					if (m_sDriveViewMode == 'details')
						fnShowPOPOpt(e.target, 'mBackPackFileOptMenu', 0,10); 
					else
						fnShowPOPOpt(e.target, 'mBackPackFileOptMenu', 0,34);
				
				}
				//////////////
			    
			    //document.getElementById("tiptip_holder").style.display = "none";
 				e.preventDefault(); 
			});
			//::::::::::::::::::::::::::::::::::::::::::::::::
			

		}

   });

	
}


function fnBackpackResetFolderSelect()
{
	$( ".LeftPanelDirClick" ).removeClass( "LeftPanelDirClick" );
	$( "#CallBackpack" ).prop('checked', false);
}

function fnBackPaclHighlightDir(uidFolderID)
{
	fnBackpackResetFolderSelect();	
	$('a[atrdid*="' + uidFolderID + '"]').addClass( "LeftPanelDirClick" );
}


//:::::::::::::ACtion functions ::::


function fnBackpackCheckBoxOpt(sType)
{

	for (var i=0; i < miTotalBackpackFile; i++)
	{
	    ObjBox = document.getElementById(("pkc" + i));
		    
		if (ObjBox == null)
			continue;

		ObjBox.checked = false;
		
		
		if (m_sDriveViewMode == 'details')
			oParentObj = ObjBox.parentNode.parentNode.parentNode;
		else
			oParentObj = ObjBox.parentNode.parentNode;
		
		oParentObj.style.backgroundColor = "";
		
		
		f_sName = $('#attname' + i).html();
		f_FileX = '';
		if(f_sName.indexOf(".") != -1)
        {
            f_String = f_sName.split(".");
            f_FileX = f_String[f_String.length - 1];
            f_FileX = '*' + f_FileX.toUpperCase() + '*';
        }  
		    
      
      
        switch (sType) 
        {
            case 'all':   
				        ObjBox.click();		
				        $( "#CallBackpack" ).prop('checked', true);		        
				        break;
    				    
            case 'video':   
                        if(m_arrFileType[1].indexOf(f_FileX) != -1)
                        	ObjBox.click();
				        break;
				        
            case 'images':   
                        if(m_arrFileType[2].indexOf(f_FileX) != -1)
                        	ObjBox.click();
				        break;
				        
            case 'none':   
            			$( "#CallBackpack" ).prop('checked', false);
            			ObjBox.checked = true;				        
            			ObjBox.click();	
				        break;
			default:
						if( (m_arrFileType[1].indexOf(f_FileX) == -1) && (m_arrFileType[2].indexOf(f_FileX) == -1) )
                        	ObjBox.click();

        }

	}

}

function fnBackpackCAll(ckBoxObj)
{
 	var iTotalSelect  = 0;
	for (var i=0; i < miTotalBackpackFile; i++)
	{
	    ObjBox = document.getElementById(("pkc" + i));
		    
		if (ObjBox == null)
			continue;
 
		ObjBox.checked = ckBoxObj.checked;
		
	   	if (m_sDriveViewMode == 'details')
			oParentObj = ObjBox.parentNode.parentNode.parentNode;
		else
			oParentObj = ObjBox.parentNode.parentNode;
    
  
       if (ckBoxObj.checked)
       {
			oParentObj.style.backgroundColor = sCheckboxCheckedColor;
			iTotalSelect +=1;
		}else 
			oParentObj.style.backgroundColor = "";
        
                
	}
	    
	
	
	m_bDontShowPOPOpt = true;
	
	$("#DriveBoxeAttachBtn").addClass( "yui3-button-disabled" );
	$("#DriveBoxeInsertBtn").addClass( "yui3-button-disabled" );
	
	if ( iTotalSelect > 0)
	{
					$("#DriveBoxeAttachBtn").removeClass( "yui3-button-disabled" );
				$("#DriveBoxeInsertBtn").removeClass( "yui3-button-disabled" );
			 	m_bDriveBoxAttachBtn = true;
	
	}
	
	fnShowBackPackActions();

} 

function fnBackPackHandelFile(sURL, e, index, bImage)
{

	if (e.ctrlKey)
	{
		$("#pkc" + index ).click();
	}
	else
	{
		if (bImage)
		{
			if ($(e.target).attr('imgtype') == 'prev')
			{
				fnBackpackPhotosSlideshow(sURL);
			}
			else
			{
				if (m_bDriveShareMode)
					location = '../../app/backpack_imgprev.asp?Download=true&uidFileID=' +  sURL + '&acc=' + m_sAcc;
				else
					location = '../../app/backpack_imgprev.asp?Download=true&uidFileID=' +  sURL;
			}
		
		}
		else
			location = '../../FileCabinet/Download.asp?DataList=' + sURL + '||';
	}
		

}


//:::::::
//:::::::
function CBBackPack(ObjBox, e)
{
	var ParentRow = ObjBox.parentNode.parentNode;
    var f_iIndex = ParentRow.getAttribute("cindex");
    

	if (m_sDriveViewMode == 'details')
		oParentObj = ObjBox.parentNode.parentNode.parentNode;
	else
		oParentObj = ObjBox.parentNode.parentNode;
		

    
    if (ObjBox.checked)
		$(oParentObj).style('background-color', sCheckboxCheckedColor, 'important');
     else
		$(oParentObj).style('background-color', '', 'important');
		
            
	YAHOO.util.Event.stopPropagation(e);
	fnShowBackPackActions();
	
	fnDocOnClick(); 
	mbMenuClosed = true;

}

////////

(function($) {    
  if ($.fn.style) {
    return;
  }

  // Escape regex chars with \
  var escape = function(text) {
    return text.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
  };

  // For those who need them (< IE 9), add support for CSS functions
  var isStyleFuncSupported = !!CSSStyleDeclaration.prototype.getPropertyValue;
  if (!isStyleFuncSupported) {
    CSSStyleDeclaration.prototype.getPropertyValue = function(a) {
      return this.getAttribute(a);
    };
    CSSStyleDeclaration.prototype.setProperty = function(styleName, value, priority) {
      this.setAttribute(styleName, value);
      var priority = typeof priority != 'undefined' ? priority : '';
      if (priority != '') {
        // Add priority manually
        var rule = new RegExp(escape(styleName) + '\\s*:\\s*' + escape(value) +
            '(\\s*;)?', 'gmi');
        this.cssText =
            this.cssText.replace(rule, styleName + ': ' + value + ' !' + priority + ';');
      }
    };
    CSSStyleDeclaration.prototype.removeProperty = function(a) {
      return this.removeAttribute(a);
    };
    CSSStyleDeclaration.prototype.getPropertyPriority = function(styleName) {
      var rule = new RegExp(escape(styleName) + '\\s*:\\s*[^\\s]*\\s*!important(\\s*;)?',
          'gmi');
      return rule.test(this.cssText) ? 'important' : '';
    }
  }

  // The style function
  $.fn.style = function(styleName, value, priority) {
    // DOM node
    var node = this.get(0);
    // Ensure we have a DOM node
    if (typeof node == 'undefined') {
      return this;
    }
    // CSSStyleDeclaration
    var style = this.get(0).style;
    // Getter/Setter
    if (typeof styleName != 'undefined') {
      if (typeof value != 'undefined') {
        // Set style property
        priority = typeof priority != 'undefined' ? priority : '';
        style.setProperty(styleName, value, priority);
        return this;
      } else {
        // Get style property
        return style.getPropertyValue(styleName);
      }
    } else {
      // Get CSSStyleDeclaration
      return style;
    }
  };
})(jQuery);

///////

function fnShowBackPackActions()
{

	var sDisplayCSS = "none";	
	var iTotoalSelected = 0;	
	for (var i=0; i < miTotalBackpackFile; i++)
	{
		    ObjBox = document.getElementById(("pkc" + i));
		    
            if (ObjBox == null)
	            continue;
	            
            if (ObjBox.checked)
            {
            	sDisplayCSS = "";
            	iTotoalSelected +=1;
            }     
	 }
	 
	if ( iTotoalSelected == 0 )
		$( "#CallBackpack" ).prop('checked', false);
	else if ( iTotoalSelected == miTotalBackpackFile )
	{
		$( "#CallBackpack" ).prop('checked', true);
	}
	else
		$( "#CallBackpack" ).prop('checked', false);
		

	if ( mBackpackFolderID == m_sBackPackSahresFolderID)
	{
		document.getElementById("btnBackPackDelete").style.display = "none";
		document.getElementById("DrivePubShare").style.display = "none";
		document.getElementById("btnRemoveBackpackShare").style.display = sDisplayCSS;
	}
	else
	{
		document.getElementById("DrivePubShare").style.display = sDisplayCSS;
		document.getElementById("btnBackPackDelete").style.display = sDisplayCSS;
		document.getElementById("btnRemoveBackpackShare").style.display = "none";
	}
		
	document.getElementById("btnBackPackShare").style.display = sDisplayCSS;
	document.getElementById("btnBackPackDownload").style.display = sDisplayCSS;
	document.getElementById("btnBackPackMove").style.display = sDisplayCSS;
			
}


//:::::::
//:::::::
function fnOpenBackpackDir(uidFolderID, thisObj)
{
	$( ".LeftPanelDirClick" ).removeClass( "LeftPanelDirClick" );
	$(thisObj).addClass( "LeftPanelDirClick" );

	mBackpackFolderID = uidFolderID;

	//alert(uidFolderID);
	fnBackpackGetFolders(uidFolderID);

}

//::::::: 
//:::::::
function fnSelectAllBackpackDir()
{

}

//:::::::
//:::::::
function fnNewBackpackDir(sFoldername, uidFolderID)
{

	$.ajax({
     type: "POST", 
     url: '../../app/backpack_api.asp',
     data: "action=createfolder&uidFolderID=" + uidFolderID + '&uidFolderName=' + encodeURIComponent(sFoldername), 
     success: function(data) {
        
			//refresh folders and view
			fnRefreshBackpack(1, uidFolderID);

		}
   });


}


//:::::::
//:::::::
function fnBackPackShareFile(iType)
{

        switch (iType) 
        {
            case 0:   
				        fnBackPackAddToShares();
				        break;
            case 1:   

						alert(m_sMySharedFiles + "\n\n" + location.protocol + '//' + location.host + '/FileCabinet/' + m_sUsername + '@' + m_sDomain);
				        break;
    				    
            case 2:
            
						var sHTML = '';
						fnApp(0, false);
						QComposer('n');
						$('#rte_to').focus();
						fnUpdateRTEText('');
						document.getElementById('rte_subject').value = m_sMySharedFiles; 
						
						sURL = location.protocol + '//' + location.host + '/FileCabinet/' + m_sUsername + '@' + m_sDomain;
						sURL = '<a _moz_dirty=""target="_blank" href="' + sURL + '">' + sURL + '</a>'
						sHTML = sURL;
					
						fnUpdateRTEText('<p style="margin-top:2px; margin-bottom:2px"><br/></p>' + sHTML);
   

				        break;
				        
        }


	
}

//:::::::
//:::::::
function fnBackPackAddToShares()
{

	var sfileid = '';	
	miTotalSelectedBackPackFiles = 0;
	for (var i=0; i < miTotalBackpackFile; i++)
	{
		ObjBox = document.getElementById(("pkc" + i));
        if (ObjBox == null)
	    	continue;       
        if (ObjBox.checked)
        {
            sfileid += $(ObjBox).attr('fileid') + '|';  
            miTotalSelectedBackPackFiles +=1;
        } 
	 }
	 
	 if ( sfileid.length < 5)
	 	return;


	$.ajax({
     type: "GET",
     url: '../../app/backpack_api.asp',
     data: "action=sharefiles&uidShareFolderID=" + m_sBackPackSahresFolderID + "&FilesID=" + sfileid, 
     success: function(data) {
        
     		if (miTotalSelectedBackPackFiles > 1)
     		{
     			sMessage = mcLang.Text('lang_drive_40',1);
				sMessage = sMessage.replace(/xxxx/gi, miTotalSelectedBackPackFiles); 
     			UpdateInboxAlert(sMessage, '');
     		
     		}
     		else
     			UpdateInboxAlert(mcLang.Text('lang_drive_41',1), '');

			 
			 fnBackpackGetFolders(m_sBackPackSahresFolderID);

		}
   });



}


//:::::::
//:::::::
function fnRemoveBackpackShare()
{

	var sfileid = '';	
	miTotalSelectedBackPackFiles = 0;
	for (var i=0; i < miTotalBackpackFile; i++)
	{
		ObjBox = document.getElementById(("pkc" + i));
        if (ObjBox == null)
	    	continue;       
        if (ObjBox.checked)
        {
            sfileid += $(ObjBox).attr('fileid') + '|';  
            miTotalSelectedBackPackFiles +=1;
        } 
	 }
	 
	 if ( sfileid.length < 5)
	 	return;


	$.ajax({
     type: "GET",
     url: '../../app/backpack_api.asp',
     data: "action=deletefiles&uidFolderID=" + m_sBackPackSahresFolderID + "&FilesID=" + sfileid, 
     success: function(data) {
        
     		if (miTotalSelectedBackPackFiles > 1)
     		{
     		    sMessage = mcLang.Text('lang_drive_42',1);
				sMessage = sMessage.replace(/xxxx/gi, miTotalSelectedBackPackFiles)
     			UpdateInboxAlert(sMessage, '');
     		}
     		else
     		{
     		    sMessage = mcLang.Text('lang_drive_43',1);
     			UpdateInboxAlert(sMessage, '');

     		}

			 fnBackpackGetFolders(m_sBackPackSahresFolderID);

		}
   });



}

//:::::::
//:::::::
function fnEnableDisableSocial()
{
	var iTotalChecked = 0;
	for (var i=0; i < miTotalBackpackFile; i++)
	{
		ObjBox = document.getElementById(("pkc" + i));
        if (ObjBox == null)
	    	continue;       
        if (ObjBox.checked)
        {
        	imBackPackMiniShareIndex = i;
           iTotalChecked +=1;
           if (iTotalChecked > 1)
           {
            imBackPackMiniShareIndex = -1;
           	break;
           }
        } 
	 }


	if (iTotalChecked > 1)
	{
		$('.menusocialDrive').removeClass( "menulink" )
		$('.menusocialDrive').addClass( "menulinkOff" );	
	}
	else
	{
		$('.menusocialDrive').removeClass( "menulinkOff" )
		$('.menusocialDrive').addClass( "menulink" );	
	}
}



//:::::::
//:::::::
function fnBackPackSendFile(iType)
{

	var sfileid = '';	
	miTotalSelectedBackPackFiles = 0;
	for (var i=0; i < miTotalBackpackFile; i++)
	{
		ObjBox = document.getElementById(("pkc" + i));
        if (ObjBox == null)
	    	continue;       
        if (ObjBox.checked)
        {
        	if (iType == 1)
        	{
        		sfileid += $(ObjBox).attr('fileid') + '[]' + $('#attname' + i).text() + '|';  
        	}
        	else
            	sfileid += $(ObjBox).attr('fileid') + '|';  
            	
            miTotalSelectedBackPackFiles +=1;
        } 
	 }
	 
	 if ( sfileid.length < 5)
	 	return;
	 		 	 	
	if ( (iType == 7) || (iType == 8) || (iType == 9) || (iType == 10) )
	{
		if (imBackPackMiniShareIndex >= 0)
			fnShareImg(iType);
		return;
	}


	if (iType == 0) //as attachments
	{
	
		 $.ajax({
	     type: "GET",
	     url: '../../app/backpack_RTE_f.asp',
	     data: "action=attachfile&FilesID=" + sfileid, 
	     success: function(data) {
	          
				fnBackPack_AttachFileRTE(data, false)
				
			}
	   });

	
	}
	else //as linkes
	{
	
		sFileID = sfileid.split("|");   	
		var sHTML = '';
		var iTotalFiles = 0;
		for(i=0; i < sFileID.length; i++)
		{
		 	if (sFileID[i].length > 1)
		 	{
		 		sName = sFileID[i].split('[]')[1];
				m_iTotalDriveLinks +=1;
	
				sAction = '&nbsp;<img src="' + m_sRessIMGURL + 'close_16.png" class="cssRemoveShare" onclick="parent.fnRemoveDriveLinks(\'' + m_iTotalDriveLinks + '\')" title="' + m_sRemoveLangvar + '" style="height:16px; width:16px; cursor:pointer; vertical-align: middle"/>';
				sURL = 'http' + m_sHTTPS + '://' + sServerName + '/FileCabinet/Download.asp?User=' + m_sUsername + '@' + m_sDomain + '&app=web&FID=' + sFileID[i].split('[]')[0];   					
				sHTML += '<div ondragstart="return false;" id="att_drive' + m_iTotalDriveLinks + '" style="cursor:pointer; clear: both; height:27px; color:#535353; font-family: Arial, Helvetica, sans-serif; FONT-SIZE: 11px; background-color:#F4F4F4; -webkit-border-radius: 4px; -moz-border-radius: 4px; padding-left:5px; margin-bottom:8px;">' +
				  		 '<a class="UploadFile" href="' +  sURL + '" style="float:left; width:295px; line-height:24px;cursor:pointer; text-decoration:none !important; color:#535353"><div style="float:left; width:40px; line-height:24px; text-align:right; display:none">&nbsp;&nbsp;</div>&nbsp;&nbsp;' + ShowFileIcon(sName,30,'') + '</a>' +
				  		 '<div style="float:right; width:25px; line-height:22px;" class="rteSharedFiles">' + sAction + '</div>' +
				  		 '</div>';

					
				iTotalFiles +=1;
			}
		}		
		


		ResetAttach();
		fnApp(0, false);
		QComposer('n');
		$('#rte_to').focus();
		fnUpdateRTEText('');
		
		
		fnUpdateRTEText('<br><div style="padding:5px; width:326px">' + sHTML + '</div>');

	
	}


}


function fnBackpackPhotosSlideshow(sFileID)
{
	var iMsgDivTop = 80;
	var iMsgDivLeft= 120;
	
	$('#ifm_BPPhotoSlideView').css('background-color', '#000000');
	
	//fnOpenSettingsTab(1);
		
	$("#BPPhotoSlide-fullscreen").css( "display", "" );
		
	$("#divBPPhotoSlideView").css( {'position' : 'absolute', 'left' : (iMsgDivLeft + 'px'), 'top' : (iMsgDivTop + 'px'), 'display' : 'none'} );
  

	m_ClientHeight = $(window).height();
	m_ClientWidth = $(window).width();

  
    
    var iMsgDivHeight = m_ClientHeight - (iMsgDivTop * 2);
	var iMsgDivWidth  = m_ClientWidth - (iMsgDivLeft * 2);
		
	$('#divBPPhotoSlideView').width(iMsgDivWidth);
	$('#divBPPhotoSlideView').height(iMsgDivHeight);
	
	$("#divBPPhotoSlideView").fadeIn( "fast", function() { });
	
	//set iframe height
	$('#ifm_settings').height(iMsgDivHeight - 153);
	
	
	$('#ifm_BPPhotoSlideView').attr('src','../../app/drive_image_slider.asp?FolderID=' + mBackpackFolderID + '&FileID=' + sFileID + '&slang=' + slang);
	$("#divBPPhotoSlideView").fadeIn( "fast", function() { });
	
}


function fnBackpackStatistics()
{
	var iMsgDivTop = 80;
	var iMsgDivLeft= 120;
	
	//fnOpenSettingsTab(1);
	
	$('#ifm_BPPhotoSlideView').css('background-color', '#ffffff');
		
	$("#BPPhotoSlide-fullscreen").css( "display", "" );
		
	$("#divBPPhotoSlideView").css( {'position' : 'absolute', 'left' : (iMsgDivLeft + 'px'), 'top' : (iMsgDivTop + 'px'), 'display' : 'none'} );
    
    
    var iMsgDivHeight = (630) - (iMsgDivTop * 2);
	var iMsgDivWidth  = (1010) - (iMsgDivLeft * 2);
		
	$('#divBPPhotoSlideView').width(iMsgDivWidth);
	$('#divBPPhotoSlideView').height(iMsgDivHeight);
	
	$("#divBPPhotoSlideView").fadeIn( "fast", function() { });
	
	//set iframe height
	$('#ifm_settings').height(iMsgDivHeight - 153);
	
	  $('#divBPPhotoSlideView').css({
	   position:'absolute',
	   left: ($(window).width() 
	     - $('#divBPPhotoSlideView').outerWidth())/2,
	   top: ($(window).height() 
	     - $('#divBPPhotoSlideView').outerHeight())/2
	  });
			
	
	
	$('#ifm_BPPhotoSlideView').attr('src','../../app/backpack_statistics.asp?BackpackFolderID=' + mBackpackFolderID);
	$("#divBPPhotoSlideView").fadeIn( "fast", function() { });
	
}



function fnBPPhotoSlideExitFullscreen()
{
	$("#BPPhotoSlide-fullscreen").css( "display", "none" );
	$("#divBPPhotoSlideView").css( "display", "none" );
	$('#ifm_BPPhotoSlideView').attr('src','about:blank');
	
}


var m_bDrivePOPUP = false;

function fnBackPack_AttachFileRTE(sDataBuilk, bDrivePOPUP)
{
		///////////////////
		//alert('m_iTotalQAttach:' + m_iTotalQAttach + '\n' + 'm_iTotalQAttachSize:' + m_iTotalQAttachSize + '\n')
		//////////////
	
		//attaching from Drive or RTE Drive popup?
		if (bDrivePOPUP == false)
		{
			msUploaderApp = 'composer';
			ResetAttach();
			fnApp(0, false);
			QComposer('n');
		}
		
		m_bDrivePOPUP = bDrivePOPUP;
		
		sDataBuilk = sDataBuilk.split("[*]");
		
		m_arrMoveDriveFileId = [];
		

		for (var i=0; i < sDataBuilk.length; i++)
	    {  
	    	if (sDataBuilk[i].length > 10)
	    	{
	    	
	    		f_iFolderGUID   = sDataBuilk[i].split('|*|')[0];
	    		f_sName = sDataBuilk[i].split('|*|')[1];
	    		f_Size  = sDataBuilk[i].split('|*|')[2];
	    		f_sWidth = sDataBuilk[i].split('|*|')[3];
	    		fs_Height= sDataBuilk[i].split('|*|')[4];
	    		
	    		f_iIndex = m_iTotalQAttach;	
				var f_iID = 'file' + f_iIndex;
				var iAttachSize = 0;
				
				if (f_Size.length <=1 )
					iAttachSiz = 1023;
				else
					iAttachSiz = parseInt(f_Size);
					
				if ( (m_iTotalQAttachSize + iAttachSiz ) > ((m_iRTEMaxAttachSize * 1023)*1023) )
				{				
					sSize = ShowFileSize(iAttachSiz);
					m_arrMoveDriveFileId.push(f_iFolderGUID + '|' + 0 + '|' + sSize + '|' + encodeURI(f_sName) );
					break;			
				}
				m_iTotalQAttachSize += iAttachSiz;
					
				sProgress = "<div style='height:16px;width:100px;background: url(" + m_sRessIMGURL + "attach/bar_white.gif); color:#535353; text-align: center;'>0%</div>";
				sSize = ShowFileSize(iAttachSiz);
				sName = ShowFileIcon(f_sName,0,'');
				sAction = ShowAction(f_iID, 4, f_sName);

			    m_AllFilesArr.push( f_iID + m_sTextDelm + f_iFolderGUID );
				
				//fnGetForwardAttachThumb(f_sName, f_iID )
				
							   
				var f_sHTMLCode = '<div id="' +  f_iID + '" fFIndex=' + f_iIndex + ' imgpr="" asize="' + iAttachSiz + '" cattname="' + escape(f_sName) + '" onmouseout="fnPrevImgOff()" onmouseover="fnPrevImg(this,false)" style="clear: both; height:27px; color:#535353; font-family: Arial, Helvetica, sans-serif; FONT-SIZE: 11px;">' +
						 		  '<div  class="UploadFile" id="' +  f_iID + 'ns" style="float:left; width:310px; line-height:24px;"><div style="float:left; width:40px; line-height:24px; text-align:right">' + sSize + '</div>&nbsp;&nbsp;' + sName + '</div>' +
								  '<div style="float:right; width:45px; line-height:22px;" id="' +  f_iID + 'a">' + sAction + '</div>' +
								  '</div>';
				   				   
			  m_iTotalQAttach +=1;
			  document.getElementById("mAttahcMenu").innerHTML += f_sHTMLCode; 
			  
			  
			  sImageInfo = f_iFolderGUID + "|" + f_sWidth + "|" + fs_Height;
			  
			  
			  if (f_sWidth.length > 0)
			  		document.getElementById(f_iID).setAttribute("imgpr", sImageInfo);
			  else
					document.getElementById(f_iID).setAttribute("imgpr", '');
			 
	    		
	    	
	    	}
	    	
		}


	    fnShowAttachCount();
	    fnShowAttachList();

        //::::::::::::::::::::::::::::Check file sizes STARTS
		if (m_arrMoveDriveFileId.length > 0 )
		{
			fnDocOnClick();
		    bturncate = 43;
		                
		    var sMessage = mcLang.Text('lang_mail_91',1) + '<br>';
		    sMessage = sMessage.replace(/_xxMaxAttachSize_xx/gi, m_iRTEMaxAttachSize);
		    for (var i=0; i < m_arrMoveDriveFileId.length; i++)
		    {
		    	arrAttachFile = m_arrMoveDriveFileId[i].split('|');		
				sName = ShowFileIcon(arrAttachFile[3],33,arrAttachFile[0]);
		        sMessage += '<br><span title="' + arrAttachFile[3] + ' - ' + arrAttachFile[2] + '">' + sName + ' - ' + arrAttachFile[2] + '</span>'; 		                 	
		    }  	
			
			sMessage += '<br><br>' + mcLang.Text('lang_mail_92',1);                   	
		   	//prompt user for  action...
			fnYUIPromptAttachLimit(sMessage, mcLang.Text('lang_mail_93',1), mcLang.Text('lang_mail_94',1), 'message icon-bubble', fnBlacnkcall, arguments)
										
		}
		//::::::::::::::::::::::::::::Check file sizes ENDS


}


//:::::::
//:::::::
function fnBackPack_ShareIcon(iIndex,e)
{
	YAHOO.util.Event.stopEvent(e); 
	imBackPackMiniShareIndex = iIndex;
	fnShowPOPOpt('shareico' + iIndex, 'mBackPackShareMiniOptMenu',0,-30);
}

//:::::::
//:::::::
function fnBackPack_ForwardIcon(iIndex)
{ 
	$('#CallBackpack').checked = false;
	$('#CallBackpack').click();
	$('#CallBackpack').click();
	$("#pkc" + iIndex).click();
	fnBackPackSendFile(0);
}

function fnShareImg(iType)
{
	var sFileID = '';	
	var ObjBox = document.getElementById(("pkc" + imBackPackMiniShareIndex));
    sFileID = $(ObjBox).attr('fileid');  
   
	var sURL = '';
	var sFileURL = location.protocol + '//' + location.host + '/FileCabinet/Download.asp?User=' + m_sUsername + '@' + m_sDomain + '&app=web&FID=' + sFileID;
	
	sFileURL = sFileURL.replace(/{/gi, '');
	sFileURL = sFileURL.replace(/}/gi, '');
	
	sFileURL  = encodeURIComponent(sFileURL); 
	
	switch (iType) 
	{
		//twitter
		case 8:   
			sURL = 'http://twitter.com/share?url=&text=' + sFileURL;
			break;
		//facebook
		case 7: 
			sURL = 'http://www.facebook.com/sharer.php?u=' + sFileURL;
			break;
			
		//Google+
		case 9: 
			sURL = 'https://plus.google.com/share?url=' + sFileURL;
			break;

		//linkedin
		case 10: 
			sURL = 'http://www.linkedin.com/shareArticle?mini=true&url=' + sFileURL;
			break;

		//email
		case 4: 
			fnBackPack_ForwardIcon(imBackPackMiniShareIndex);
			return;
			break;


		//link
		case 5: 
		
			 m_iTotalDriveLinks +=1;

			sfileid = $(ObjBox).attr('fileid');
			index = imBackPackMiniShareIndex;
			sName =  $('#attname' + index).text();	
			
			var sHTML = '';
			
			sAction = '&nbsp;<img src="' + m_sRessIMGURL + 'close_16.png" class="cssRemoveShare" onclick="parent.fnRemoveDriveLinks(\'' + m_iTotalDriveLinks + '\')" title="' + m_sRemoveLangvar + '" style="height:16px; width:16px; cursor:pointer; vertical-align: middle"/>';
			
			sURL = 'http' + m_sHTTPS + '://' + sServerName + '/FileCabinet/Download.asp?User=' + m_sUsername + '@' + m_sDomain + '&app=web&FID=' + sfileid;   					
			sHTML += '<div contenteditable="false" ondragstart="return false;" id="att_drive' + m_iTotalDriveLinks + '" style="cursor:pointer; clear: both; height:27px; color:#535353; font-family: Arial, Helvetica, sans-serif; FONT-SIZE: 11px; background-color:#F4F4F4; -webkit-border-radius: 4px; -moz-border-radius: 4px; padding-left:5px; margin-bottom:8px;">' +
			  		 '<a class="UploadFile" href="' +  sURL + '" style="float:left; width:295px; line-height:24px;cursor:pointer; text-decoration:none !important; color:#535353"><div style="float:left; width:40px; line-height:24px; text-align:right; display:none">&nbsp;&nbsp;</div>&nbsp;&nbsp;' + ShowFileIcon(sName,30,'') + '</a>' +
			  		 '<div style="float:right; width:25px; line-height:22px;" class="rteSharedFiles">' + sAction + '</div>' +
			  		 '</div>';
			

			ResetAttach();
			fnApp(0, false);
			QComposer('n');
			$('#rte_to').focus();
			fnUpdateRTEText('');

			//document.getElementById('rte_subject').value = m_sSharedFiles;	
			fnUpdateRTEText('<br><div style="padding:5px; width:326px">' + sHTML + '</div>');

			
			fnBPPhotoSlideExitFullscreen();

			return;
			break;

		//add to public
		case 6: 
			$('#CallBackpack').checked = false;
			$('#CallBackpack').click();
			$('#CallBackpack').click();
			$("#pkc" + imBackPackMiniShareIndex).click();

			fnBackPackAddToShares();
			return;
			break;
		
	

		//link
		case 12: 
		
			sfileid = $(ObjBox).attr('fileid');
			index = imBackPackMiniShareIndex;
			sName =  $('#attname' + index).text();	
			
			var myWindow = window.open("", "myWindow", "width=400,height=400");
    		myWindow.document.write('<img src="../../app/backpack_imgprev.asp?uidFileID=' + sfileid + '&slider=true&rtp=true"  title="Image" />');
			
			return;
			break;


		
		default:

	}

	popitup(sURL);

}

function fnRemoveDriveLinks(sID)
{
	fnRTEDelete('#att_drive'+ sID);
	
	m_iTumblrAttach -=1;
	
	//if (m_iTumblrAttach == 0)
	//{
	//	fnRTEDelete('#divTumblr');
	//	m_iTumblr = 0;
	//}
	
}


function popitup(url) {
	newwindow=window.open(url,'name','height=560,width=500');
	if (window.focus) {newwindow.focus()}
	return false;
}


//:::::::
//:::::::
function fnBackPackFileMenuAction(iAction)
{

	iIndex =  $(m_objDirContextMenu).attr('cindex');

	//rename 
	if (iAction == 0)
	{
	
		attname =  $('#attname' + iIndex).html(); 
		
		fname = attname.substring(0, attname.lastIndexOf('.'));
		
		var ext = attname.substr(attname.lastIndexOf('.') );
		ext = ext.toLowerCase();
		
		value = fnPrompt(m_sDriveFileRename, fname);
		while( value == '')
		{
					value = fnPrompt(m_sDriveFileRename, fname);
		}
		if( value == null)
			return;
			
		
		uidFileID = $('#pkc' + iIndex).attr('fileid');	
			
		$.ajax({
	     type: "POST",
	     url: '../../app/backpack_api.asp',
	     data: "action=renamefile&uidFileID=" + uidFileID + '&FileName=' + encodeURIComponent(value) + ext, 
	     success: function(data) {
	     
	      		$('#attname' + iIndex).html(value + ext); 
	          
				//refresh view with new file name
				//fnApp(3, false);
			}
	   });


		
	}
	

	if (iAction == 1)
	{
		fnDeleteBackpackFile();

	}	


}

//:::::::
//:::::::
function fnBackPackDirMenuAction(iAction)
{
	//rename
	if (iAction == 1)
	{
		//$(m_objDirContextMenu).find('.editable').dblclick();
		
		sDirName  =  $(m_objDirContextMenu).attr('atrDName');
		
		
		value = fnPrompt(mcLang.Text('lang_mail_65',0),sDirName);
		while(value == '')
		{
					alert(mcLang.Text('lang_mail_66',0)) 
					value = fnPrompt(mcLang.Text('lang_mail_108',0),'');
		}
		if( value == null)
			return;
			
		dirID = $(m_objDirContextMenu).attr('atrdid'); 
		
		if ( sDirName.toLowerCase().trim() == value.toLowerCase().trim() )
			return;

		fnRenameBackpackDir(value, dirID); 

		
	}
	
	//new dir
	if (iAction == 0)
	{
		value = fnPrompt(mcLang.Text('lang_mail_65',0),'');
		while( value == '')
		{
					alert(mcLang.Text('lang_mail_66',0)) ;
					value = fnPrompt(mcLang.Text('lang_mail_108',0),'');
		}
		if( value == null)
			return;
			
		dirID = $(m_objDirContextMenu).attr('atrdid');
		fnNewBackpackDir(value, dirID)
	}
	
	//delete
	if (iAction == 3)
	{			

		var sDirName = $(m_objDirContextMenu).attr('atrDName');
		
		var sMessage = mcLang.Text('lang_drive_64',0);
		sMessage = sMessage.replace(/_xxFolderNamexx_/gi, sDirName);
		sMessage = sMessage.replace(/_xxbreaklinexx_/gi, '\n\n');
		
		if(confirm(sMessage))
		{
		
		}
		else 
			return;
	
		dirID = $(m_objDirContextMenu).attr('atrdid');
		fnNewBackpacDeletekDir(dirID);
	}

}

function forceUnicodeEncoding(string) {
  return unescape(encodeURIComponent(string));
}


//:::::::
//:::::::
function fnRefreshBackpack(iAction, uidFolderID)
{
	fnSaveFoldersExpandDrive();
	
	switch (iAction) 
	{
		//rename
		case 0:   
		
			//if ( mBackpackFolderID == uidFolderID)
				//fnBackpackGetFolders(mBackpackFolderID);
		
			break;
			
		//new dir
		case 1:   

			//if ( mBackpackFolderID == uidFolderID)
				//fnBackpackGetFolders(mBackpackFolderID);

			break;
    	
		//delete			    
		case 3:   
			
			//fnBackpackGetFolders(mBackpackFolderID);
		
			break;
	}

	fnBuildBackpackFolders('app'); 

}


function fnHighlightBackPackDir(uidFolderID)
{
	var oObj = $('a[atrdid*="' + uidFolderID + '"]');
	fnOpenBackpackDir(uidFolderID, oObj);

}


//:::::::
//:::::::
function fnRenameBackpackDir(sValue, uidFolderID)
{

	$.ajax({
     type: "POST",
     url: '../../app/backpack_api.asp',
     data: "action=renamefolder&uidFolderID=" + uidFolderID + '&uidFolderName=' + encodeURIComponent(sValue), 
     success: function(data) {
          
			//refresh folders and view
			fnRefreshBackpack(1, uidFolderID);
		}
   });

	
}



//:::::::
//:::::::
function fnNewBackpacDeletekDir(uidFolderID)
{
	$.ajax({
     type: "GET",
     url: '../../app/backpack_api.asp',
     data: "action=deletefolder&uidFolderID=" + uidFolderID, 
     success: function(data) {
          
			//refresh folders and view
			fnRefreshBackpack(3, uidFolderID);


		}
   });

}

var miTotalSelectedBackPackFiles = 0;
//:::::::
//:::::::
function fnMoveCopyBackpackFiles(uidFolderID, iIndex)
{

	if ( (mBackpackFolderID == uidFolderID) && (mbDropMode == false) )
	{
		fnBackpackCheckBoxOpt('none');
		return;
	}

	if ( mbDropMode == true)
	{
		//document.getElementById("MBOXAI").checked = false;
		
		$('#MBoxDoneBtn').html(mcLang.Text('lang_mbox_17',1));
		$('#MBoxDoneBtn').attr('saction','apply');

		
		fnMBoxChangeMoveFolder(uidFolderID, iIndex);
		return;
	}

	var sfileid = '';	
	miTotalSelectedBackPackFiles = 0;
	for (var i=0; i < miTotalBackpackFile; i++)
	{
		ObjBox = document.getElementById(("pkc" + i));
        if (ObjBox == null)
	    	continue;       
        if (ObjBox.checked)
        {
            sfileid += $(ObjBox).attr('fileid') + '|';  
            miTotalSelectedBackPackFiles +=1;
        } 
	 }
	 
	 if ( sfileid.length < 5)
	 	return;
	 	
	 sAction = msBackPackMoveMode + 'files';
	 	 	
	 $.ajax({
     type: "GET",
     url: '../../app/backpack_api.asp',
     data: "action=" + sAction + "&uidFolderID=" + uidFolderID + "&FilesID=" + sfileid, 
     success: function(data) {
          
			//refresh view with new folder
			fnBackpackGetFolders(mBackpackFolderID);
			
			sFoldername = $('a[atrdid*="' + uidFolderID + '"]').attr('atrdname');
			
			if (miTotalSelectedBackPackFiles > 1)
			{
				sMoveMessage = mcLang.Text('lang_drive_44',1);
				sMoveMessage = sMoveMessage.replace(/xxxx/gi, miTotalSelectedBackPackFiles);
				sMoveMessage = sMoveMessage.replace(/_xxFolderNamexx_/gi, sFoldername);
			}
			else
			{
				sMoveMessage = mcLang.Text('lang_drive_45',1);
				sMoveMessage = sMoveMessage.replace(/_xxFolderNamexx_/gi, sFoldername);
			}
			
			UpdateInboxAlert(sMoveMessage, '1359077142_info_16.png');
			
			$('#CallBackpack').checked = false;


		}
   });
   
   

}

//:::::::
//:::::::
function fnDownloadBackpackFile() 
{
	var sfileid = '';	
	miTotalSelectedBackPackFiles = 0;
	for (var i=0; i < miTotalBackpackFile; i++)
	{
		ObjBox = document.getElementById(("pkc" + i)); 
        if (ObjBox == null)
	    	continue;     
        if (ObjBox.checked)
        {
            sfileid += $(ObjBox).attr('fileid') + '|';  
            miTotalSelectedBackPackFiles +=1;
        } 
	 }
	 
	 if ( sfileid.length < 5)
	 	return;

	$('#CallBackpack').checked = false;

	 if (miTotalSelectedBackPackFiles == 1)
	 {
		location = '../../FileCabinet/Download/Download.asp?DataList=' + sfileid + '|';
		miTotalSelectedBackPackFiles = 0;
		return;
	 }
	 

	location = '../../app/backpack_api.asp?action=downloadfiles&uidFolderID=' + mBackpackFolderID + "&FilesID=" + sfileid;
	
	/*
	 $.ajax({
     type: "GET",
     url: '../../app/backpack_api.asp',
     data: "action=downloadfiles&uidFolderID=" + mBackpackFolderID + "&FilesID=" + sfileid, 
     success: function(data) {
     


		}
	
		
   });
   */


}


//:::::::
//:::::::
function fnDeleteBackpackFile()
{
	  
	var sfileid = '';	
	miTotalSelectedBackPackFiles = 0;
	for (var i=0; i < miTotalBackpackFile; i++)
	{
		ObjBox = document.getElementById(("pkc" + i)); 
        if (ObjBox == null)
	    	continue;     
        if (ObjBox.checked)
        {
            sfileid += $(ObjBox).attr('fileid') + '|';  
            miTotalSelectedBackPackFiles +=1;
        } 
	 }
	 
	 if ( sfileid.length < 5)
	 	return;
	 	
	sDeleteMsg = mcLang.Text('lang_drive_46',1);
	
	//Delete from Trash folder?
	if ( m_sBackPackTrashFolderID == mBackpackFolderID )
	{
		sDeleteMsg = 'Are you sure you want to permanently delete the file(s)?';
	}
	 	
	if(confirm(sDeleteMsg))
	{
		
	}
	else 
		return;

	 	
	 	
	 $.ajax({
     type: "GET",
     url: '../../app/backpack_api.asp',
     data: "action=deletefiles&uidFolderID=" + mBackpackFolderID + "&FilesID=" + sfileid, 
     success: function(data) {
     
     		if (miTotalSelectedBackPackFiles > 1)
     		{
     			sMessage = mcLang.Text('lang_drive_47',1);
				sMessage = sMessage.replace(/xxxx/gi, miTotalSelectedBackPackFiles);
     			UpdateInboxAlert(sMessage, '');
     		}
     		else
     		{
     			UpdateInboxAlert(mcLang.Text('lang_drive_48',1), '');
     		}
          
			//refresh view with new folder
			fnBackpackGetFolders(mBackpackFolderID);
			$('#CallBackpack').checked = false;

		}
   });


}


/////// BACKPACK /////////////////////////////////////////////////////////  ENDS


////// Calendar //////////////////////////////////////////////////////////
//:::::::
//:::::::
function fnShowCalendarNewOpt(e)
{
	fnShowPOPOpt('mLeftPanelTitle', 'mCalendarNewOptions',0,0);
	e.stopPropagation();
}

function fnCalHighlightDay()
{

	$( ".LeftPanelDirClick" ).removeClass( "LeftPanelDirClick" );
	$( "#cal_day").addClass( "LeftPanelDirClick" );


}

function fnCalendarNewAction(sAction)
{
	$( ".LeftPanelDirClick" ).removeClass( "LeftPanelDirClick" );
    switch(sAction)
    {
    
        case "appointment":
        	$('#ifm_apps').attr('src','../../calendar/appointment.asp');
        	break

        case "reminder":
        	$('#ifm_apps').attr('src','../../calendar/reminder.asp');
        	break

        case "task":
        	$('#ifm_apps').attr('src','../../calendar/task.asp');
        	
       		break

        case "note":
        	$('#ifm_apps').attr('src','../../calendar/note.asp');
        	break
    }


}

function fnChangeCalType(sCalType)
{
    switch(sCalType)
    {
    
        case "today":
        
        	var d = new Date();
			sTodayDate = (d.getMonth() + 1) + '/' + d.getDate() + '/' + d.getFullYear();
        
        	$('#ifm_apps').attr('src','../../calendar/today.asp?Date=' + sTodayDate + '&ss=' + guid());
        	break

        case "day":
        	$('#ifm_apps').attr('src','../../calendar/day.asp?ss=' + guid());
        	break

        case "week":
        	$('#ifm_apps').attr('src','../../calendar/week.asp?ss=' + guid());
        	
       		break

        case "month":
        	$('#ifm_apps').attr('src','../../calendar/month.asp?ss=' + guid());
        	break

        case "year":
        	$('#ifm_apps').attr('src','../../calendar/year.asp?ss=' + guid());
        	break
    }
	
	
	$( ".LeftPanelDirClick" ).removeClass( "LeftPanelDirClick" );
	$( "#cal_" +  sCalType).addClass( "LeftPanelDirClick" );
	
}


////////////////////////CONTACTS APP /////////////////////////////////////


//:::::::
//:::::::
function fnChangeContactsView(stype)
{
   $("#ifm_apps")[0].contentWindow.ChangeView(stype);
}

function fnContactsNextPrevPage(iPage)
{

	$("#ifm_apps")[0].contentWindow.NextPrevPage(iPage);
}


//:::::::
//:::::::
function fnShowContactNewOpt(e)
{
	fnShowPOPOpt('mLeftPanelTitle', 'mContactsNewOptions',0,0);
	e.stopPropagation();
}

//:::::::
//:::::::
function fnContactsNewAction(sAction)
{

    switch(sAction)
    {
        case "group":
        	fnAddNewGroup();
        	break;

        case "import":
        	UpdateInboxAlert('Coming Soon...', '1359077142_info_16.png');
        	
       		break;

        case "export":
        	//UpdateInboxAlert('Coming Soon...', '1359077142_info_16.png');
        	
        	
        	var sNewURL = "../../contacts/new_import_export.asp";
			fnViewContactInfo(sNewURL);

        	
        	
        	break;
    }


}



//:::::::
//:::::::
function fnChangeContactsViewPeople(stype)
{

   $("#ifm_apps")[0].contentWindow.CGView(stype);
}



//:::::::
//:::::::
function fnChangeContactsFields(stype)
{

   $("#ifm_apps")[0].contentWindow.UpdateView_Disp(stype);
   fnUpdateContactSortMenu();
}



//:::::::
//:::::::
function fnContactsCAll()
{

   $("#ifm_apps")[0].contentWindow.CAll();
}


//:::::::
//:::::::
function fnContactsCAllPeople()
{

   $("#ifm_apps")[0].contentWindow.CAllPeople();
}


//:::::::
//:::::::
function fnContactsCAllGroup()
{

   $("#ifm_apps")[0].contentWindow.CAllGroup();
}



//:::::::
//:::::::
function fnDeleteContact()
{

	document.getElementById('CallContact').checked = false;
   $("#ifm_apps")[0].contentWindow.DeletContact();
   
}


//:::::::
//:::::::
function fnContactsEmail(sType)
{
	$("#ifm_apps")[0].contentWindow.fnContactsEmail(sType);
}

//:::::::
//:::::::
function fnCancelSearch()
{

   $("#ifm_apps")[0].contentWindow.CancelSearch();
}


//:::::::
//:::::::
function fnContactSort(iType)
{
   $("#ifm_apps")[0].contentWindow.CSort(iType);
   fnCheckContactsSortIcon();
}

//:::::::
//:::::::
function fnUpdateContactSortMenu()
{

	$('.sort_contact').css( "display", "none");
	
    switch(G_ViewType)
    {
        case "person":
        	document.getElementById("spanContactsView").innerHTML = top.mcLang.Text('lang_cont_4',1);
        	
        	$('.sort_contact_name').css( "display", "");
        	
        	$('#btnContactArrangeBy').css( "display", "");
        	break

        case "phone":
        	document.getElementById("spanContactsView").innerHTML = top.mcLang.Text('lang_cont_4',1);
        	
        	if (G_DispType == 'work')
        		$('.sort_contact_work').css( "display", "");
        	else
        		$('.sort_contact_home').css( "display", "");
        		
        	$('#btnContactArrangeBy').css( "display", "");
        	
       		break

        case "card":
        	document.getElementById("spanContactsView").innerHTML = top.mcLang.Text('lang_cont_5',1);
        	
        	$('#btnContactArrangeBy').css( "display", "none");
        	break

        case "birthday":
       		document.getElementById("spanContactsView").innerHTML = top.mcLang.Text('lang_cont_6',1);
       		
       		$('#btnContactArrangeBy').css( "display", "none");
        	break
    }
    
    	fnCheckContactsSortIcon();

}


function fnCheckContactsSortIcon()
{

	var s_SortIcon = m_sRessIMGURL + "trans.png";	
	$('.contacts_sortico').attr('src',s_SortIcon) ;
	
	s_SortIcon = m_sRessIMGURL + "gtk-sort-descending_16.png";
	
	var iViewSort = G_ViewSort;
	switch (iViewSort) 
	{
		case 1:
		case 7:
		case 29:
		case 25:
		case 27:
		case 31:
		case 33:
		case 35:
		case 13:
		case 21:
		case 23:
		case 25:
		
			iViewSort -=1;			
			s_SortIcon = m_sRessIMGURL + "view-sort-ascending_16.png";		
			break;
	}
	
	//console.log('icoContSort' + iViewSort);	
	
	document.getElementById('icoContSort' + iViewSort).src = s_SortIcon;
}

//:::::::
//:::::::
function fnViewContactInfo(sURL)
{
	var iMsgDivTop = 80;
	var iMsgDivLeft= 120;
	
	var iCenterPos = (m_ClientWidth / 2) - (650 / 2) ;
	

	$("#contacts-fullscreen").css( "display", "" );
		
	//$("#divContactsView").css( {'position' : 'absolute', 'left' : (iMsgDivLeft + 'px'), 'top' : (iMsgDivTop + 'px'), 'display' : 'none'} );
	$("#divContactsView").css( {'position' : 'absolute', 'left' : (iCenterPos + 'px'), 'top' : (iMsgDivTop + 'px'), 'display' : 'none'} );

    
    var iMsgDivHeight = m_ClientHeight - (iMsgDivTop * 2);
	var iMsgDivWidth  = m_ClientWidth - (iMsgDivLeft * 2);
		
	//$('#divContactsView').width(iMsgDivWidth);
	$('#divContactsView').width(650);
	$('#divContactsView').height(iMsgDivHeight + 35);
	
	$("#divContactsView").fadeIn( "fast", function() { });
	
	//set iframe height
	$('#ifm_ContactsView').height(iMsgDivHeight - 5);
	
	$('#ifm_ContactsView').attr('src','about:blank');
	$('#ifm_ContactsView').fadeOut(200, function() 
	{ 	
		$("#ifm_ContactsView").css( {'display' : ''} );
		$('#ifm_ContactsView').attr('src',sURL);
	});	

}

function fnContactsExitFullscreen()
{
	$("#contacts-fullscreen").css( "display", "none" );
	$("#divContactsView").css( "display", "none" );
	$('#ifm_ContactsView').attr('src','about:blank');
	
	$("#mContactMainPanelHead").css( "visibility", "hidden" );
	
	$("#btnContactViewEdit").css( "display", "" );
	$("#btnContactViewSave").css( "display", "none" );
	
	$("#btnContactViewPrint").css( "display", "" );
	$("#btnContactViewEmail").css( "display", "" );
	$("#btnContactViewExport").css( "display", "" );
	$("#btnContactViewDownload").css( "display", "" );
	
	$("#btnContactsGroupForward").css( "display", "none");
	$("#btnContactGroupExport").css( "display", "none" );
}



//:::::::::::Contacts view fn


function fnContactsComposer(sTo, sCc, sBcc, sSubject, sBody)
{
	fnContactsExitFullscreen();
	QComposer('n');
	
	$("#rte_subject").val(sSubject);
	
	/////////////////
	
		   
	if (sCc != "")
	{
		oCurrentAutoTextBox = $('#rte_cc');
		sCC = trim(sCc);
		sCC = sCC.replace(/,/g, ";")
			      
		aCcEmails = sCC.split(";");
			     
		if (aCcEmails.length >= 1)
			fnShowCcBcc('cc');
			     
	    for (i = 0; i < aCcEmails.length; i++)
	    	fnInsertRTEXContactEmail(aCcEmails[i]);
	}
			      

	if (sTo != "")
	{
		oCurrentAutoTextBox = $('#rte_to');
		sCC = trim(sTo);
		sCC = sCC.replace(/,/g, ";")
			      
		aCcEmails = sCC.split(";");
			     			     
	    for (i = 0; i < aCcEmails.length; i++)
	    	fnInsertRTEXContactEmail(aCcEmails[i]);
	}
	
	
	if (sBcc != "")
	{
		oCurrentAutoTextBox = $('#rte_bcc');
		sCC = trim(sBcc);
		sCC = sCC.replace(/,/g, ";")
			      
		aCcEmails = sCC.split(";");
			     
		if (aCcEmails.length >= 1)
			fnShowCcBcc('bcc');
			     
	    for (i = 0; i < aCcEmails.length; i++)
	    	fnInsertRTEXContactEmail(aCcEmails[i]);
	}


	
	/////////////////
	
		
	$('#rte_to').focus();
	fnUpdateRTEText('');
	fnUpdateRTEText('<p style="margin-top:2px; margin-bottom:2px"><br/></p>' + sBody);


}

//:::::::
//:::::::
function fnContactsViewEdit()
{
	
	if ( $("#ifm_ContactsView")[0].contentWindow.fnNotAdmin() )
	{
		UpdateInboxAlert(top.mcLang.Text('lang_cont_87',1));
		return;
	}
	
	
	
	$("#ifm_ContactsView")[0].contentWindow.m_bSaving = true;
	$("#ifm_ContactsView")[0].contentWindow.ShowEditContact();
	
	$("#btnContactViewEdit").css( "display", "none" );
	$("#btnContactViewSave").css( "display", "" );
	
	
	$("#btnContactViewPrint").css( "display", "none" );
	$("#btnContactViewEmail").css( "display", "none" );
	$("#btnContactViewExport").css( "display", "none" );
	$("#btnContactViewDownload").css( "display", "none" );
	
	$("#btnContactsGroupForward").css( "display", "none");
	$("#btnContactGroupExport").css( "display", "none" );


}

//:::::::
//:::::::
function fnContactsViewPrint()
{
	$("#ifm_ContactsView")[0].contentWindow.m_bSaving = true;
   $("#ifm_ContactsView")[0].contentWindow.window.print();
}

//:::::::
//:::::::
function fnContactsViewDelete()
{
   $("#ifm_ContactsView")[0].contentWindow.DeleteCon();
}

function fnContactsConType()
{

	return($("#ifm_apps")[0].contentWindow.fnContactsConType());

}



//:::::::
//:::::::
function fnContactsViewDownloadVcard()
{
   $("#ifm_ContactsView")[0].contentWindow.DownloadVcard();
}


function fnContactsGroupForward()
{

	$("#ifm_ContactsView")[0].contentWindow.window.Forward();
}

function fnContactsGroupExport()
{

	$("#ifm_ContactsView")[0].contentWindow.window.ExportGroup();
}

//:::::::
//:::::::
function fnContactsExportCSV()
{
   $("#ifm_ContactsView")[0].contentWindow.ExportCSV();
}

//:::::::
//:::::::
function fnConctactEmailAs(iType)
{

	switch (iType) 
     {
     
        case 0:  
        		 $("#ifm_ContactsView")[0].contentWindow.SendContactAs('html');
        		 break;                  
        case 1:  
        		 $("#ifm_ContactsView")[0].contentWindow.SendContactAs('vcard');
        		 break; 
        case 2:  
        		 $("#ifm_ContactsView")[0].contentWindow.SendContactAs('bizcard');
        		 break; 
        case 3:  
        		 $("#ifm_ContactsView")[0].contentWindow.SendContactAs('rss');
        		 break; 
        default:
				
    }

}


//:::::::
//:::::::
function fnContactsExportXML()
{
   $("#ifm_ContactsView")[0].contentWindow.SendXML();
}





//:::::::
//:::::::
function fnContactsViewSave()
{
   $("#ifm_ContactsView")[0].contentWindow.AddUpdate();

}



//::::::::::


///Side tags
function fncharOrdA(a, b)
{
    a = a.toLowerCase(); b = b.toLowerCase();
    if (a>b) return 1;
    if (a <b) return -1;
    return 0; 
}

function charOrdD(a, b)
{
    a = a.toLowerCase(); b = b.toLowerCase();
    if (a<b) return 1;
    if (a >b) return -1;
    return 0; 
}


var arrContactsTags;


function fnBuildContactsTags()
{

	$.ajax({

     type: "GET",
     url: '../../contacts/tags2.asp',
     data: "id=xxx", 
     success: function(data) {
           // data is ur summary
          //$('#divContactsTags').html(data);
          
          	arrContactsTags = new Array();
          	aTags = data.split(",");
	    	for (var i = 0; i < aTags.length; i++)
	    		arrContactsTags[i]= aTags[i]; 
	    		
			arrContactsTags.sort(fncharOrdA);
          	
          	var sTagsHTML = '';
		    for(var i=0; i < arrContactsTags.length; i++)
		    {
		            sTagsHTML += '<a class="LeftPanelDir" style="height:30px; line-height: 30px" href="JavaScript:SearchTag(' + i + ')">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' + arrContactsTags[i] + '</a>'
		    }
		    $('#divContactsTags').html(sTagsHTML);
		
		}

   });


}

function fnShowTags()
{
	if  ( document.getElementById("divContactsTags").style.display == 'none')
	{
		 document.getElementById("divContactsTags").style.display = '';
		 $( "#mTagImg" ).removeClass( "imgfliparrow90d" );
		 
		 
		 document.getElementById("mTagImg").src = m_sRessIMGURL + "minus.png";
	}
	else
	{
		 document.getElementById("divContactsTags").style.display = 'none';
		 //$( "#mTagImg").addClass( "imgfliparrow90d" );
		 document.getElementById("mTagImg").src = m_sRessIMGURL + "plus.png";
	}
	

}

function SearchTag(iIndex)
{
   $("#ifm_apps")[0].contentWindow.SearchTag(arrContactsTags[iIndex])
}
/////////


function fnIntContact()
{
    document.getElementById("iFTags").src = "contacts/tags.asp";
}

function fnRefreshTagsIF()
{
    document.getElementById("iFTags").src = "contacts/tags.asp";
}


function fnAddNewContact()
{
	var sNewURL = "../../contacts/contacts_view.asp?ContactID=-999&ConType=global"
	sNewURL += "&Mode=Edit";
	        
	var ourDate = new Date( );
	var sExtraParm = "&Rand=" + ourDate.getUTCDate() + "_" + ourDate.getHours() + "_" + ourDate.getMinutes() + "_" + ourDate.getMilliseconds();
	fnViewContactInfo(sNewURL + sExtraParm);
}
	
function fnAddNewGroup()
{
	var sNewURL = "../../contacts/contacts_view_group.asp?ContactID=-999&ConType=global"
	sNewURL += "&Mode=Edit";
	        
	var ourDate = new Date( );
	var sExtraParm = "&Rand=" + ourDate.getUTCDate() + "_" + ourDate.getHours() + "_" + ourDate.getMinutes() + "_" + ourDate.getMilliseconds();
	fnViewContactInfo(sNewURL + sExtraParm);
}


function fnChangeConType(sConType)
{
	document.getElementById('CallContact').checked = false;

	$("#ifm_apps")[0].contentWindow.ChnageContactsType(sConType);
	
	$( ".LeftPanelDirClick" ).removeClass( "LeftPanelDirClick" );
	$( "#cont_" +  sConType).addClass( "LeftPanelDirClick" );
	
}


function fnExportImport()
{
    parent.parent.main.document.getElementById("ContactsIF").src = "/contacts/new_import_export.asp";
    parent.parent.main.document.getElementById("ContLoading").style.display = "";
    parent.parent.main.document.getElementById("ViewTable").style.display = "none";
    parent.parent.main.document.getElementById("ContactsIF").style.display = "none"; 
}

//////////////////////////////////////////////////////////////////////////


//:::::::
//:::::::
function fnGetInbox(sFolderName) 
{
    // beg <uad_korney> 1/22/2016 Fix an issue with lost notifier pop-up
    if ((m_dtTSFirstMsg == '') || (m_dtTSFirstMsg == 'full')) {
        var mydate = new Date();
        var myyear = mydate.getYear();
        if (myyear < 200) myyear = myyear + 1900;
        m_dtTSFirstMsg = (mydate.getMonth() + 1) + "/" + mydate.getDate() + "/" + myyear + " " + formatAMPM(mydate)
    }
    // end <uad_korney> 1/22/2016

	var sURL = '../mail/ms_ajax.asp?folder=' + encodeURI(sFolderName) + '&pg=' + CurentPage + '&msgno=' + MsgPerPage + '&sortby=' + sort_by + '&sort_order=' + sort_order + '&dtTS=' + dtTS + '&JSON=yes';
	
	//Quick View?	
	if (m_bInQuickViewMode)
	{
		sURL = sURL + '&filter=' + m_sFolderFetchFilter; //<uad_korney> 06/07/2016 added the Filter support
		sURL = sURL + '&filterFromEmails=' + encodeURIComponent(m_sFilterFromEmails); //<uad_korney> 06/07/2016 added the Filter support
	}
	else
	{
		sURL = sURL + '&filter=';
		sURL = sURL + '&filterFromEmails=';
	}			
	
    var obj_callback = new clsAjaxcallback();    
    obj_callback.Ajaxcallback.success = sCheckFolderREcords;
    makeRequest(sURL, obj_callback.Ajaxcallback);
}

function fnResizeMoveToDirMenu()
{

			///////////

			var mPOPOpt_Height = $('#mPOPOpt').outerHeight();
			
			var MainWrapperHeight = $('#MainWrapper').height();

			if ( mPOPOpt_Height > MainWrapperHeight)
			{
			
				$('#mPOPOpt').height(MainWrapperHeight -60);
				$('#mInboxDirsList').height(MainWrapperHeight -60);
				$('#mInboxDirsList').css('overflow-y', 'scroll');
			}
			

}


//:::::::
//:::::::
function fnShowInbox(sFolder)
{
	fnCloseMsg();
	CurentPage = 1;

	document.getElementById('mMainPanelTitle').innerHTML = ' ' +
				'<span style="font-size: 14px;"><a  class="InboxActions jqTootltip" title="' + mcLang.Text('lang_mail_61',1) + '" style="padding-right:0px; padding-left:6px" id="ckInbox" href="JavaScript:fnShowPOPOpt(\'ckInbox\', \'mCheckBoxOptions\',0,0)">&nbsp;<input name="Call" id="Call" type="checkbox" value="ON" onclick="event.stopPropagation(); CAll(this)" />&nbsp;&nbsp;<img class="jqTootltip" title="' + mcLang.Text('lang_mail_107',1) + '" height="4" id="mMainCheckOptImg" src="' + m_sRessIMGURL + 'down_icon.png" width="8" />&nbsp;&nbsp;</a>&nbsp;' +
				'<a  class="InboxActions" style="display:none" href="JavaScript:fnMailEmptyFolder()" id="btnEmptyFolder">' + mcLang.Text('lang_mail_41',1) + '</a>' +
				'<a  class="InboxActions" style="" style="font-weight:bold" id="mOptInboxMoreNM" href="JavaScript:fnShowPOPOpt(\'mOptInboxMoreNM\', \'mInboxMoreOptionsNM\',0,0)">' + mcLang.Text('lang_mail_46',1)  + '&nbsp;&nbsp;<img alt="" height="4" id="mMainCheckOptImg" src="' + m_sRessIMGURL + 'down_icon.png" width="8" /></a>' +
				'<a  class="InboxActions" class="jqTootltip" title="' + mcLang.Text('lang_mail_104',1) + '" style="visibility:hidden" href="JavaScript:AC(0)" id="btnDelete">' + mcLang.Text('lang_mail_22',1) + '</a>' +
				'<a  class="InboxActions" class="jqTootltip" title="' + mcLang.Text('lang_mail_105',1) + '" style="visibility:hidden" href="JavaScript:AC(1)" id="btnBlock">' + mcLang.Text('lang_mail_21',1) + '</a>' +
				'<a  class="InboxActions" class="jqTootltip" title="' + mcLang.Text('lang_mail_19',1) + '" style="visibility:hidden" href="JavaScript:AC(2)" id="btnMarkRead">' + mcLang.Text('lang_mail_19',1) + '</a>' +
				'<a  class="InboxActions" class="jqTootltip" title="' + mcLang.Text('lang_mail_19',1) + '" style="visibility:hidden" href="JavaScript:AC(3)" id="btnMarkUnRead">' + mcLang.Text('lang_mail_12',1) + '</a>' +
				'<a  class="InboxActions" style="visibility:hidden" class="jqTootltip" title="' + mcLang.Text('lang_mail_109',1) + '" id="btnStar" href="JavaScript:fnShowPOPOpt(\'btnStar\', \'mInboxStarPOPOptt\',0,0)">' + mcLang.Text('lang_mail_27',1) + '&nbsp;&nbsp;<img alt="' + mcLang.Text('lang_mail_46',1) + '" height="4" id="mMainCheckOptImg" src="' + m_sRessIMGURL + 'down_icon.png" width="8" /></a></a>' +
				'<a  class="InboxActions" class="jqTootltip" title="' + mcLang.Text('lang_mail_106',1) + '"  style="visibility:hidden" id="btnMove" href="JavaScript:fnShowPOPOpt(\'btnMove\', \'mInboxDirsList\',0,0); fnResizeMoveToDirMenu()">' + mcLang.Text('lang_mail_39',1) + '&nbsp;&nbsp;<img alt="' + mcLang.Text('lang_mail_46',1) + '" height="4" id="mMainCheckOptImg" src="' + m_sRessIMGURL + 'down_icon.png" width="8" /></a></a>' +
				'<a  class="InboxActions" style="visibility:hidden" style="font-weight:bold" id="mOptInboxMore" href="JavaScript:fnShowPOPOpt(\'mOptInboxMore\', \'mInboxMoreOptions\',0,0)">' + mcLang.Text('lang_mail_46',1)  + '&nbsp;&nbsp;<img alt="" height="4" id="mMainCheckOptImg" src="' + m_sRessIMGURL + 'down_icon.png" width="8" /></a>' +
				'&nbsp;&nbsp;&nbsp;<div id="divInboxOpt" style="display:inline-block; float: right; font-size: 12px;"><span id="PagesDIV"></span>&nbsp;<a  class="InboxActions" style="visibility:X" id="btnArrangeBy" href="JavaScript:fnShowPOPOpt(\'btnArrangeBy\', \'mInboxbtnArrangeBy\',-24,0)">' + mcLang.Text('lang_mail_47',0) + '&nbsp;&nbsp;<img alt="' + mcLang.Text('lang_mail_46',1) + '" height="4" id="mMainCheckOptImg" src="' + m_sRessIMGURL + 'down_icon.png" width="8" /><a  class="InboxActions" id="btnInboxPaneView" title="' + m_SplitPaneMode + '" href="JavaScript:fnShowPOPOpt(\'btnInboxPaneView\', \'mPaneOptMenu\',-118,0)">' + '<img height="16" id="mMainCheckOptImg" src="' + m_sRessIMGURL + 'rpanel16.png" width="16" />&nbsp;&nbsp;<img alt="' + mcLang.Text('lang_mail_46',1) + '" height="4" id="mMainCheckOptImg" src="' + m_sRessIMGURL + 'down_icon.png" width="8" />&nbsp;</div></<span>'				

 
	if ( (slang == 'av') ||  (slang == 'es') )
	{
	if (document.getElementById("mOptInboxMore"))
		document.getElementById("mOptInboxMore").style.display = "none";
	}
	
    //show Not Spam?
    if ((sFolder.toLowerCase() == '/junk mail')) {
        document.getElementById("mInboxMoreOptionsNotSpam").style.display = '';
    }
    else
        document.getElementById("mInboxMoreOptionsNotSpam").style.display = 'none';

    if ((sFolder.toLowerCase() != '/junk mail') && (sFolder.toLowerCase() != '/deleted items')
        && (sFolder.toLowerCase() != '/sent items') && (sFolder.toLowerCase() != '/drafts')) {
        document.getElementById("mInboxMoreOptionsMarkAsSpam").style.display = '';
    }
    else
        document.getElementById("mInboxMoreOptionsMarkAsSpam").style.display = 'none';


	//show empty btn?
	if ( (sFolder.toLowerCase() == '/junk mail') || (sFolder.toLowerCase() == '/deleted items') ) 
	{
		document.getElementById("btnEmptyFolder").style.display = '';
	}
	else
		document.getElementById("btnEmptyFolder").style.display = 'none';

	disableSelection(document.getElementById('mMainPanelTitle'));
	disableSelection(document.getElementById('mMsgPanelHead'));
	disableSelection(document.getElementById('Msg_Loading'));
	
	//disableSelection(document.getElementById('mLeftPanelBody'));
	$('#mLeftPanelBody').on('dragstart', function(event) { event.preventDefault(); });
	
	//YAHOO.util.Dom.setStyle('mMainPanelHead', 'backgroundColor', 'rgb(244,244,244)'); 
	//YAHOO.util.Dom.setStyle('mMainPanelHead', 'color', 'rgb(255,255,255)');
					
	//document.getElementById("ifmDashboard").style.display = "none";
	
	YAHOO.util.Dom.setStyle('mFolderData', 'height', ((mimMainPanelHeight - 50) + "px"));
	
	document.getElementById("mFolderData").style.display = "";
	
	if (mFirstInboxCall)
	{
		mFirstInboxCall = false;
		fShowInboxModule();
	}
	else
	{

		if (sFolder.toLowerCase() !== v_sFolder.toLowerCase())
			dtTS = "full";
			
		m_sPrevFolder = v_sFolder;	
		v_sFolder = sFolder;
		fnGetInbox(sFolder);
	}

}

	//:::::::
	//:::::::
	function sCheckFolderREcords(o)
	{
	
	    if(o.responseText !== undefined)
        {
            m_sFolderRecords = o.responseText; 
            
            if ( (v_sFolder.toLowerCase() == '/inbox') && (CurentPage == 1) && (m_bInboxAutoNextPage == false) && (m_bInQuickViewMode == false) )
            	fnSotrageSave_Inbox(m_sFolderRecords);
            o = null;
            if (m_sFolderRecords == "m2w99")
			{
				sMessage = mcLang.Text('lang_Gen_19',0);
				sMessage = sMessage.replace(/_xxbreaklinexx_/gi, "\n\n");
			    alert(sMessage);
			    fnSignoutUser();                
			    return;
			}
			
		}
		//else
		//	m_sFolderRecords = '';
	
		if (mFirstInboxCall == false)		
			fShowInboxModule();
		else
		{
			
			YAHOO.util.Dom.setStyle('bodyID', 'backgroundColor', 'rgb(255,255,255)');

			//remove the login iframe
			$('#ifm_login').remove();
			
			document.getElementById("mMainPanel").style.display = "";
			document.getElementById("mLeftPanel").style.display = "";
			//document.getElementById("mRightPanel").style.display = "none";	
			
			if (mbRightPanelBanner)
			{
				if (mbHideBannerOpt == 'false')
					document.getElementById("divHideBannerOpt").style.visibility = "hidden";
				document.getElementById("ifrmBanner").src = mbRightPanelBannerURL;
				document.getElementById("mMainPanelBanner").style.display = "";
			}

			
				
			document.getElementById("mMainHeader").style.visibility = "visible";
			document.getElementById("mTopPanelRight").style.visibility = 'visible';
			
			fnCheckFolderScroll();

			//has a wlcome page?
			if (mbWelcomePage)
				fnApp(7,false);
			else
				fnApp(0,false);
			
			
		   //start notifier ::::::::::
		   m_AutoCheckTimeNotyID = window.setTimeout("AutoNoty()",m_AutoCheckTimeNoty);
			
		
		}

	}
	
	function fnHideSideBanner()
	{
		document.getElementById("mMainPanelBanner").style.display = "none";
		document.getElementById("ifrmBanner").src = "about:blank";
		mbRightPanelBanner = false;
		fnResizePage();
	}

	var m_bInboxAutoNextPage = false; 
	var m_bInboxAutoNextPageScroll = 0; 
	var m_bInboxAutoNextPageCount = 1;
	var m_bInboxAutoNextPageBusy = false;
	var m_bAutoCheckCall = false;



	//:::::::
	//:::::::	
    function fShowInboxModule() {
    
    		if (m_iCurrentAppIndex != 0)
    			return;
    		
    
    		document.getElementById("mOptInboxMore").style.visibility = 'hidden'; 
        
        	var sHTTPData = '';
        	var row_arr;
        	var iTotalMessages = 0;
        	var i =0;
        	var iTotalQVCount = 0;
        	
        	var sPriorityIcon;   
	        var sHTMLData = "";  
	        var dtTSFirstMsg = "full";
	        
	        if (mSkinUI == 'telmex') or (m_sDomaincode == 'embratelcloudcombr')
               		bFlipDate = true

	        var sSearchFolderHTML = '';
	        m_sSearchFolder = '';
	            	
    		if (bMoveScrollTop)
    		{
    			$('#Msg_Panel_Inbox_Data').scrollTop(0);
    			bMoveScrollTop = false;
    		}
    		
    		 //refresh sortby menu
			 HSort(sort_by, true); 

    		
        	var monthNames = [ mcLang.Text('lang_msearch_12',1), mcLang.Text('lang_msearch_13',1), mcLang.Text('lang_msearch_14',1), mcLang.Text('lang_msearch_15',1), mcLang.Text('lang_msearch_16',1), mcLang.Text('lang_msearch_17',1), mcLang.Text('lang_msearch_18',1), mcLang.Text('lang_msearch_19',1), mcLang.Text('lang_msearch_20',1), mcLang.Text('lang_msearch_21',1), mcLang.Text('lang_msearch_22',1), mcLang.Text('lang_msearch_23',1) ];
        	///
	        var DigitalT=new Date();
		    FullTime = (DigitalT.getMonth() + 1) + '/' + DigitalT.getDate() + '/' + DigitalT.getFullYear();
		    FullTimeY = (DigitalT.getMonth() + 1) + '/' + (DigitalT.getDate() - 1) + '/' + DigitalT.getFullYear(); 
		    sYear = DigitalT.getFullYear();
        	
        	var messages = [];
        	
            // begin 01/12/2016 <uad_korney>
        	if (m_bMSAjaxRESTAPI || m_sInboxMode == 'search')
        	{
        		// Process the JSON data returned from the server
        		
        		document.getElementById('Call').checked = false;
        		
        		m_TotalMsgs = 0;
        		fnShowInboxActions();

				messages = YAHOO.lang.JSON.parse(m_sFolderRecords);
				m_sFolderRecords = '';
				if (typeof messages.APIError != "undefined") {
				    if (messages.APIError.Code == "-1003") {
				        sMessage = mcLang.Text('lang_Gen_19', 0);
				        sMessage = sMessage.replace(/_xxbreaklinexx_/gi, "\n\n");
				        alert(sMessage);
				        fnSignoutUser();
				        return;
				    } else {
				        return;
				    }
				}
                //Searching?
				if (m_sInboxMode != 'search') {
        		    document.getElementById("btnArrangeBy").style.visibility = "visible";
				    if (dtTS == "full") {
				        var sURLAJAXFolder = messages.feed["mw:folder"];
				        if (v_sFolder.toLowerCase() != sURLAJAXFolder) {
				             return;
				        }
				    }
				    if (typeof messages.feed.entry == 'undefined') {
				        document.getElementById("mOptInboxMoreNM").style.display = 'none';

				        //PlzWait(0);
				        if (dtTS == "full") {
				            document.getElementById("btnEmptyFolder").style.display = 'none';
				            document.getElementById('Msg_Panel_Inbox_Data').innerHTML = '<div class="MHEmpty">' + folders_txt_nomess + '</div>';
				            ShowPagesList(0);
				            //fnOnResize();
				            //UpdateArrowSort();
				        }

				        if (m_bManualCheck) {
				            //m_bManualCheck = false;
				            //UpdateUserAlert( NoNewMsgs , 'info.gif');
				        }

				        //ShowDelMsgNote();
				        //ShowEmptyLink();
				        return;
				    }
				    if (!(m_bInboxAutoNextPage || m_bAutoCheckCall)) {
				        m_MsgIndex = -1;
				    }
				} else {
				    var sSearchHeader = messages.feed["mw:search"];
				    if (typeof sSearchHeader == 'undefined') {
                        //temporary fix for Search from legacy RESTAPI
				        if (typeof messages.feed["mw:folder"] != 'undefined') {
				            return;
				        }
				    }
				    if (typeof messages.feed.entry == 'undefined') {
				        UpdateInboxAlert(mcLang.Text('lang_msearch_42', 1)); //You can broaden your search to look in "Mail & Spam & Trash
				        //m_sInboxMode = '';
				        document.getElementById('Msg_Panel_Inbox_Data').innerHTML = '<div class="MHEmpty">' + m_sNoSearchFound + '</div>';
				        ShowPagesList(0);
				        fnCloseMsg();
				        $(".LeftPanelDirClick").removeClass("LeftPanelDirClick");
				        document.getElementById("btnEmptyFolder").style.display = 'none';
				        return;
				    }
        		    $('#Msg_Panel_Inbox_Data').scrollTop(0);
        		    m_MsgIndex = -1;
        		    //remove folder's higlight fnSwitchRPView
        		    YAHOO.util.Dom.removeClass(m_ObjCurretnSelectedDir, 'LeftPanelDirClick');
                    //just show the msg. for the first page...
        		    if (CurentPage == 1)
        		    {
        			    iTotal = parseInt(messages.feed.mwcount);
	        		    if ( iTotal == 1)
	        		    {
	        			    sMessage = mcLang.Text('lang_msearch_39',1);
	        			    UpdateInboxAlert(sMessage);
	        		 
	        		    }
	        		    else
	        		    {
	        			    sMessage = mcLang.Text('lang_msearch_40',1);
						    sMessage = sMessage.replace(/xxxx/g, iTotal);
	        			    UpdateInboxAlert( sMessage );
	        			
	        		    }
        		    }
        	        //hide btnArrangeBy  
				    document.getElementById("btnArrangeBy").style.visibility = "hidden";
				}
       	    	iTotalMessages = messages.feed.entry.length;
				iTotalMessages +=1;

        	    //don't show page list
        		ShowPagesList(parseInt(messages.feed.mwcount));  
        		
        		iTotalQVCount =  parseInt(messages.feed.mwcount);


         	}
       	    // end 01/12/2016 <uad_korney>
        	else // Normal Inbox ::::::::::::::::::::::::
        	{
        		//show btnArrangeBy  
        		document.getElementById("btnArrangeBy").style.visibility = "visible";
       		
	            sHTTPData = m_sFolderRecords; 
	            
	            if (dtTS == "full")
	            {
					sURLAJAXFolder = sHTTPData.split('##|#@_F#')[1];
					
					if ( v_sFolder.toLowerCase() != sURLAJAXFolder ) 
						return;
					
	            	sHTTPData = sHTTPData.split('##|#@_F#')[0];
	            }

	            if (sHTTPData == "m2w99")
				{
					sMessage = mcLang.Text('lang_Gen_19',0);
					sMessage = sMessage.replace(/_xxbreaklinexx_/gi, "\n\n");
			    	alert(sMessage);
				    fnSignoutUser();
				    return;
				}
				
				//CheckFoldersActions();
	
	            if (sHTTPData == "")
				{
					document.getElementById("mOptInboxMoreNM").style.display = 'none';

	                //PlzWait(0);
	                if (dtTS == "full")
	                {
	                	document.getElementById("btnEmptyFolder").style.display = 'none';
	                    document.getElementById('Msg_Panel_Inbox_Data').innerHTML = '<div class="MHEmpty">' + folders_txt_nomess + '</div>';
	                    ShowPagesList(0);
	                    //fnOnResize();
	                    //UpdateArrowSort();
	                }
	                
	                if (m_bManualCheck)
	                {
	                    //m_bManualCheck = false;
	                    //UpdateUserAlert( NoNewMsgs , 'info.gif');
	                }
	                
	                //ShowDelMsgNote();
	                //ShowEmptyLink();
				    return;
				}
				
				if ( m_bInboxAutoNextPage || m_bAutoCheckCall )
				{
				
				}
				else
	                m_MsgIndex = -1;
	
	            row_arr= sHTTPData.split(m_RDelimiter);
	            sHTTPData = "";
            	iTotalMessages = row_arr.length;
            }
           
            //Show the more button  
        	document.getElementById("mOptInboxMoreNM").style.display  = ''; 

	        
	        while (i < (iTotalMessages - 1))
            {
	            // begin 01/12/2016 <uad_korney>
	            if (m_bMSAjaxRESTAPI || m_sInboxMode == 'search')
	            // end 01/12/2016 <uad_korney>
            	{	  
					/*
					{ "feed": {
					"title": "Messages kabed@mail2world.net", 
					"link": { "href": "http://HLSQL01OC/restapi/v250/kabed@mail2world.net/Mail/Folders/inbox/Messages" }, 
					"tagline": { "type": "text/html", "mode": "escaped", "tagline": "" }, 
					"author": {"name": "kabed@mail2world.net", "email": "kabed@mail2world.net" }, 
					"copyright": "Copyright 2014", 
					"modified": "2014-05-05T03:57:27Z", 
					"id": "http://HLSQL01OC/restapi/v250/kabed@mail2world.net/Mail/Folders/inbox/Messages", 
					"mw:count": "495", 
					"mw:new": "42", 
					"entry": [
						{
						"title": "V12 - PRC 1.3", 
						"link": "http://HLSQL01OC/restapi/v250/kabed@mail2world.net/Mail/e81aad72-a154-42a9-8df0-c1d0994b40f5", 
						      {E81AAD72-A154-42A9-8DF0-C1D0994B40F5}
						"id": "e81aad72-a154-42a9-8df0-c1d0994b40f5", 
						"summary": "From: &quot;Youssef Abed&quot; &lt;&gt; Received on: 5/2/2014 11:04 AM", 
						"content": "", 
						"issued": "2014-05-02T18:04:36Z", 
						"updated": "2014-05-02T18:04:36Z"
						, "mw:from": "Youssef Abed"
						, "mw:fromemail": ""
						, "mw:read": "True"
						, "mw:reply": "False"
						, "mw:forward": "False"
						, "mw:followup": "False"
						, "mw:attachment": "True"
						, "mw:priority": "1"
						, "mw:received": "2014-05-02T11:04:36.00-07:00"
						, "mw:colorflag": ""
						, "mw:colorcode": "0"
						, "mw:folder": "Inbox"
					}
					*/  
					  
					msg_id = messages.feed.entry[i].id;  //msgid
			        msg_su = messages.feed.entry[i].title;  //subject
			        
			        msg_rd = messages.feed.entry[i]['mw:received'];  //received
			        msg_fr = messages.feed.entry[i]['mw:from'];  //from
			        msg_fe = messages.feed.entry[i]['mw:fromemail'];  //fromemail
			        msg_to = messages.feed.entry[i]['mw:to'];  //msgto
			        msg_te = messages.feed.entry[i]['mw:fromemail'];  //msgtoemail
			        msg_ln = 2000;  //length
			        msg_re = messages.feed.entry[i]['mw:read'];  //read
			        msg_pr = messages.feed.entry[i]['mw:priority']; //priority
			        msg_ha = messages.feed.entry[i]['mw:attachment']; //hasattachment
			        msg_rp = messages.feed.entry[i]['mw:reply']; //reply
			        msg_fw = messages.feed.entry[i]['mw:forward']; //forward
			        msg_fo = messages.feed.entry[i]['mw:followup']; //followup
                                //begin <uad_korney> 11/02/2015 fix issue with forward/replied icons
			        msg_rf = msg_fw == "True" && msg_rp == "True" ? "RF" : msg_fw == "True" ? "F" : msg_rp == "True" ? "R" : ""; //relatefr 
			        //msg_rf = "" //messages.feed.entry[i].xxxxxx; //relatefr 
                                //end <uad_korney> 11/02/2015
			        msg_co = messages.feed.entry[i]['mw:colorcode']; //color
			        msg_mc = parseInt(messages.feed.mwcount) //iTotalMessages; //messagecount
			        msg_bc = ''; //bcc
			        msg_ff = messages.feed.entry[i]['mw:colorflag']; //followupflag   Flag 
			        msg_ri = ''; //reminderid
			        
			        msg_snippet = messages.feed.entry[i]['mw:snippet'];
			        
			        if(typeof msg_snippet === 'undefined'){
    					msg_snippet = '';
    				};
			        
                                if (typeof msg_to === 'undefined') {
			            msg_to = '';
			        }
			        sSearchFolder = messages.feed.entry[i]['mw:folder']; 
	                // begin 01/12/2016 <uad_korney>
			        if ((m_sInboxMode == 'search') && (typeof sSearchFolder != 'undefined') && (sSearchFolder != m_sSearchFolder))
			        // end 01/12/2016 <uad_korney>
			        {
			        	m_sSearchFolder = sSearchFolder;
			        	
                                        //begin <uad_korney> 11/02/2015 Fix an appearance of Inbox sub-folders			        	
			        	if (sSearchFolder.indexOf('m2winbox_') == 0 ) 
			        		sSearchFolder = "Inbox/" + sSearchFolder.split('m2winbox_')[1];
	
			        	if (sSearchFolder.indexOf('M2WINBOX_') == 0 ) 
			        		sSearchFolder = "Inbox/" + sSearchFolder.split('M2WINBOX_')[1];
 			        	//if (sSearchFolder.indexOf('m2winbox_') == 0 ) 
			        	//	sSearchFolder = sSearchFolder.split('m2winbox_')[1];
	
			        	//if (sSearchFolder.indexOf('M2WINBOX_') == 0 ) 
			                //	sSearchFolder = sSearchFolder.split('M2WINBOX_')[1];
                                        //end <uad_korney> 11/02/2015	
		        		
			        		  
			        	
			        	switch ( sSearchFolder.toLowerCase() ) 
		                {
		                    case 'inbox':   
		                        sSearchFolder = sFolderLang_Inbox;
		                        break;        
		                    case 'junk mail':   
		                        sSearchFolder = sFolderLang_Spam;
		                        break; 
		                    case 'deleted items':   
		                        sSearchFolder = sFolderLang_Trash;
		                        break; 
		                    case 'sent items':   
		                        sSearchFolder = sFolderLang_Sent;
		                        break; 
		                    case 'drafts':   
		                        sSearchFolder = sFolderLang_Drafts;
		                        break; 
		                }

			        	sSearchFolderHTML = '<div class="MData" style="font-weight: bold; color:#6C6C6C; height:38px; line-height:38px; background-color:#fff">&nbsp;&nbsp;&nbsp;<img src="' + m_sRessIMGURL + 'mbox_folder.png" style="height:16px; width:16px;">&nbsp;&nbsp;' + sSearchFolder + '</div>';
			        }
			        else
			        	sSearchFolderHTML = '';
					
					// beg <uad_korney> 1/22/2016 Fix an issue with lost notifier pop-up
			        if ((m_sInboxMode != 'search') && (i == 0)) {
			            dtTSFirstMsg = msg_rd;

			            //Fore auto notifier
			            if ((v_sFolder.toLowerCase() == '/inbox') && (CurentPage == 1) && (m_bInboxAutoNextPage == false) ) {
			                if ((sort_by.toLowerCase() == 'received') && (sort_order.toLowerCase() == 'desc'))
			                {
			                    m_dtTSFirstMsg = msg_rd;
			                    if (m_bInQuickViewMode == false)
			                    	dtTSLastInbox = msg_rd;
			                }
			            }
			        }
					// end <uad_korney> 1/22/2016 
			           
	                m_MsgIndex +=1;
	                
	                switch (msg_ff) 
	                {
	                    case '':   
	                        msg_ff = '0';
	                        break;        
	                    case 'red':   
	                        msg_ff = '1';
	                        break; 
	                    case 'yellow':   
	                        msg_ff = '2';
	                        break; 
	                    case 'green':   
	                        msg_ff = '3';
	                        break; 
	                    case 'blue':   
	                        msg_ff = '4';
	                        break; 
	                    default:
	                        msg_ff = '0';
	                }


					//temp to get correct date
					summary = messages.feed.entry[i].summary; 
					msg_rd = summary;

					msg_id = '{' + msg_id + '}'
            	
            	}
            	else
            	{
	                cell_arr = row_arr[i].split(m_CDelimiter);
			        msg_id = cell_arr[0];  //msgid
			        msg_su = cell_arr[1];  //subject
			        msg_rd = cell_arr[2];  //received
			        msg_fr = cell_arr[3];  //from
			        msg_fe = cell_arr[4];  //fromemail
			        msg_to = cell_arr[5];  //msgto
			        msg_te = cell_arr[6];  //msgtoemail
			        msg_ln = cell_arr[7];  //length
			        msg_fl = cell_arr[8];  //flag
			        msg_re = cell_arr[9];  //read
			        msg_pr = cell_arr[10]; //priority 
			        msg_ha = cell_arr[11]; //hasattachment
			        msg_rp = cell_arr[12]; //reply
			        msg_fw = cell_arr[13]; //forward
			        msg_fo = cell_arr[14]; //followup
			        msg_rf = cell_arr[15]; //relatefr
			        msg_co = cell_arr[16]; //color
			        msg_mc = cell_arr[17]; //messagecount
			        msg_bc = cell_arr[18]; //bcc
			        msg_ff = cell_arr[19]; //followupflag
			        msg_ri = cell_arr[20]; //reminderid
	                m_MsgIndex +=1; 
	                
	                msg_snippet = '';
	                
	                if (i==0)
	                {
	                    dtTSFirstMsg = msg_rd;
	                    
	                    //Fore auto notifier
	                    if ( (v_sFolder.toLowerCase() == '/inbox') && (CurentPage == 1) && (m_bInboxAutoNextPage == false)  )
	                    {
	                    	if ( (sort_by.toLowerCase() == 'received') && (sort_order.toLowerCase() == 'desc') )
								m_dtTSFirstMsg = msg_rd;
	                    }
	                     	
	                    ShowPagesList(parseInt(msg_mc));
	                }

	                
                 }
                
                
                if (msg_fr.length == 0)
		            msg_fr = msg_fe;


                if ( ((v_sFolder.toLowerCase() == '/sent items') || (v_sFolder.toLowerCase() == '/drafts')) && (m_sInboxMode != 'search' ) ) 
                {
                    msg_fr =  msg_to;
                    msg_fe = msg_to;
                }
                    
				//msg_fr = msg_fr.replace(/</g, "");
				//msg_fr = msg_fr.replace(/>/g, "");
				msg_fr = fnEscapeHtml(msg_fr);
				
	            if (msg_fr.length == 0)
		            msg_fr = "(none)";
		            
		         //   if (msg_su == '** Inbox and Top-nav') 
		         //        msg_fr += '&nbsp;<IMG src="../images/Emoticons/chilipepper[1].gif"><IMG src="../images/Emoticons/chilipepper[1].gif"><IMG src="../images/Emoticons/chilipepper[1].gif">';

	            if (msg_su.length == 0)
		            msg_su = "(no subject)";
		        else
		        {
		        	//if (m_sInboxMode != 'search' )
		        	//	msg_su = htmlEncode(msg_su);
		        }

				//msg_su = msg_su.replace(/</g, htmlEncode('<') );
				//msg_su = msg_su.replace(/>/g, htmlEncode('>') );
				

				
				msg_su  = fnEscapeHtml(msg_su);
				
				if (msg_snippet.length > 1) 
			    {
			        	msg_su += '<span style="color:#93939F; font-weight: normal"> - ' + fnEscapeHtml(msg_snippet) + '</span>';
			        
			    }


		        
		        v_iSize = parseInt(msg_ln)
                if (v_iSize  >= 1046529)
                    v_iSize = parseInt((v_iSize  / 1023) / 1023) + " MB";
                else
                    v_iSize = parseInt(v_iSize  / 1023) + " KB";
                    
                if (v_iSize == "0 KB")
                	v_iSize = "1 KB";

				///////////////
				sOriginalDateTime = msg_rd;
                sDate = msg_rd.split(' ');
                
                if (mSkinUI == 'telmex') or (m_sDomaincode == 'embratelcloudcombr')
               		bFlipDate = true
               
                if (bFlipDate)
                    DigitalT=new Date(msg_rd);
                
			    if ( (sDate[0] == FullTime) && (sDate.length >=2 ))
			    {
					    sDateHTML = sDate[1];
					    sDateHTML = sDateHTML.split(':')[0] + ":" + sDateHTML.split(':')[1] + " " + sDate[2];
					    
			    	    	   if (bDanishDate){
								var hh, mm;
								if (DigitalT.getHours() < 10) hh= '0' + DigitalT.getHours(); else hh= DigitalT.getHours();
								if (DigitalT.getMinutes() < 10) mm= '0' + DigitalT.getMinutes(); else mm= DigitalT.getMinutes();
								sDateHTML = hh + ':' + mm;	
					    }
					    
					    if (mSkinUI == 'telmex')
						{
									s24Time = msg_rd.split(' ');
									s24Time[0] = ''; 
									s24Time = s24Time.join(' ');
									if (m_sInboxMode == 'search' )
										s24Time = s24Time.replace(/ /gi, ':00 ');
									sDateHTML = fnConvert_to_24h(s24Time);
						}

			    }	
			    else
			    {
			        if (sDate[0] == FullTimeY) 
			            sDateHTML = mcLang.Text('lang_mail_64',1); //"Yesterday"; RPL021610
			        else {
			            if (bFlipDate) {
			                sDateHTML = DigitalT.getDate() + "/" + (DigitalT.getMonth() + 1) + "/" + DigitalT.getFullYear();
			                msg_rd = sDateHTML + " " + sDate[1];
			            }
			            else
			            {
			            	iYear = sDate[0].split('/')[2] 
			            	iDay = sDate[0].split('/')[1]
			            	iMonth = sDate[0].split('/')[0]
			            	if (sYear == iYear)
			            	{
			            		sDateHTML = monthNames[iMonth - 1] + ' ' + iDay;
			            	}
			            	else
			            	{
			            		sYear =  (sDate[0].split('/')[2] % 100);
			            		if (sYear < 10)
			            			sYear = '0' + sYear;
			                	sDateHTML = sDate[0].split('/')[0] + '/' + sDate[0].split('/')[1] + '/' + sYear; 
			                	//if (mSkinUI == 'telmex')
			                	//	sDateHTML =   sDate[0].split('/')[1] + '/' + sDate[0].split('/')[0] + '/' + sYear;
			                }
			                
			            }
			        }
			    }
			    
                if (bFlipDate)
                    msg_rd = DigitalT.getDate() + "/" + (DigitalT.getMonth() + 1) + "/" + DigitalT.getFullYear() + " " + sDate[1] + " " + sDate[2];
				///////////////

			    if (msg_co == null)
			        msg_co = "";
			    else
			        msg_co = "#" + msg_co ;


                
                //:::find icon
                //custom pop colllector email?
				if ( (msg_bc > 3) && (msg_bc != 'undefined') ) 
                        sIcon = msg_bc + ".png";
				else
				{
					if (msg_rf == "FR" )
						msg_rf = "RF";
             
					if ( (msg_rf == "RF") || (msg_rf == "R") || (msg_rf == "F") )
						sIcon = msg_rf;
					else
						sIcon = "t";
					sIcon += ".png";
				}
 
                sIcon =  '<img  src="' + m_sRessIMGURL  + sIcon + '" id="Ico' + m_MsgIndex + '" style="padding-top:7px; height:16px; width:26px">'

				m_sFlagtitleOff = mcLang.Text('lang_mail_42',1);

                sFlagImg = m_sRessIMGURL + "star_off.png";
                sFlagsTitle = m_sFlagtitleOn;
                switch (msg_ff) 
                {
                    case '0':   
                        sFlagImg = m_sFlagsType + "_off.png";
                        
                        break; 
                    case '1':   
                        sFlagImg = m_sFlagsType + "_red.png";
                        break;
                    case '2':   
                        sFlagImg = m_sFlagsType + "_yellow.png";
                        break;
                    case '3':   
                        sFlagImg = m_sFlagsType + "_green.png";
                        break;
                    case '4':   
                        sFlagImg = m_sFlagsType + "_blue.png";
                        break;
                    default:
                        sFlagImg = "star_off.png";
                }
                
                //sFlagImg = "star_fav_empty_icon&16.png"
                                
                if (sFlagImg == 'trans.gif' )
                    sFlagImg = '<img src="' + m_sRessIMGURL  + sFlagImg + '" width="16px" height="15px" style="padding-top:6px" />';
                else
                    sFlagImg = '<img onmouseout="outFlags(this)"  title="' + m_sFlagtitleOff + '" style="padding-top:6px" onclick="fnShowMiniPOPOpt(\'fl' + m_MsgIndex + '\', \'mInboxMiniStars\', event)" FC="' + msg_ff + '" FI="' + m_MsgIndex + '" id="fl' + m_MsgIndex + '" src="' + m_sRessIMGURL  + sFlagImg + '" style="padding-top:2px" width="16px" height="16px"/>';

                if  (msg_re == "False")
				    sRowCSS = "MN";
			    else
				    sRowCSS = "";
				
				sAttachIcon = "";
				
				//if (v_sFolder.toLowerCase() == '/drafts')
				//	alert(msg_ha);
				
                if (msg_ha == "True")
					sAttachIcon = '<img src="' + m_sRessIMGURL + 'att.png" style="padding-top:2px" align=absmiddle/>' ;
		
				
				sPriorityIcon = '<img width="16px" height="16px" alt="" src="' + m_sRessIMGURL + 'trans.png" title="" />'
                switch (msg_pr) 
	            {
		            case "2": sPriorityIcon = '<img width="16px" height="16px" alt="High priority message" src="' + m_sRessIMGURL + 'ph2.png" style="vertical-align:-1.5px;"  title="High priority message" />'; break;
		            case "0": sPriorityIcon = '<img width="16px" height="16px" alt="Low priority message" src="' + m_sRessIMGURL + 'pl2.png" title="Low priority message" />'; break;
	            }
            
            	
                sHTMLTip = msg_fe + '\n' + msg_rd;
                
                if (mSkinUI == 'telmex')
                {
                	s24Time = msg_rd.split(' ');
					s24Time[0] = ''; 
					s24Time = s24Time.join(' ');
					if (m_sInboxMode == 'search' )
						s24Time = s24Time.replace(/ /gi, ':00 ');
					sHTMLTip = msg_fe + '\n' + fnConvert_to_24h(s24Time);
				}

				//<div style="opacity:0.3; display:inline-block ; background-color:' + msg_co + '; height:15px; width:10px; margin-top:8px"></div>

				sCurrentUserEmail = m_sUsername + '@' + m_sDomain;
				if ( msg_fe.toLowerCase() == sCurrentUserEmail.toLowerCase() )
					msg_fr = '<span style="color:#1772c6 !important;" >' + m_sMsgMe + '</span>';

				if ( msg_co == '#' )
					msg_co = 'transparent';
				
				//backend respone might be slow... so remeber the status
				arrMsgStatus = fnCheckMsgStatus(msg_id);
				sMsgCheckedBox = arrMsgStatus.split('|')[0];
				sMsgBGColor = arrMsgStatus.split('|')[1];
							
				if ( sMsgCheckedBox == 'checked' )
				{
					sMsgBGColor = sCheckboxCheckedColor;
					//console.log('sMsgCheckedBox:' + sMsgCheckedBox)
					
				}
				
                sHTMLData += sSearchFolderHTML + '<div title="' + sHTMLTip + '" sdate="' + sOriginalDateTime + '" pfetch="0" oncontextmenu="fnInboxContextMenu(this, event); return false;" id="MDD' + m_MsgIndex + '"  class="drag MData ' + sRowCSS + '" style="background-color:' + sMsgBGColor + '" msgid="' + msg_id + '" cindex="' + m_MsgIndex + '" ondblclick=" fnAutoInboxFullScreen()" onclick=" C(this,2)">\n' +
                '    <div class="MH0" onclick="fnCancelClick(event)"><div id="MDColr' + m_MsgIndex + '" style="display:inline-block; width:6px; height:30px; background-color:' + msg_co + '; margin-right:3px; margin-left:1px"></div><input type="checkbox" ' + sMsgCheckedBox + '  onclick="CBO(this, event)" id="C' + m_MsgIndex + '" style="margin-top:8px" value="ON"/>&nbsp;&nbsp;</div>\n' +
                '    <div class="MH1">' + sFlagImg + '</div>\n' +
                '    <div class="MH7">&nbsp;' + sAttachIcon + '</div>\n' +
                '    <div class="MH2">' + sIcon + '</div>\n' +
                '    <div class="MH3">' + msg_fr + '</div>\n' +
                '    <div class="MH4">&nbsp;&nbsp;' + sPriorityIcon + '<span id="inbmsgsub' + m_MsgIndex + '">' + msg_su + '</span></div>\n' +
                '    <div class="MH5" style="text-align:right">' + sDateHTML + '</div>\n' +
                '</div>';  

				//was this call from auto mail-sync?
				if (m_bMailSyncCall)
				{
					fnUpdateMailSyncMSG(msg_id, sHTMLData);
					sHTMLData = '';
				}
              
                i++;   
            }
                        		
			m_sPrevFolder= v_sFolder;
			
            //PlzWait(0);
            if (m_bAutoCheckCall || m_bMailSyncCall)
            {
            
	            if (m_bMailSyncCall)
	            {
	            	m_bMailSyncCall = false;
	            	sHTMLData = '';
	            }
             
            	//document.getElementById('Msg_Panel_Inbox_Data').innerHTML = sHTMLData + document.getElementById('Msg_Panel_Inbox_Data').innerHTML;     
            	$( "#Msg_Panel_Inbox_Data" ).prepend(sHTMLData);
            	m_bAutoCheckCall = false;       
            	
            } 
           else
           {	
            	if (m_bInboxAutoNextPage)
            	{
            		m_bInboxAutoNextPage = false;
            		$( "#Msg_Panel_Inbox_Data" ).append(sHTMLData);
            		m_bInboxAutoNextPageBusy = false;
            		//$('#Msg_Panel_Inbox_Data').scrollTop(m_bInboxAutoNextPageScroll);
            	}
                else
                {
                	m_bInboxAutoNextPageScroll = $('#Msg_Panel_Inbox_Data').scrollTop();
                	document.getElementById('Msg_Panel_Inbox_Data').innerHTML = sHTMLData; 
                	
                	//m_MSGID = '';
                	
                	//if (m_bInboxAutoNextPageScroll > 0)
            		//	$('#Msg_Panel_Inbox_Data').scrollTop(m_bInboxAutoNextPageScroll);
            		
            		m_bInboxAutoNextPageScroll = 0;
                }
                
                
                	
                sHTMLData = ""
            } 

 
           	disableSelection(document.getElementById('Msg_Panel_Inbox_Data'));
           
           	//highlight text search?
           	if (m_sInboxMode == 'search' )
           	{
           		var sSearchtxt = trim(document.getElementById('mSearchbox').value);
           		$('#Msg_Panel_Inbox_Data').highlight(sSearchtxt);
           		document.getElementById("btnEmptyFolder").style.display = 'none';
           	}

            //dtTS = dtTSFirstMsg; 
            
            //fnOnResize();
            fnREsizeInboxCol();
                        
            YAHOO.util.Dom.setStyle('mFolderData', 'height', ( (mimMainPanelHeight - 22)  + "px"));
            	
            m_TotalMsgs = m_MsgIndex + 1;
            m_TotalDelMoveMsgs = 0;
            
            //
            fnEnableDragnDrop();
            
            if ( m_bInboxSotrage == true )
            	m_bInboxSotrage = false;
            else
            	fn_AutoPreFetchMsg();  
            
            //for auto. 2nd page fetch
			$('#Msg_Panel_Inbox_Data').scroll(function() {
				   if( $('#Msg_Panel_Inbox_Data').scrollTop()  >= (($('#Msg_Panel_Inbox_Data').get(0).scrollHeight - $('#Msg_Panel_Inbox_Data').height()) - 300  ) ) {
				   
				   		if ( (m_iNumPages > 1)  && (m_bInboxAutoNextPageCount < m_iNumPages ) )
				   		{
				   			//if ( (CurentPage == 1) && (m_sInboxMode != 'search') )
				   			if ( m_sInboxMode != 'search' )
				       			fnInboxFetchNextPage();
				       	}

				   }
			});           
 
            
            /*
            $("#Msg_Panel_Inbox_Data").bind("contextmenu",function(e) {
		    	e.preventDefault();
		
		    	// create and show menu
		    	fnInboxContextMenu(e.pageX, e.pageY);
			});
			*/
			
			//show total messages in the view
			if (m_bInitQuickViewClick)
			{
				m_bInitQuickViewClick = false;
				
				if (iTotalQVCount > 0 )
				{
					//if (iTotalQVCount == 1)
					//	UpdateInboxAlert('1 message in this view');
					//else
					//	UpdateInboxAlert( iTotalQVCount + ' messages in this view');
						
					var sMessage = mcLang.Text('lang_mfilter_42',1);
					sMessage = sMessage.replace(/__XXXX__/gi, iTotalQVCount);
						
					UpdateInboxAlert(sMessage);	
				}			
			}       
			
			fnShowInboxActions();      
                
    }

	//::::::
	//::::::
	function fnAutoSyncMail()
	{
		if (m_sInboxMode != 'search')
		{
			//m_bMailSyncCall = true;
			NextPrevPage(CurentPage);
			fnMailSyncTimeout();
		}
	}
	
	function fnUpdateMailSyncMSG(msg_id, sHTMLData)
	{

		if ( $('div[msgid*="' + msg_id + '"]').length )
		{
			var objMsgRow = $('div[msgid*="' + msg_id + '"]');
			$(objMsgRow).replaceWith(sHTMLData);
		}
	}
    
    
    function fnCheckMsgStatus(s_GUID)
    {
    	sMsgStatus = " | ";
    	//do nothing if we switch to another folder  
    	if (m_sPrevFolder != v_sFolder)
    		return(sMsgStatus); 
				
		if ( $('div[msgid*="' + s_GUID + '"]').length )
		{
			var objMsgRow = $('div[msgid*="' + s_GUID + '"]');
			var iIndex = $(objMsgRow).attr('cindex'); 
			ObjBox = document.getElementById("C" + iIndex);
			//begin <uad_korney> 11/02/2015 fixed an issue when to move messages in the search mode    
			if (ObjBox && ObjBox.checked) 
			//if (ObjBox.checked)
                        //end <uad_korney> 11/02/2015
				sMsgStatus = "checked|";
			else
				sMsgStatus = " |";
			
			var sBColor = $(objMsgRow).css("background-color")
			if ( sBColor == 'transparent')
				sBColor = '';
								
				sMsgStatus += sBColor ;
			
			
			if ( m_CurrentMsgIndex == iIndex) 
			{
				m_CurrentMsgIndex = m_MsgIndex;
				m_MSGID = s_GUID;
			}
					
		}
        
        //console.log('sMsgStatus:' + sMsgStatus + ' m_CurrentMsgIndex:' + m_CurrentMsgIndex + ' iIndex:' + iIndex + ' m_MsgIndex:' + m_MsgIndex);
        
        return(sMsgStatus); 
    
    }
    
    function fnREsizeInboxCol()
    {
    
            var iTotalCells = 45 + 30 + 37 + 140 + 80 + 50 + 25 + 20 - 65;
        	//var elements = YAHOO.util.Dom.getElementsByClassName('MH4', 'div');  
           // for (c=0; c < elements.length; c++)
            //     YAHOO.util.Dom.setStyle(elements[c], 'width', (($('#Msg_Panel_Inbox_Data').width() - iTotalCells)  + "px"));
                 
                 $('.MH4').width( (($('#Msg_Panel_Inbox_Data').width() - iTotalCells)  + "px") )  ;
    
    }
    
    function fnInboxFetchNextPage()
    {
    	if (m_bInboxAutoNextPageBusy)
    		return;
		
		m_bInboxAutoNextPageCount += 1 
		
		
		//console.log('m_bInboxAutoNextPageCount:' + m_bInboxAutoNextPageCount)
		
		m_bInboxAutoNextPage = true;
		m_bInboxAutoNextPageBusy = true;
		var sURL = '../mail/ms_ajax.asp?folder=' + encodeURI(v_sFolder) + '&pg=' + m_bInboxAutoNextPageCount + '&msgno=' + (MsgPerPage) + '&sortby=' + sort_by + '&sort_order=' + sort_order + '&dtTS=' + dtTS + '&JSON=yes';
		
		//Quick View?	
		if (m_bInQuickViewMode)
		{
			sURL = sURL + '&filter=' + m_sFolderFetchFilter;//<uad_korney> 06/07/2016 added the Filter support
			sURL = sURL + '&filterFromEmails=' + encodeURIComponent(m_sFilterFromEmails); //<uad_korney> 06/07/2016 added the Filter support
		}
		else
		{
			sURL = sURL + '&filter=';
			sURL = sURL + '&filterFromEmails=';
		}			

		var obj_callback = new clsAjaxcallback();    
    	obj_callback.Ajaxcallback.success = sCheckFolderREcords;
   		makeRequest(sURL, obj_callback.Ajaxcallback); 
    }
    
    //::::::::::::::::::::::::drag-n-drop::::::::::::::::::::::::::::::::::: STARTS
      
    function fnUpdateTotalDragMsg()
    {
    	m_iTotallDragMsgs = 0;
    	var m_sMsgIDs = '';
	    for (var i=0; i < m_TotalMsgs; i++)
		{
			    ObjBox = document.getElementById(("C" + i));
			    
	            if (ObjBox == null)
	            {
		            continue;
		        }
			    
			     if (ObjBox.checked)
			     {
	                m_iTotallDragMsgs +=1;
	                
	                ObjDiv = document.getElementById(("MDD" + i));
                	m_sMsgIDs += "|" + ObjDiv.getAttribute("msgid");
                	
	                //fnAddDebug(m_sMsgIDs);
	                //fnAddDebug(m_iTotallDragMsgs);
	             }  
		  }
    
    }
    
    function fnMoveInboxMsgs(iDirIndex)
    {
    	var FolderName = document.getElementById(("dirtxt" + iDirIndex)).innerHTML;
    	var FolderID = $('#udir' + iDirIndex);

    	m_iMoveToDirIndex = iDirIndex;
    	
		AC(4);
    	
    	//alert($('#udir' + m_iMoveToDirIndex).attr('atrdid')); 
		
    
    }
    
    //:::::::
	//:::::::
    function fnEnableDragnDrop()
    {
    
		jQuery(function($){
			$('.drag')
				.drag("start",function(){
				
					//return $( this ).clone()
					//	.css("opacity", .75 )
					//	.appendTo( document.body );
					
					//ev.pageX +', '+ ev.pageY
					
					
					fnUpdateTotalDragMsg();
										
					if (m_iTotallDragMsgs > 1)
					{
						var sMessage = mcLang.Text('lang_mail_115',1);
						sMessage = sMessage.replace(/xxxx/gi, m_iTotallDragMsgs);
						$("#dragndrop_span").html(sMessage);
					
					}
					else
						$("#dragndrop_span").html(mcLang.Text("lang_mail_43",1));
						
					document.getElementById('Msg_Body_Hide').style.display = '';
					$('#DragDIVID').css( "display", "block" );
					
					
				})
				.drag(function( ev, dd ){
					$('#DragDIVID').css({
						top: ev.pageY,
						left: (ev.pageX + 20)
					});
					
					//alert($(dd.target).html());
					m_objDragDropMsgs = dd.target;
					
					iMsgIndex = $(m_objDragDropMsgs).attr('cindex');
					document.getElementById(("C" + iMsgIndex)).checked = false;
					document.getElementById(("C" + iMsgIndex)).click();
					
					
					//$(m_objDragDropMsgs).css( "background-color", "#e5f3fb" );
					
					fnUpdateTotalDragMsg();
					
				})
				.drag("end",function( ev, dd ){
					//$( this ).animate({
					//	top: dd.offsetY,
					//	left: dd.offsetX
					//}, 420 );
					//$( dd.proxy ).remove();
					
						$('#DragDIVID').css({
						top: dd.offsetY,
						left: dd.offsetX
					});
					
					$('#DragDIVID').css( "display", "none" );
					document.getElementById('Msg_Body_Hide').style.display = 'none';
		
					if (m_objDragDrop != null)
					{	
						//dir type
						if ($(m_objDragDrop).attr('ddType') == "dir")
						{
							var sDirName = $(m_objDragDrop).attr('atrDName');
							//UpdateInboxAlert('The message has been moved to "' + sDirName +  '"', '1359077142_info_16.png');
							
							//m_objDragDropMsgs.outerHTML = "";
			                //m_objDragDropMsgs.style.display = "none";	
			                
			                iDirIndex = $(m_objDragDrop).attr('atrindex');
			                fnMoveInboxMsgs(iDirIndex);
			            }
			            
			            //msg-prev type
						if ($(m_objDragDrop).attr('ddType') == "msgprev")
						{
							fn_OpenMsg(m_objDragDropMsgs.getAttribute("msgid"), m_objDragDropMsgs.getAttribute("cindex"));	
			            }

			            
					}
					else
					{
					
						//$( '#DragDIVID' ).animate({
						//top: dd.offsetY,
						//left: dd.offsetX
						//}, 420 );

					
					}
					
					if (m_iTotallDragMsgs == 1)
					{
						//$(m_objDragDropMsgs).css( "background-color", "" );
						
						iMsgIndex = $(m_objDragDropMsgs).attr('cindex');
						document.getElementById(("C" + iMsgIndex)).checked = true;
						document.getElementById(("C" + iMsgIndex)).click();
					}

					
					
					//No need msg gone already!
					//iMsgIndex = $(m_objDragDropMsgs).attr('cindex');
					//document.getElementById(("C" + iMsgIndex)).checked = false;
					
					m_iTotallDragMsgs = 0;


				},{ distance:3 });
		});

    
    
    }
    
    var m_iTotalDraged = 0;
    
    //:::::::
	//:::::::
    function fnEnableDragnDropBackPack()
    {
    
		jQuery(function($){
			$('.drag')
				.drag("start",function(){
			
					iTotalSelected = fnTotalSelecteFilesdBackPack();	
					
					
					
					m_iTotalDraged = iTotalSelected; 			
					if (iTotalSelected > 1)	
					{
						var sMessage = mcLang.Text('lang_mail_115',1);
						sMessage = sMessage.replace(/xxxx/gi, fnTotalSelecteFilesdBackPack());
						$("#dragndrop_span").html(sMessage);
					
					}
					else
						$("#dragndrop_span").html(mcLang.Text("lang_mail_44",1));
					$('#DragDIVID').css( "display", "block" );
					
					
				})
				
				.drag(function( ev, dd ){
					$('#DragDIVID').css({ 
						top: ev.pageY,
						left: (ev.pageX + 20)
					});
					
	
					m_objDragDropMsgs = dd.target;
					
					iMsgIndex = $(m_objDragDropMsgs).attr('cindex');
					
					//console.log(iMsgIndex)
					
					objCheckbox = document.getElementById(("pkc" + iMsgIndex));
					objCheckbox.checked = false;
					$(objCheckbox).click();

					
				})
				.drag("end",function( ev, dd ){
					
						$('#DragDIVID').css({
						top: dd.offsetY,
						left: dd.offsetX
					});
					
					$('#DragDIVID').css( "display", "none" );
					
					m_iTotalDraged = 0;

		
					if (m_objDragDrop != null)
					{	
						//dir type
						if ($(m_objDragDrop).attr('ddType') == "dir")
						{
							var sFolderId = $(m_objDragDrop).attr('atrdid');
							var sFolderIndex = $(m_objDragDrop).attr('atrindex');
							
			                msBackPackMoveMode = 'move';
			                fnMoveCopyBackpackFiles(sFolderId);
			            }
 
					}
					else
					{
						objCheckbox = document.getElementById('CallBackpack');
						objCheckbox.checked = true;
						$(objCheckbox).click();
					}
					

				},{ distance:3 });
		});

    
    
    }

    

	//:::::::
	//:::::::
	function fnDirDragLeave()
	{
	
		if (document.getElementById('icoDragnDropInbox').src !=  m_sRessIMGURL + "no_drop_16.png")
			document.getElementById('icoDragnDropInbox').src = m_sRessIMGURL +  "no_drop_16.png";
 
		
		if (m_iTotallDragMsgs > 1)
		{
			var sMessage = mcLang.Text('lang_mail_115',1);
			sMessage = sMessage.replace(/xxxx/gi, m_iTotallDragMsgs);
			$("#dragndrop_span").html(sMessage);
		}
		else
			$("#dragndrop_span").html(mcLang.Text("lang_mail_43",1));

		
		$(m_objDragDrop).css( "background-color", "" );	
		m_objDragDrop = null;
	}
	
	
	//:::::::
	//:::::::
	function fnDirDragEnter(Obj)
	{


		m_objDragDrop = Obj;	
	
		if ($(m_objDragDrop).attr('ddType') == "dir")
		{
			if (m_iTotallDragMsgs > 0)
				$(m_objDragDrop).css( "background-color", "#FCFAB3" );
			else
				$(m_objDragDrop).css( "background-color", "" );
			
			$("#dragndrop_span").html(mcLang.Text('lang_mail_103',1)); 
			
			if (document.getElementById('icoDragnDropInbox').src != m_sRessIMGURL + "drop_16.png" )
				document.getElementById('icoDragnDropInbox').src = m_sRessIMGURL + "drop_16.png";
			return;
		}
		
		if ($(m_objDragDrop).attr('ddType') == "msgprev")
		{
			$("#dragndrop_span").html(mcLang.Text("lang_mail_45",1));
			//$(m_objDragDrop).css( "background-color", "#e5f3fb" );
			if ( document.getElementById('icoDragnDropInbox').src != m_sRessIMGURL + "drop_view_16.png" )
				document.getElementById('icoDragnDropInbox').src = m_sRessIMGURL + "drop_view_16.png";
		}	
	}


	///// for backpack darg-n-drop
	//:::::::
	//:::::::
	function fnDirDragLeaveBackPack()
	{
		document.getElementById('icoDragnDropInbox').src = m_sRessIMGURL + "no_drop_16.png";
	
		iTotalSelected = fnTotalSelecteFilesdBackPack();				
		if (iTotalSelected > 1)
		{
			var sMessage = mcLang.Text('lang_mail_115',1);
			sMessage = sMessage.replace(/xxxx/gi, fnTotalSelecteFilesdBackPack());			
			$("#dragndrop_span").html(sMessage);
		}
		else
			$("#dragndrop_span").html(mcLang.Text("lang_mail_44",1));

		
		$(m_objDragDrop).css( "background-color", "" );	
		m_objDragDrop = null;
	}
	

	//:::::::
	//:::::::	
	function fnTotalSelecteFilesdBackPack()
	{
		var iTotalSelected = 0;
		
		for (var i=0; i < miTotalBackpackFile; i++)
		{
		    ObjBox = document.getElementById(("pkc" + i));
			    
		   if (ObjBox == null)
				continue;
				
	       if (ObjBox.checked)
				iTotalSelected +=1;	        
	                
		}
	
		return(iTotalSelected);
	}
	

    function fnUpdateTotalDragBackPackFiles()
    {
    	m_iTotallDragMsgs = 0;
    	var m_sMsgIDs = '';
	    for (var i=0; i < miTotalBackpackFile ; i++)
		{
			    ObjBox = document.getElementById(("pkc" + i));
			    
	            if (ObjBox == null)
	            {
		            continue;
		        }
			    
			     if (ObjBox.checked)
			     {
	                m_iTotallDragMsgs +=1;
                	m_sMsgIDs += "|" + ObjBox.getAttribute("fileid");
                	
	                //fnAddDebug(m_sMsgIDs);
	                //fnAddDebug(m_iTotallDragMsgs);
	             }  
		  }
    
    }
	
	//:::::::
	//:::::::
	function fnDirDragEnterBackPack(Obj)
	{

		m_objDragDrop = Obj;	
	
		if ($(m_objDragDrop).attr('ddType') == "dir")
		{
			//$(m_objDragDrop).css( "background-color", "#e5f3fb" );
			
			$("#dragndrop_span").html("Drop file(s)..."); 
			
			document.getElementById('icoDragnDropInbox').src = m_sRessIMGURL + "drop_16.png";
		}
		
		if ($(m_objDragDrop).attr('bbViewDir') == "yes")
			$(m_objDragDrop).css( "background-color", "" );	
	}


	//::::::::::::::::::::::::drag-n-drop::::::::::::::::::::::::::::::::::: ENDS
  

 	//:::::::
	//:::::::
    function ShowPagesList(f_iMsgCount)
    {

		MsgPerPage = fnReadCookie('M2W0', 'MessagesPerPage', true);

        var fTotal = 0;
        
        if (m_bSearchMode)
        	fTotal = f_iMsgCount / MsgPerPage;
		else
			fTotal = f_iMsgCount / MsgPerPage;
        
        if (parseInt(fTotal) <  fTotal)
            m_iNumPages = parseInt(fTotal) + 1
        else
            m_iNumPages = parseInt(fTotal)
        
        var sGoToPageTitle = mcLang.Text('lang_mail_48',1);
		sGoToPageTitle = sGoToPageTitle.replace(/xxxx/g, ' ');

        s_prev    = '&nbsp;<img src="' + m_sRessIMGURL + 'P1.gif" class="jqTootltip" title="'  + sGoToPageTitle + (CurentPage - 1) + '" style="cursor:pointer" width="4px" height="8px" onclick="NextPrevPage(' + (CurentPage - 1) +  ')"/>&nbsp;&nbsp;';
        s_prevall = '&nbsp;<img src="' + m_sRessIMGURL + 'PA.gif" class="jqTootltip" title="' + sGoToPageTitle + '1" width="8px" height="8px" style="cursor:pointer" onclick="NextPrevPage(1)"/>&nbsp;';
        
        s_next    = '&nbsp;&nbsp;<img src="' + m_sRessIMGURL + 'N1.gif" width="4px" height="8px" style="cursor:pointer" class="jqTootltip" title="' + sGoToPageTitle + (CurentPage + 1) + '" onclick="NextPrevPage(' + (CurentPage + 1) +  ')"/>&nbsp;';
        s_nextall = '&nbsp;<img src="' + m_sRessIMGURL + 'NA.gif" width="8px" height="8px" style="cursor:pointer" class="jqTootltip" title="' + sGoToPageTitle + m_iNumPages + '" onclick="NextPrevPage(' + m_iNumPages +  ')"/>&nbsp;';
        
        if (CurentPage == 1)
        {
            s_prevall = "";
            s_prev = "";
        }
        
        if (CurentPage == 2)
            s_prevall = "";
        
        if (m_iNumPages == CurentPage)
        {
            s_nextall = "";
            s_next = "";
        }
        
        if (m_iNumPages == (CurentPage + 1) )
            s_nextall = "";
           
        
        if (m_iNumPages > 1) 
            document.getElementById("PagesDIV").innerHTML = s_prevall + s_prev + CurentPage + ' of ' + m_iNumPages + s_next + s_nextall;
        else
            document.getElementById("PagesDIV").innerHTML = "";
            
        $(".jqTootltip").tipTip();
    }
  
    
	//:::::::
	//:::::::
    function NextPrevPage(iPage)
    {

    	if ( (m_iLastAction != 0) && (m_iLastAction != 8) && (m_iLastAction != 9) && (m_iLastAction != 4) )
    		bMoveScrollTop = true;
    	else
    	{
    		//due to page auto-fetch we don't want to refresh the page with delete/move/delete and block
    		if (  CurentPage == iPage ) 
    		{
    			AutoCheckMailCount();
    			return;
    		}
    	}
        CurentPage = iPage;
	    dtTS = "full";
	    
	    m_bInboxAutoNextPageCount = CurentPage; 
	    
	    if (m_sInboxMode == 'search' )
			fnmDoSearch();
		else  
	    	fnGetInbox(v_sFolder);
    }
    
    
	//:::::::
	//:::::::
    function HSort(f_sSortBy, bRefreshIconsOnly)
    {
    	if (bRefreshIconsOnly == false)
    	{
		    if ( sort_by.toLowerCase() == f_sSortBy.toLowerCase() )
		    {
			    if (sort_order.toLowerCase() == "desc")
				    sort_order = "ASC";
			    else
				    sort_order = "DESC";
		    }
		    else
			    sort_order = "DESC";
			    
			sort_by = f_sSortBy;
		}
		
		if ( (f_sSortBy == "ReadX" ) ||  (f_sSortBy == "FromX" ) )
		{
			switch (sort_order)
			{
			    case 'ASC':
			        sort_order = "DESC";
			        break;
			    case 'DESC':
			       sort_order = "ASC";
			        break;
			}	
		}
		
    	
	    var s_SortIcon = m_sRessIMGURL + "view-sort-ascending_16.png";
		
		var ObjImg = document.getElementById('icoSortReceived');  
		ObjImg.src = m_sRessIMGURL + "trans.png";
		
		ObjImg = document.getElementById('icoSortRead');  
		ObjImg.src = m_sRessIMGURL + "trans.png";

		ObjImg = document.getElementById('icoSortFrom');  
		ObjImg.src = m_sRessIMGURL + "trans.png";


		ObjImg = document.getElementById('icoSortFollowup');  
		ObjImg.src = m_sRessIMGURL + "trans.png";

		ObjImg = document.getElementById('icoSortSubject');  
		ObjImg.src = m_sRessIMGURL + "trans.png";
		
		if (sort_order == "DESC")
			s_SortIcon = m_sRessIMGURL + "gtk-sort-descending_16.png";
		
		
		switch (f_sSortBy.toLowerCase()) 
		{
			case 'read': 
				sSortByTxt = 'New';
				ObjImg = document.getElementById('icoSortRead');  
				ObjImg.src = s_SortIcon;
				break;
				
			case 'from':
				sSortByTxt = 'From';
				ObjImg = document.getElementById('icoSortFrom');  
				ObjImg.src = s_SortIcon;
				break;
				
			case 'subject':

				sSortByTxt = 'Subject';
				ObjImg = document.getElementById('icoSortSubject');  
				ObjImg.src = s_SortIcon;
				break;
				
			case 'received':
				sSortByTxt = 'Date';
				ObjImg = document.getElementById('icoSortReceived');  
				ObjImg.src = s_SortIcon;
				break;
				
			case 'followup':
				sSortByTxt = 'Follow up';
				ObjImg = document.getElementById('icoSortFollowup');  
				ObjImg.src = s_SortIcon;
				break;
				
			default:
				sSortByTxt  = 'New';
				sort_by 	= 'Read';
				
				ObjImg = document.getElementById('icoSortRead');  
				ObjImg.src = s_SortIcon;

		}

		//document.getElementById('SortBySpan').innerHTML = 'Sort by: ' + sSortByTxt + '&nbsp;&nbsp;<img src="../../page/imgs/banner-nav_arrow.png" style="border:0px;  vertical-align:middle; height: 3px"  align="middle">';

		if (bRefreshIconsOnly == false)
		{
		
			$.ajax({
		     type: "GET",
		     url: '../../app/mail_save_sort.asp',
		     data: "sortby=" + sort_by + "&sortorder=" + sort_order, 
		     success: function(data) {
					//sort_by		= data.split("|")[0];
					//sort_order	= data.split("|")[1];

				}
		   });

		
		    dtTS = "full";
		    CurentPage = 1;
		    fnGetInbox(v_sFolder);
		    
	    }
    }

	//:::::::
	//:::::::
    function fnRTEPriority(iPriority)
    {
	    var s_SortIcon = m_sRessIMGURL + "checkmark_icon&16_p.png";
		
		var ObjImg = document.getElementById('icoRTEPriorityHigh');  
		ObjImg.src = m_sRessIMGURL + "trans.png";
		
		ObjImg = document.getElementById('icoRTEPriorityNormal');  
		ObjImg.src = m_sRessIMGURL + "trans.png";

		//ObjImg = document.getElementById('icoRTEPriorityLow');  
		//ObjImg.src = m_sRessIMGURL + "trans.png";
		
		
		
		switch (iPriority) 
		{
			case '2':  
				document.getElementById('icoRTEPriorityHigh').src = s_SortIcon;  
				
		
					$( "#RTE_Header_Title" ).removeClass( "RTEHNormal" );
					$( "#RTE_Header_Title").addClass( "RTEHRed" );
					
					$( "#rte_Minimize" ).removeClass( "RTEHNormal" );
					$( "#rte_Minimize").addClass( "RTEHRed" );
			


				break;
				
			case '1':
				document.getElementById('icoRTEPriorityNormal').src = s_SortIcon;  
				
					$( "#RTE_Header_Title" ).removeClass( "RTEHRed" );
					$( "#RTE_Header_Title").addClass( "RTEHNormal" );
					
					$( "#rte_Minimize" ).removeClass( "RTEHRed" );
					$( "#rte_Minimize").addClass( "RTEHNormal" );

				break;
				
			case '0':
				document.getElementById('icoRTEPriorityLow').src = s_SortIcon;  
				

					$( "#RTE_Header_Title" ).removeClass( "RTEHRed" );
					$( "#RTE_Header_Title").addClass( "RTEHNormal" );
					
					$( "#rte_Minimize" ).removeClass( "RTEHNormal" );
					$( "#rte_Minimize").addClass( "RTEHNormal" );

				break;
		}
		
		mRTEPriority = iPriority;

    }

    
	//:::::::
	//:::::::
    function C(Obj, iValue)
    {
  
    
        if ( iValue == 2)
	    {
	
	    	if ( m_MSGID == Obj.getAttribute("msgid") )
	    	{
	    	
				//got action from inbox ContextMenu?
				//reply
				if (m_iContextMenuAC == 1)
					QComposer('r');
				//reply all
				if (m_iContextMenuAC == 2)
					QComposer('rall');
				//forward
				if (m_iContextMenuAC == 3)
					QComposer('f');
					
				m_iContextMenuAC = null;	    	
	    	
	    		return;
	    		
	    	}

	    	var f_iIndex = Obj.getAttribute("cindex");
            fn_OpenMsg(Obj.getAttribute("msgid"), f_iIndex);            
	    }
    }
    
	//:::::::
	//:::::::
    function CAll(obj)
    {	
	    for (var i=0; i < m_TotalMsgs; i++)
	    {
		    ObjBox = document.getElementById(("C" + i));
		    
            if (ObjBox == null)
	            continue;

            ObjBox.checked = obj.checked;
		        
            if (obj.checked)
                ObjBox.parentNode.parentNode.style.backgroundColor = sCheckboxCheckedColor;
            else
                ObjBox.parentNode.parentNode.style.backgroundColor = "";
              
                
	    }
	    
	    fnShowInboxActions();
	    
	   
	   m_bDontShowPOPOpt = true;
	   
	   
	mPOPOptLastVisablesMenuID = '';
  	document.getElementById('imgdivPrv').style.display = 'none';
	document.getElementById("mPOPOpt").style.visibility = "hidden";

	  
	    
	    
    }
  

	//:::::::
	//:::::::
    function fnMarkAll(sAction)
    {
    	CheckBoxOpt('None');
    	CheckBoxOpt('Unread');
    	 
    	var bCheckedMsg = false;
    		
	    for (var i=0; i < m_TotalMsgs; i++) 
	    {
		    ObjBox = document.getElementById(("C" + i));
		    
            if (ObjBox == null)
	            continue;

            if (ObjBox.checked)
            {
            	bCheckedMsg = true;
            	break;
            }
     
	    }
	    
	    
		if (bCheckedMsg) 
		{
			AC(2);
			CheckBoxOpt('None');
		}
	      
    }
  
    
    function fnContactsCheckBoxOpt(sType)
    {
    	//m_iFirstContactIndex
    	
    	var iStartCont = 0;
    	var iEndContact = 0;
    	
       document.getElementById('CallContact').checked = false;
	   fnContactsCAll();

    	
		switch (sType) 
	    {
	     
	        case 'all':  
	        
	        	document.getElementById('CallContact').checked = true;
	        	fnContactsCAll();
	        
	        	break;  
	        		                 
	        case 'people':  
	        
	            fnContactsCAllPeople();
	             break; 
	                 
	         case 'groups':  
	         
	         	
 				fnContactsCAllGroup();   			
	             break;
	                 
	         case 'none':  
	         
	        		 
	        	break;

	        default:
					
    	}

    
	    

	

    
    }

    
	//:::::::
	//:::::::
	function onFlags(obj)
	{
	
	}
	
		function outFlags(obj)
	{
	
	}
	
	
	function fnCancelClick(e)
	{
		YAHOO.util.Event.stopPropagation(e);

	}
	
	//:::::::
	//:::::::
    function CBO(ObjBox, e)
    {
 	    var ParentRow = ObjBox.parentNode.parentNode;
        var f_iIndex = ParentRow.getAttribute("cindex");
        
        if (ObjBox.checked)
            ObjBox.parentNode.parentNode.style.backgroundColor = sCheckboxCheckedColor;
        else
            ObjBox.parentNode.parentNode.style.backgroundColor = "";
            
        fnDocOnClick();
            
        YAHOO.util.Event.stopPropagation(e);
        fnShowInboxActions();
    }

	//:::::::
	//:::::::
	function fnShowInboxActions()
	{

		var sVisibility = "hidden";		
		for (var i=0; i < m_TotalMsgs; i++)
	    {
		    ObjBox = document.getElementById(("C" + i));
		    
            if (ObjBox == null)
	            continue;
	            
            if (ObjBox.checked)
            {
            	sVisibility = "visible";
            	break;
            }     
	    }

		document.getElementById("btnDelete").style.visibility = sVisibility;
		document.getElementById("btnBlock").style.visibility = sVisibility;
		document.getElementById("btnMarkRead").style.visibility = sVisibility;
		document.getElementById("btnMarkUnRead").style.visibility = sVisibility;
		document.getElementById("btnStar").style.visibility = sVisibility;
		document.getElementById("btnMove").style.visibility = sVisibility;
		document.getElementById("mOptInboxMore").style.visibility = sVisibility; 
		
		if ( sVisibility == "visible" )
			document.getElementById("mOptInboxMoreNM").style.display = 'none';
		else
			document.getElementById("mOptInboxMoreNM").style.display = '';
		
	}


/* 
YAHOO.namespace("example.container");

function init() {
	
	// Define various event handlers for Dialog
	var handleYes = function() {
		alert("You clicked yes!");
		this.hide();
	};
	var handleNo = function() {
		this.hide();
	};

	// Instantiate the Dialog
	YAHOO.example.container.simpledialog1 = new YAHOO.widget.SimpleDialog("simpledialog1", 
																			 { width: "300px",
																			   fixedcenter: true,
																			   visible: false,
																			   draggable: true,
																			   close: true,
																			   text: "Do you want to continue?",
																			   icon: YAHOO.widget.SimpleDialog.ICON_HELP,
																			   effect:{effect:YAHOO.widget.ContainerEffect.FADE,duration:0.25},
																			   constraintoviewport: true,
																			   buttons: [ { text:"Yes", handler:handleYes, isDefault:true },
																						  { text:"No",  handler:handleNo } ]
																			 } );
	YAHOO.example.container.simpledialog1.setHeader("Are you sure?");
	
	// Render the Dialog
	YAHOO.example.container.simpledialog1.render("container");

	YAHOO.util.Event.addListener("btnDelete", "click", YAHOO.example.container.simpledialog1.show, YAHOO.example.container.simpledialog1, true);
	YAHOO.util.Event.addListener("btnBlock", "click", YAHOO.example.container.simpledialog1.show, YAHOO.example.container.simpledialog1, true);
	YAHOO.util.Event.addListener("btnMarkRead", "click", YAHOO.example.container.simpledialog1.show, YAHOO.example.container.simpledialog1, true);
	YAHOO.util.Event.addListener("btnStar", "click", YAHOO.example.container.simpledialog1.show, YAHOO.example.container.simpledialog1, true);

	//YAHOO.util.Event.addListener("hide", "click", YAHOO.example.container.simpledialog1.hide, YAHOO.example.container.simpledialog1, true);


}

*/

function fnResetPanel()
{

	/*
	 YAHOO.util.Resize resize ( ev , h , w , t , l , force , silent )
	Resizes the element, wrapper or proxy based on the data from the handlers.
	
	Parameters:
	    ev <Event> The mouse event. 
	    h <Number> The new height setting. 
	    w <Number> The new width setting. 
	    t <Number> The new top setting. 
	    l <Number> The new left setting. 
	    force <Boolean> Resize the element (used for proxy resize). 
	    silent <Boolean> Don't fire the beforeResize Event. 
	*/

	if (Msg_Panel_Type == 'r')
	{
		mFolderDataWidth = $("#mFolderData").width() / 2;
		
		if (mFolderDataWidth < 345)
			mFolderDataWidth = 345;
			
		mFolderDataHeight = $("#mFolderData").height()	
	
		Msg_Panel_Inbox.resize(null, mFolderDataHeight, mFolderDataWidth, 0, 0, true); 
		fnSotrageSave_ReadingPane( Msg_Panel_Type + '|' + $("#Msg_Panel_Inbox").width() );
	}

	if (Msg_Panel_Type == 'b')
	{
		mFolderDataHeight = $("#mFolderData").height() / 2;
		
		if (mFolderDataHeight < 200)
			mFolderDataHeight = 200;
	
		Msg_Panel_Inbox.resize(null, mFolderDataHeight, null, 0, 0, true); 
		fnSotrageSave_ReadingPane( Msg_Panel_Type + '|' + $("#Msg_Panel_Inbox").height() );
	}
	
	
}

//:::::::
//:::::::
function g_fInitReadingPane()
{

	Msg_Panel_Inbox = new YAHOO.util.Resize('Msg_Panel_Inbox', {
	        proxy: true,
	        animate: false,
			handles: [Msg_Panel_Type],
	        animateDuration: .75,
			minHeight: 100,
			minWidth: 350,
	        animateEasing: YAHOO.util.Easing.backBoth
	    });
	    
	    
	    
	    
		
	Msg_Panel_Inbox.on('heightChange', function() {
				
	    }, Msg_Panel_Inbox, true);
	
	
	Msg_Panel_Inbox.on('resize', function() {
	
			fnDocOnClick();
			
			document.getElementById('Msg_Body_Hide').style.display = 'none';
			//document.getElementById('Msg_Inbox_Hide').style.display = 'none';	

			ReSizeMsgPanel();
			
			fnREsizeInboxCol();
			
			/////// store panel mode and size
			if (Msg_Panel_Type == 'r')
			{
				fnSotrageSave_ReadingPane( Msg_Panel_Type + '|' + $("#Msg_Panel_Inbox").width() );
			}

			if (Msg_Panel_Type == 'b')
			{
				fnSotrageSave_ReadingPane( Msg_Panel_Type + '|' + $("#Msg_Panel_Inbox").height() );
			}
			//////
			
			
	    }, Msg_Panel_Inbox, true);
	
	Msg_Panel_Inbox.on('startResize', function() {
	
	
				var mFolderDataHeight = $('#mFolderData').height();
				var mFolderDataWidth = $('#mFolderData').width();
				
				if (Msg_Panel_Type == 'b')
				{
					Msg_Panel_Inbox.set("maxHeight", (mFolderDataHeight - 100));
				}
				
				if (Msg_Panel_Type == "r")
				{
					Msg_Panel_Inbox.set("maxWidth", (mFolderDataWidth - 295));
				}
	
	            document.getElementById('Msg_Body_Hide').style.display = '';
				//document.getElementById('Msg_Inbox_Hide').style.display = '';
	
	        }, Msg_Panel_Inbox, true);


	InitMsgPanel();
}

function fnSwitchRPView(sView)
{
	Msg_Panel_Type = sView;
	
	Msg_Panel_Inbox_DataHTML = $('#Msg_Panel_Inbox_Data').html();
	
	var create_form = $('#Msg_Panel_Inbox_Data').clone();
	
	$('#mFolderData').html(m_smFolderDataHTML);
	
	$('#Msg_Panel_Inbox_Data').html(Msg_Panel_Inbox_DataHTML);
	
	g_fInitReadingPane(); 
	
	
	if (Msg_Panel_Type == 'r')
	{
		fnSotrageSave_ReadingPane( Msg_Panel_Type + '|' + $("#Msg_Panel_Inbox").width() );
	}

	if (Msg_Panel_Type == 'b')
	{
		fnSotrageSave_ReadingPane( Msg_Panel_Type + '|' + $("#Msg_Panel_Inbox").height() );
	}

	
	//NextPrevPage(1);
	//
	
	fnREsizeInboxCol();
	
	fnShowInboxActions();
	
	for (var i=0; i < m_TotalMsgs; i++)
	{
		    ObjBox = document.getElementById(("C" + i)); 
            if (ObjBox == null)
	            continue;
             ObjBox.parentNode.parentNode.style.backgroundColor = "";
    }
    
    fnCloseMsg();
    
    fnEnableDragnDrop();


}

//:::::::
//:::::::
function ReSizeMsgPanel()
{

	var m_ClientHeight = mimMainPanelHeight;
	var Msg_Panel_InboxHeight = 0;
	var Msg_Panel_MsgHeight = 0;
	
	var m_ClientWidth = mimMainPanelWidth;
	var Msg_Panel_InboxWidth = 0;
	var Msg_Panel_MsgWidth = 0;
	
	if (Msg_Panel_Type == 'b')
	{
	
		/*
		//mMainPanelBody
		
		Msg_Panel_InboxHeight = $('#Msg_Panel_Inbox').height();
		MainPanelBodyHeight = $('#mMainPanelBody').height();
		
		$('#Msg_Panel_Msg').height( (MainPanelBodyHeight - Msg_Panel_InboxHeight)  );
		
		//mMainPanelBody
	
		return;
*/
		
	
		Msg_Panel_InboxHeight = parseInt(YAHOO.util.Dom.getStyle('Msg_Panel_Inbox', 'height'));
		YAHOO.util.Dom.setStyle('Msg_Panel_Inbox_Data', 'height', (Msg_Panel_InboxHeight - 8) + 'px');
		Msg_Panel_MsgHeight = m_ClientHeight - Msg_Panel_InboxHeight;
		
		YAHOO.util.Dom.setStyle('Msg_Panel_Msg', 'height', ((Msg_Panel_MsgHeight - 10) + "px"));
		YAHOO.util.Dom.setStyle('Msg_Main', 'height', ((Msg_Panel_MsgHeight - 10) + "px"));
		
		//$("#Msg_Main").height()
		
				
		var Msg_Panel_InboxHeight = parseInt(document.getElementById('Msg_Panel_Msg').offsetHeight);
		YAHOO.util.Dom.setStyle('mMsgBodyScroll', 'height', (Msg_Panel_InboxHeight - 55 - 38) + 'px') ;

		
		//var iMsg_bodyHeight = (Msg_Panel_MsgHeight - 135) -  parseInt(YAHOO.util.Dom.getStyle('mltiTabs', 'height')) - 10;
		//YAHOO.util.Dom.setStyle('Msg_body', 'height', ((iMsg_bodyHeight) + "px"));
	}
	 
	if (Msg_Panel_Type == "r")
	{
		//::::"width
		Msg_Panel_InboxWidth = parseInt(YAHOO.util.Dom.getStyle('Msg_Panel_Inbox', 'width'));
		YAHOO.util.Dom.setStyle('Msg_Panel_Inbox_Data', 'width', (Msg_Panel_InboxWidth - 6) + 'px');
		Msg_Panel_MsgWidth = m_ClientWidth - Msg_Panel_InboxWidth;
		
		
		YAHOO.util.Dom.setStyle('Msg_Panel_Msg', 'width', ((Msg_Panel_MsgWidth - 2) + "px"));
		
		//::::"height
		YAHOO.util.Dom.setStyle('Msg_Panel_Msg', 'height', (m_ClientHeight) + 'px');
		YAHOO.util.Dom.setStyle('Msg_Panel_Inbox_Data', 'height', (m_ClientHeight - 1) + 'px');
		//YAHOO.util.Dom.setStyle('Msg_body', 'height', ((m_ClientHeight - 135) + "px"));
		
		YAHOO.util.Dom.setStyle('mMsgBodyScroll', 'height', (m_ClientHeight - 55 - 36) + 'px') ; 
		YAHOO.util.Dom.setStyle('Msg_Panel_Inbox_Data', 'height', (m_ClientHeight - 34) + 'px') ;

	}

}


//:::::::
//:::::::
function fnOnResize()
{

	var m_ClientHeight = mimMainPanelHeight;
    var m_ClientWidth = mimMainPanelWidth;
	
	if (Msg_Panel_Type == 'b')
	{
		Msg_Panel_Inbox.set("maxHeight", (m_ClientHeight - 100));
		
		YAHOO.util.Dom.setStyle('Msg_Panel_Inbox', 'width', (m_ClientWidth - 0) + 'px');  
		YAHOO.util.Dom.setStyle('Msg_Panel_Msg', 'width', (m_ClientWidth - 0) + 'px');  
	}
	
	if (Msg_Panel_Type == 'r')
	{
		Msg_Panel_Inbox.set("maxWidth", (m_ClientWidth - 503));
		
		YAHOO.util.Dom.setStyle('Msg_Panel_Inbox', 'height', (m_ClientHeight - 0) + 'px');  
		YAHOO.util.Dom.setStyle('Msg_Panel_Msg', 'height', (m_ClientHeight - 0) + 'px');  
	}
	
	//ReSizeMsgPanel();
}


//:::::::
//:::::::
function InitMsgPanel()
{

	var m_ClientHeight = mimMainPanelHeight;
	var m_ClientWidth = mimMainPanelWidth;
	
	if (Msg_Panel_Type == 'b')
	{
		Msg_Panel_Inbox.set("minHeight", 100);
		Msg_Panel_Inbox.set("maxHeight", (m_ClientHeight - 100));
		YAHOO.util.Dom.setStyle('Msg_Panel_Inbox', 'height', ( (m_ClientHeight / 2) - 55) + 'px') ;
	}
	
	if (Msg_Panel_Type == "r")
	{
		/*
		Msg_Panel_Inbox.set("minWidth", 345);
		Msg_Panel_Inbox.set("maxWidth", (m_ClientWidth - 503));
		
		YAHOO.util.Dom.setStyle('Msg_Panel_Inbox', 'float', 'left');
		YAHOO.util.Dom.setStyle('Msg_Panel_Msg', 'float', 'left');
		
		YAHOO.util.Dom.setStyle('Msg_Panel_Inbox', 'height', (m_ClientHeight) + 'px') ;
		YAHOO.util.Dom.setStyle('Msg_Panel_Inbox', 'width', (m_ClientWidth / 2) + 'px') ;
		
		*/
		
		Msg_Panel_Inbox.set("minWidth", 345);
		Msg_Panel_Inbox.set("maxWidth", (m_ClientWidth - 503));
		
		YAHOO.util.Dom.setStyle('Msg_Panel_Inbox', 'float', 'left');
		YAHOO.util.Dom.setStyle('Msg_Panel_Msg', 'float', 'left');
		
		YAHOO.util.Dom.setStyle('Msg_Panel_Inbox', 'height', (m_ClientHeight) + 'px') ;
		YAHOO.util.Dom.setStyle('Msg_Panel_Inbox', 'width', (m_ClientWidth / 2) + 'px') ;
		
		YAHOO.util.Dom.setStyle('mMsgBodyScroll', 'height', (m_ClientHeight - 55 - 36) + 'px') ; 
		YAHOO.util.Dom.setStyle('Msg_Panel_Inbox_Data', 'height', (m_ClientHeight - 34) + 'px') ;
	}
	
	ReSizeMsgPanel();
}









	
	//:::::::
	//:::::::
	function fnOpneNotyMsg(f_sMsgID)
	{
	
		fnApp(0, false);

	
	    for (var i=0; i < m_TotalMsgs; i++)
	    {
		    var ObjBox = document.getElementById(("C" + i));
		    
            if (ObjBox == null)
	            continue;
	            
                var ObjDiv = ObjBox.parentNode.parentNode; 
                if (f_sMsgID == ObjDiv.getAttribute("msgid"))
            	{
            		fn_OpenMsg(f_sMsgID, ObjDiv.getAttribute("cindex"))
	            	break;
	        	}
	    }
	}
	


    //:::::::
	//:::::::
	function fn_AutoPreFetchMsg()
	{
		//TEMP
		//return;
		
		var bFetch = true;
		if ( (m_iPreFetchMsgIndex < m_TotalMsgs) && (m_iPreFetchMsgIndex < m_iPreFetchMsgTotal ) )
		{
			ObjDiv = document.getElementById(("MDD" + m_iPreFetchMsgIndex));
			m_sMsgIDs = ObjDiv.getAttribute("msgid");
			var ipfetch = ObjDiv.getAttribute("pfetch");
			
			//already fetched the message?
			if (ipfetch == '1')
				bFetch = false;

			//new only?
			if (m_iPreFetchNewOnly)
			{
				if(YAHOO.util.Dom.hasClass(ObjDiv, 'MN'))
					bFetch = true;
				else
					bFetch = false;
			}
			
			//attach?
			if ( m_iPreFetchAttach == false )  
			{
				if ($(ObjDiv).html().indexOf("/img/att.png") > 0)
					bFetch = false;
			}

			if (bFetch)
			{
				$(ObjDiv).attr('pfetch', '1');
				fnFetchMsg(m_sMsgIDs);
	        }
	        else
	        {
	        	m_iPreFetchMsgIndex +=1;
	        	m_iPreFetchMsgTotal +=1;
        		fn_AutoPreFetchMsg();

	        }
        }
        else
		{
		    // fnFetchMsg with query parameter &preFetch=true, no need update Read status
        	//if ( m_iPreFetchMsgIDs.length > 36 )
        	//{
        	//	$.ajax({
			//     type: "GET",
			//     url: '../../mail/mail_action.asp',
			//     data: "Action=3&folder=/Inbox&MsgIDs=" + m_iPreFetchMsgIDs, 
			//     success: function(data) {
			//			//alert(data)
			//			m_iPreFetchSMsgID = m_iPreFetchMsgIDs;
			//			m_iPreFetchMsgIDs = '';
			//		}
			//   });
        	//}
		    m_iPreFetchSMsgID = m_iPreFetchMsgIDs;
		    m_iPreFetchMsgIDs = '';

		}     
	}
	
	function fnFetchMsg(sMSGID)
	{
		var suguid = ''; //fnUGUID()
		var obj_callback = new clsAjaxcallback();    
		obj_callback.Ajaxcallback.success = fAJAXPrefetchMsgResponse;
		var sURL = '../../app/message_api.asp?msgid=' + sMSGID + '&Headers=' + m_bShowHeaders + '&uguid=' + suguid + '&escapetxt=true&newGAtt=true&preFetch=true';
		m_iPreFetchMsgIDs += '|' + m_sMsgIDs;
		makeRequest(sURL, obj_callback.Ajaxcallback);	
	}
	
	//:::::::
	//:::::::
	function fAJAXPrefetchMsgResponse(o)
	{
		
	    if(o.responseText !== undefined)
        {
        	ObjBox = document.getElementById(("C" + m_iPreFetchMsgIndex));
        	
        	if ( (m_sUsername == 'kabed') || (m_sUsername == 'yabed') )
        		ObjBox.parentNode.parentNode.style.backgroundColor = "#FFFFD2";
        	
        	m_iPreFetchMsgIndex +=1;
        	fn_AutoPreFetchMsg();
        }
        
	}
	//::::::: pre fetch ENDS ::::::::::::::::::
	
	function fnRefreshBanners()
	{
		//refresh right-side banner
		if (mbRightPanelBanner)
		{
			document.getElementById("ifrmBanner").src = document.getElementById("ifrmBanner").src;
		}	
		//refresh top-banner
		if (mbTopBanner == 'true')
		{	
			document.getElementById("ifm_topbanner").src = document.getElementById("ifm_topbanner").src;
		}
	
	}

    //:::::::
	//:::::::
	function fn_OpenMsg(f_sMsgID, f_sIndex)
	{	

		//<KA> hide oppened messages with unread quick view
		if (m_bInQuickViewMode)
		{
	    	var iQVFilter = ',' + m_sFolderFetchFilter + ',';
	    	//unread view?
	    	if  ( (iQVFilter.indexOf(',1,') >= 0) )
	    	{
	    		if ( $('#C' + m_CurrentMsgIndex).length )
	    		{
	    			if ( $('#C' + m_CurrentMsgIndex).prop('checked') == false)
	    			{
			    		document.getElementById(("MDD" + m_CurrentMsgIndex)).style.display = "none";
						document.getElementById(("C" + m_CurrentMsgIndex)).outerHTML = "";
					}
	    		}		    	
	    	}
		}
		////////////

		//do we need to refresh banners?
		fnRefreshBanners();
		
		////////TEMP
		//sURL = "../../mail/ms_message.asp?MsgID=" + f_sMsgID + '&SM=F&FolderName=' + encodeURI(v_sFolder);
		//window.open(sURL,'mywin','left=0,top=0,width=800,height=600,toolbar=1,resizable=1,scrollbars=1');
		//return;
		///////TEMP
		
		m_MSGID = f_sMsgID;
		m_sMsgIndex= f_sIndex;
		YAHOO.util.Dom.setStyle(('MDD' + m_CurrentMsgIndex), 'background-color', '');
		m_CurrentMsgIndex = f_sIndex;
				
		YAHOO.util.Dom.setStyle(('MDD' + f_sIndex), 'font-weight', 'normal');
		YAHOO.util.Dom.setStyle(('MDD' + f_sIndex), 'background-color', '#e5f3fb');
		
		if (document.getElementById(("Ico" + f_sIndex)).src.indexOf('/n.gif') > 1)
			document.getElementById(("Ico" + f_sIndex)).src = "../../mail/new/t.gif";
		
		/*	
		ObjDiv = document.getElementById(("MDD" + f_sIndex));
		var s_uguid = fnUGUID()
		if ($(ObjDiv).html().indexOf("/IMG/att.png") > 0)
		{
			 s_uguid = guid();
		}
		*/
		
		if ( fnReadCookie('M2W2', 'tiShowHeader', true) == '1')
		{
			m_bShowHeaders = "true";
		}
		else
		{
			m_bShowHeaders = "false";
		}
		
		var suguid = '';
		ObjDiv = document.getElementById(("MDD" +  f_sIndex));
		//has attachment(s)?, if yes, always get fresh copy
		if ($(ObjDiv).html().indexOf("/img/att.png") > 0)
			suguid = fnUGUID();
		
		
		var obj_callback = new clsAjaxcallback();    
        obj_callback.Ajaxcallback.success = fAJAXMessageResponse;
		var sURL = '../../app/message_api.asp?msgid=' + f_sMsgID + '&Headers=' + m_bShowHeaders + '&uguid=' + suguid + '&escapetxt=true&newGAtt=true';
		if (m_iPreFetchSMsgID.indexOf(f_sMsgID) > -1)
		{
		    sURL += "&preFetch=true"
		}
		
		//For Drafts, force refresh from the backend:::::
		if (v_sFolder.toLowerCase() == '/drafts')
		{
			var uuid = guid();
			sURL += '&uuid=' + uuid;			
		}
        makeRequest(sURL, obj_callback.Ajaxcallback); 
        
  
        var Msg_Panel_InboxHeight = parseInt(document.getElementById('Msg_Panel_Msg').offsetHeight);
        
        if (v_sFolder.toLowerCase() != '/drafts')
			YAHOO.util.Dom.setStyle('mMsgBodyScroll', 'height', (Msg_Panel_InboxHeight - 55 - 38) + 'px') ;
		
		//prefetch unread	
		ObjRow = document.getElementById(("MDD" + f_sIndex));
		

		if (m_iPreFetchSMsgID.indexOf(f_sMsgID) > -1 )
		{
				m_iPreFetchSMsgID = m_iPreFetchSMsgID.replace(f_sMsgID, '');
		
        		$.ajax({
			     type: "GET",
			     url: '../../mail/mail_action.asp',
			     data: "Action=2&folder=/Inbox&MsgIDs=|" + f_sMsgID,  
			     success: function(data) {
						//alert(data)
					}
			   });
		}
		

	}
	
	
	//::::::
	//::::::
	function fnOpenMsgAttach(sDocURL)
	{
	
		$.ajax({
			     type: "GET",
			     url: '/app/pageapi.asp',
			     data: "api=gettguid",
			     success: function(data) {
			     
			     	//did we get the saved JSON filters?
			     	if ( data.length == 36 )
			     	{
			     		sDocURL += '&GUID=' + data;		
						location = sDocURL;  	
					}
			     }
		});
	
	}

	

    //:::::::
	//:::::::	
	function DeleteOpenMsg(e) 
	{
		if ( v_sFolder.toLowerCase() == '/deleted items' )	
		{
				//alert users
				inbox_confirmdelete = mcLang.Text('lang_cont_97',0);
				inbox_confirmdelete = inbox_confirmdelete.replace(/_xxbreaklinexx_/gi, "\n\n");
			    if (confirm(inbox_confirmdelete) != true)
				    return;
		}			
		
		var ObjDiv = document.getElementById(("MDD" + m_CurrentMsgIndex)); 
		//ObjDiv.outerHTML = "";
		ObjDiv.style.display = "none";
		             
		m_sMsgIDs = "|" + ObjDiv.getAttribute("msgid");
		var f_sPostData = 'Action=' + 0 + '&folder=' + encodeURI(v_sFolder) + '&MsgIDs=' + m_sMsgIDs;
		
		AJAXCallInbox('../../mail/mail_action.asp',true, f_sPostData);
		
		sInfoMsg = mail_moved_trash;
		sInfoMsg = '1' + ' ' + ibx_txt8 + ' ' + sInfoMsg.toLowerCase();
		
		if ( v_sFolder.toLowerCase() == '/deleted items' )
			UpdateInboxAlert(m_sOneMsgDeleted, 'infoi.gif');
		else
			UpdateInboxAlert(sInfoMsg, 'infoi.gif');	
		
		fnMultiTabClose(m_iiMultiTabsCurrentIndex, e);
	
				

		if (m_bMsgPreFullScreen)
    	{
    		fnMsgExitFullscreen();
    		return;
    	}
		
		
	}
	
    //:::::::
	//:::::::
	function PrintOpenMsg(e)
	{
	
		// Open a new window
		//var myWindow = window.open("", "myWindow", "width=200, height=100");
		window.open("../app/mail/print/?subject=" + messages.subject);
	}

    //:::::::
	//:::::::	
	function fnMsgNotSpam(e)
	{
		bsemails = messages.from_email;
		bsemails = bsemails.toLowerCase();
		pageurl  = encodeURI(location.href);
		
		if (!validemail(bsemails))
		{
		 	sMessage = m_sNotSpamMsg1; //mcLang.Text('lang_mail_100',1);
			sMessage = sMessage.replace(/xxxEmailxxx/gi, bsemails);
			UpdateInboxAlert(sMessage, '');
		 	return;
		}
		//too long?
		if (bsemails > 150) //WITHIN 150 CHAR
		{
			sMessage = m_sNotSpamMsg2; //mcLang.Text('lang_mail_100',1);
			sMessage = sMessage.replace(/xxxEmailxxx/gi, bsemails);
			UpdateInboxAlert(sMessage, '');
		 	return;

		}

		$.ajax({
		
		     type: "GET",
		     url: '../../options/whitelistsender.asp',
		     data: "bsemails=" + encodeURI(bsemails) + "&MsgPrev=true&pageurl=" + pageurl,
		     success: function(data) {
		     
					if (data == '0')
					{
						var ObjDiv = document.getElementById(("MDD" + m_CurrentMsgIndex)); 
						ObjDiv.style.display = "none";      
						m_sMsgIDs = "|" + ObjDiv.getAttribute("msgid");
						var f_sPostData = 'Action=4&folderTo=' + encodeURI('/inbox') + '&MsgIDs=' + m_sMsgIDs;
						AJAXCallInbox('../../mail/mail_action.asp',true, f_sPostData);
												
						sMessage = m_sNotSpamMsg3; //mcLang.Text('lang_mail_100',1);
						UpdateInboxAlert(sMessage, '');
						
						document.getElementById("Msg_notspam").style.display = "none";

					}
				}
		
		   });

		
	}


    //:::::::
	//:::::::	
	function PrintMsg()
	{
		var sURL = '../../mail/ms_message_pf.asp?MsgID=' + m_MSGID + '&languagechosen=en';	
		window.open(sURL,'mywin','left=0,top=0,width=800,height=600,toolbar=1,resizable=1,scrollbars=1');
	}

    //:::::::
	//:::::::	
	function TransMsg()
	{
		var sURL = '../../text_translator.asp?MsgID=' + m_MSGID;	
		window.open(sURL,'mywin','left=0,top=0,width=800,height=600,toolbar=1,resizable=1,scrollbars=1');
	}

    //:::::::
	//:::::::	
	function DownloadMsg()
	{
		var sURL = '../../mail/ms_download.asp?MsgID=' + m_MSGID + '&ImpendedMsg=0&FolderName=' + v_sFolder;	
		window.open(sURL,'mywin','left=0,top=0,width=800,height=600,toolbar=1,resizable=1,scrollbars=1');
	}


	//:::::::
	//:::::::	
	function fnOpenMultiTab(iTabIndex)
	{
		m_iiMultiTabsCurrentIndex = iTabIndex;
		
		///
		var s_GUID = m_aMultiTabsm_MSGID[m_iiMultiTabsCurrentIndex];
		m_MSGID = s_GUID;
        var iInboxIndex = $('div[msgid*="' + s_GUID + '"]').attr('cindex');
        
        YAHOO.util.Dom.setStyle(('MDD' + m_CurrentMsgIndex), 'background-color', '');
		m_CurrentMsgIndex = iInboxIndex;
				
		YAHOO.util.Dom.setStyle(('MDD' + m_CurrentMsgIndex), 'font-weight', 'normal');
		YAHOO.util.Dom.setStyle(('MDD' + m_CurrentMsgIndex), 'background-color', '#e5f3fb');
		//
		
		fAJAXMessageResponse(m_aMultiTabs[iTabIndex], true);
		fnHighlightMultiTab(iTabIndex);
	}
	
	function fnMultiTabsMenuAction(iAction)
	{
	
	    switch (iAction) 
        {
        	//reply
            case 0:  
            //reply all
            case 1:  
            //forward		    
            case 2:  
            			var iCurrentTap = m_iiMultiTabsCurrentIndex; //$(".MsgPrevTabSelected").attr('mtindex');
            			var iOpenTabe = m_iMultiTabOptIndex;
            			fnOpenMultiTab(iOpenTabe);
            			
						if (iAction == 0)
							QComposer('r');

						if (iAction == 1)
							QComposer('rall');
						
						if (iAction == 2)
							QComposer('f');

						m_iiMultiTabsCurrentIndex = iCurrentTap;
						fnOpenMultiTab(m_iiMultiTabsCurrentIndex);
				        break;
			
			
			//add star	        
            case 3:   
 
				        break;
	
			//remove star			        
            case 4:   

				        break;

			//close
            case 5:   
						fnMultiTabClose(m_iMultiTabOptIndex);
				        break;

			//close all
            case 6:   

						fnCloseMsg();
						break;
				        

        }
	
		fnDocOnClick();
	}

	//:::::::
	//:::::::
	
	function fnHighlightMultiTab(iTabIndex)
	{
	    //var $kids = $("#mMSGPrevtabs").children();
      	//$kids.removeClass("MsgPrevTabSelected");
      	
      	$(".MsgPrevTabSelected").removeClass("MsgPrevTabSelected");
		$("#MsgTab" + iTabIndex).addClass("MsgPrevTabSelected");
	}
	
	//:::::::
	//:::::::	
	function fnMultiTabClose(iTabIndex, e)
	{
		//document.getElementById("tiptip_holder").style.display = "none";
		m_aMultiTabs.splice(iTabIndex,1);
		m_aMultiTabsTxt.splice(iTabIndex,1);
		m_aMultiTabsm_MSGID.splice(iTabIndex,1);
		m_aMultiTabsTitle.splice(iTabIndex,1);
		
		fnDocOnClick();
		
		if(typeof e != 'undefined')
			YAHOO.util.Event.stopPropagation(e);

		
		
	
		if (m_aMultiTabs.length ==0)
		{
			///clear selected msg. from inbox
			m_MSGID = '';
        	YAHOO.util.Dom.setStyle(('MDD' + m_CurrentMsgIndex), 'background-color', '');
			m_CurrentMsgIndex = -1;
			//

			fnCloseMsg();
			return;
		}

		
		fnDrawMultiTabs();
		
		if (m_iiMultiTabsCurrentIndex == iTabIndex)
		{
			if ( (iTabIndex - 1) >= 0 )
			{
				fnOpenMultiTab(iTabIndex - 1);
			}
			else
			{
				fnOpenMultiTab(iTabIndex);
			}
		}
		else
		{
			/*
			var iOprnTabIndex = jQuery.inArray(m_MSGID, m_aMultiTabsm_MSGID);
			if (iOprnTabIndex > -1)
			{
				fnHighlightMultiTab(iOprnTabIndex);
			}
			*/
			
			//console.log('iTabIndex:' + iTabIndex + '\nm_iiMultiTabsCurrentIndex:' + m_iiMultiTabsCurrentIndex)
			
				if ( iTabIndex  > m_iiMultiTabsCurrentIndex )
				{
					fnOpenMultiTab(m_iiMultiTabsCurrentIndex);
				}
				else
				{
					fnOpenMultiTab( parseInt(m_iiMultiTabsCurrentIndex) - 1 );

				}

		
		}
		
			
	}
	
	function fnMultiTabOpt(iTabIndex, e)
	{
		m_iMultiTabOptIndex = iTabIndex;
		mbMenuClosed = true;
		fnShowPOPOpt('btnMultiTab' + iTabIndex, 'mMultiTabsOptMenu',-88,-192);
		YAHOO.util.Event.stopPropagation(e);
	}

	//:::::::
	//:::::::	
	function fnSenderOptMenu(e)
	{
		fnShowPOPOpt('divMsg_from', 'mSenderOptMenu',40,0);
		YAHOO.util.Event.stopPropagation(e);
	}

	//:::::::
	//:::::::	
	function fnSenderOpt(iAction)
	{
        switch (iAction) 
        {
            case 0:   
						sMsgSaveAddress();
				        break;
            case 1:   
						sMsgBlock();
				        break;	    
            case 2:   
						sMsgRule();
				        break; 
            case 3:   
						sMsgColorCode();
				        break;  
            case 4:   
						sMsgFindMail(0);
				        break;
            case 5:   
						sMsgFindMail(1);
				        break;
        }
	}


	//:::::::
	//:::::::
	function sMsgFindMail(iType)  
	{
	        //begin <uad_korney> 11/02/2015 fix to prevent a loading of the first “inbox” page when we show a search result
		fnmSearchClear(false);
		//fnmSearchClear(true);
		//end <uad_korney> 11/02/2015

		fnCheckSearchFolders();
	
		$('#mSearchbox').focus();
		document.getElementById('mSearchbox').value = messages.from_email;
		document.getElementById('mSearchXdiv').style.visibility = 'visible'; 

		//all folders = 1
		if (iType == 1)
		{
		}
		else
		{		
			iIndex = m_ObjCurretnSelectedDir.getAttribute('atrindex');
			$('#SearchDir' + iIndex).parent().click();
		}
		
		 
		CurentPage =1; 
		$('#RadioearchField0').click();
		
		fnmDoSearch();
			
	
	}
	
	function sMsgColorCode()
	{
		sHTMLColors = $('#mRTEColorPicker').html();
		sHTMLColors = sHTMLColors.replace(/fnRTEChangeColor/g, "fnColorCodeColor"); 
		 $('#divColorCodeColors').html(sHTMLColors);
		
		document.getElementById("mPOPOpt").style.visibility= "visible";
		
		setTimeout(function() {
			fnShowPOPOpt('divMsg_from', 'divColorCodeColors',40,0);  
		}, 100);	
	}
	
	function sMsgColorCodePickerClose()
	{
		$('#divColorCodeColors').html('');
		document.getElementById('divColorCodeColors').style.display = 'none';
	
	}

	//:::::::::::::
	function fnColorCodeColor(Obj)
	{
	
		var sColour = $(Obj).css("backgroundColor")
		sColour = sColour.replace("#", "");
		UpdateInboxAlert(mcLang.Text('lang_mail_96',1));
		
		
		$.ajax({ 
	 
	     type: "GET",
	     url: '../../app/colorcoding_api.asp',
	     data: "color_coding=" + encodeURI(sColour) + "&from_email=" + escape(messages.from_email),
	     success: function(data) {
	     
				UpdateInboxAlert(mcLang.Text('lang_mail_97',1), ''); 
				
				$('div[title*="' + messages.from_email + '"]').each(function() {
				
					var iIndex = $(this).attr('cindex'); 
					$('#MDColr' + iIndex).css('background-color', '#' + sColour);
    				
				});

				
					
			}
	
	   });

		
	}

 
 	function sMsgRule()
	{
		fnOpenMsgRule()
	
	}

 
	//:::::::
	//:::::::	
	function sMsgSaveAddress()
	{
		$.ajax({ 
	 
	     type: "GET",
	     url: '../../app/save_contact.asp',
	     data: "action=saveaddress&name=" + escape(messages.from) + "&email=" + escape(messages.from_email),
	     success: function(data) {
	     
				if (data == 'success')
					UpdateInboxAlert(mcLang.Text('lang_mail_98',1), '');
				else
					UpdateInboxAlert(mcLang.Text('lang_mail_99',1), '');
			}
	
	   });

	
	}


	//:::::::
	//:::::::	
	function sMsgBlock()
	{
		$.ajax({
	
	     type: "GET",
	     url: '../../options/blocksender.asp',
	     data: "Ajax=true&blocksenderstring=" + escape(messages.from_email),
	     success: function(data) {
	     
				if (data == 0)
				{
					var sMessage = mcLang.Text('lang_mail_100',1);
					sMessage = sMessage.replace(/_xxEmailxx_/gi, messages.from_email);
					UpdateInboxAlert(sMessage, '');
					
					//NextPrevPage(CurentPage);
				}
			}
	
	   });

	
	}



	//:::::::
	//:::::::
	function fnAddMultiTab(oMsgObj, sSubject)
	{
	
		//chnage m_iMultiTabsTotal according to screen resolutions
		var TabSpaceWidth = 246 + 6 + 31;
		var Msg_bodyWidth = parseInt(YAHOO.util.Dom.getStyle('Msg_body', 'width'));
		m_iMultiTabsTotal = parseInt(Msg_bodyWidth / TabSpaceWidth ) - 1;
		if (m_iMultiTabsTotal <=0 )
			m_iMultiTabsTotal = 1; 
		
		///
	
		var iTabIndex = jQuery.inArray(m_MSGID, m_aMultiTabsm_MSGID);
		if (iTabIndex > -1)
		{
			fnHighlightMultiTab(iTabIndex);
			return;
		}
	
		if (m_aMultiTabs.length > m_iMultiTabsTotal)
		{
			m_aMultiTabs.shift();
			m_aMultiTabsTxt.shift();
			m_aMultiTabsm_MSGID.shift();
			m_aMultiTabsTitle.shift();
		}
		
		m_aMultiTabs.push(oMsgObj);
		m_aMultiTabsTxt.push(sSubject);
		m_aMultiTabsm_MSGID.push(m_MSGID);
		var sTabTitle = messages.from_email + '\n' + messages.received;
		m_aMultiTabsTitle.push(sTabTitle);
		
		fnDrawMultiTabs();
		
		m_iiMultiTabsCurrentIndex = m_aMultiTabs.length - 1;
		fnHighlightMultiTab(m_aMultiTabs.length - 1);

	}
	

	//:::::::
	//:::::::
	function fnMultiTabsStar(iTabIndex, e)
	{
		m_bMultiTabStar = true;
		m_iMultiTabOptIndex = iTabIndex;
		mbMenuClosed = true;
		fnShowPOPOpt('mtf' + iTabIndex, 'mInboxMiniStars',-13,-77);
		YAHOO.util.Event.stopPropagation(e);

	}
	
	//:::::::
	//:::::::
	function fnDrawMultiTabs()
	{
		$('#mMSGPrevtabs').html('<a class="MsgPrevTabSpace" style="width:10px; margin-left:5px">&nbsp;</a>');
		for (var i=0; i < m_aMultiTabs.length; i++)
		{
			var sTabSubject = m_aMultiTabsTxt[i];
			
			if (sTabSubject.length > 21)
				sTabSubject = sTabSubject.substr(0, 21) + '...';
				
			var sCloseButtonCss = '';
			var sStarImg = m_sRessIMGURL + 'star_off.png';
			
			//TEMP GET Inbox star color
        	var s_GUID = m_aMultiTabsm_MSGID[i];
        	var iInboxStarIndex = $('div[msgid*="' + s_GUID + '"]').attr('cindex');
        	var ObjImg = document.getElementById('fl' + iInboxStarIndex );
        	sStarImg = ObjImg.src;
        	//////////////////////

			
			var sTabHTML = '<div style="float:left"><a id="MsgTab' + i + '" mtindex="'+ i + '" title="' + m_aMultiTabsTitle[i] + '" class="MsgPrevTab jqTootltip" onclick="fnOpenMultiTab('+ i + ')"><img class="jqTootltip" title="' + mcLang.Text('lang_mail_42',1) + '" style="padding-bottom: 4px" id="mtf' + i + '" onclick="fnMultiTabsStar(' + i + ', event)" src="' + sStarImg + '" width="16px" height="15px"/>&nbsp;&nbsp;' + sTabSubject + '&nbsp;&nbsp;<img class="jqTootltip" title="' + mcLang.Text('lang_mail_46',1) + '" onclick="fnMultiTabOpt(' + i + ', event)" height="4" style="padding:5px" id="btnMultiTab' + i + '" src="' + m_sRessIMGURL + 'down_icon.png" width="8"/>&nbsp;&nbsp;<img src="' + m_sRessIMGURL + 'close_16.png" width="16px" height="16px" onclick="fnMultiTabClose('+ i +', event)" class="jqTootltip" title="' + mcLang.Text('lang_mail_68',1) + '" style=" ' + sCloseButtonCss + ' " class="MsgPrevTabImg"/></a><a class="MsgPrevTabSpace">&nbsp;</a></div>';
		
			$('#mMSGPrevtabs').append(sTabHTML);
			
		}
		
		var MsgPrevTabSpaceRWidth = parseInt(YAHOO.util.Dom.getStyle('Msg_body', 'width'));
		
		//tab_width + tab_space + left_space
		MsgPrevTabSpaceRWidth -= (m_aMultiTabs.length * (246 + 6) ) + 10;
		
		$('#mMSGPrevtabs').append('<a class="MsgPrevTabSpace" id="MsgPrevTabSpaceR" style="width:' + MsgPrevTabSpaceRWidth + 'px;">&nbsp;</a>');
		
		$(".jqTootltip").tipTip();

				
		//jqTootltip
		//$(".jqTootltip").tipTip();	
		
	}
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	function fnCloseMsg()
	{
		m_aMultiTabs = [];
		m_aMultiTabsTxt = [];
		m_aMultiTabsm_MSGID = [];
		m_aMultiTabsTitle = [];
		$('#mMSGPrevtabs').html('');

		document.getElementById("Msg_notspam").style.display = "none";
	
		document.getElementById("Msg_Main").style.display = "none";
		document.getElementById("Msg_NoMessage").style.display = "";
		document.getElementById("Msg_Loading").style.display = "";
		document.getElementById("Msg_LoadingText").style.display = "none";
		
		document.getElementById("Msg_Subject").innerHTML = '';
		document.getElementById("Msg_From").innerHTML = '';
		document.getElementById("Msg_To").innerHTML = '';
		document.getElementById("Msg_Date").innerHTML ='';
		
		fnUpdateMailStorage();
		fnUpdateMailForwardNotice();

				
		objMsgBody = $('#Msg_body').contents().find('#Ifrm_Msg_body');
		$(objMsgBody).html('');
		
		fnCloseQuickRTE();

	}
	
	function fnUpdateMailStorage()
	{

		$.ajax({
		     type: "GET",
		     url: '../../app/storage_api.asp',
		     data: "", 
		     success: function(data) {
		     
		     		var sMailStorage = data;
		     		
					$("#Mail_Storage").html(sMailStorage);  
					
				}
		   });
	
	}
	
	function fnUpdateMailForwardNotice()
	{

		$.ajax({
		     type: "GET",
		     url: '../../app/forwardto_api.asp',
		     data: "", 
		     success: function(data) {
		     
		     		if (data.length > 4 )
		     		{
						$("#Mail_ForwardToNotice").html(data);  
						$("#Mail_ForwardToNotice").css( "display", "" );
					}
					else
					{
						$("#Mail_ForwardToNotice").html('');
						$("#Mail_ForwardToNotice").css( "display", "none" ); 
					}
				}
		   });
	
	}

	
	function fnClearMsg()
	{
		document.getElementById("Msg_notspam").style.display = "none";
	
		document.getElementById("Msg_Main").style.display = "none";
		document.getElementById("Msg_NoMessage").style.display = "";
		document.getElementById("Msg_Loading").style.display = "";
		document.getElementById("Msg_LoadingText").style.display = "none";
		
		document.getElementById("Msg_Subject").innerHTML = '';
		document.getElementById("Msg_From").innerHTML = '';
		document.getElementById("Msg_To").innerHTML = '';
		document.getElementById("Msg_Date").innerHTML ='';
		
		fnUpdateMailStorage();
		fnUpdateMailForwardNotice();

		objMsgBody = $('#Msg_body').contents().find('#Ifrm_Msg_body');
		$(objMsgBody).html('');

	}
	
    //:::::::
	//:::::::
    function fAJAXMessageResponse(o, bMultiTab)
    {
    	
    	fnClearMsg();
    	
    	if (v_sFolder.toLowerCase() != '/drafts')
		{
			ShowLoading(true);
			
			document.getElementById("Msg_Loading").style.display = "none";
		}

    	
        var sHTTPData = o.responseText; 
        		
		// Process the JSON
		messages = [];
		//try {
				messages = YAHOO.lang.JSON.parse(sHTTPData);
				messages.from 			= unescape(messages.from)
				messages.from_email 	= unescape(messages.from_email)
				messages.reply_to 		= unescape(messages.reply_to)
				messages.reply_to_email = unescape(messages.reply_to_email)
				messages.to 			= unescape(messages.to)
				messages.to_email 		= unescape(messages.to_email)
				messages.cc 			= unescape(messages.cc)
				messages.cc_email 		= unescape(messages.cc_email)
				messages.bcc 			= unescape(messages.bcc)
				messages.bcc_email 		= unescape(messages.bcc_email)
				messages.subject 		= unescape(messages.subject)
				messages.body 			= unescape(messages.body)
				messages.headers 		= unescape(messages.headers)
				//messages.body 			= unescape(messages.body);
 
				
				//For Drafts folder:::::
				if (v_sFolder.toLowerCase() == '/drafts')
				{
					QComposer('d');
					//return;			
				}
				
				if (v_sFolder.toLowerCase() == '/junk mail')
					document.getElementById("Msg_notspam").style.display = "";
				else
					document.getElementById("Msg_notspam").style.display = "none";		
	
				
				var sHTMLbody = messages.body ;

				/*
				alert(  'from:'    			+ messages.from 				+ '\n' + 
						'from_email:'		+ messages.from_email 		+ '\n' + 
						'reply_to:'    	  	+ messages.reply_to 			+ '\n' +
						'reply_to_email:'	+ messages.reply_to_email	+ '\n' +
						'to:'				+ messages.to				+ '\n' +
						'to_email:'			+ messages.to_email 			+ '\n' +
						'cc'				+ messages.cc 				+ '\n' +
						'cc_email:'			+ messages.cc_email 			+ '\n' +
						'received:'			+ messages.received 			+ '\n' +
						'priority:'			+ messages.priority 			+ '\n' +
						'subject:'			+ messages.subject 			+ '\n' +
						'body:' 			+ sHTMLbody.substring(0,300) 	+ '...' + '\n' );	
				*/
				
				//Get color coding from Inbox				
				//sColor = $('.MH0:contains("MDColr")').css( "background-color"); //$('#MDD' + m_sMsgIndex).find( ".MH3" ).css( "color");
				//sColor = rgb2hex(sColor);
				
				sColor = $('#MDColr' + m_sMsgIndex).css( "background-color");

				if (sColor == '#ffffff')
					sColor = '#454545';
				
				//$('#Msg_From').css('color', sColor);
				
				//::::::::::::::::::::: 
				objMsgRow = $('div[msgid*="' + m_MSGID + '"]');
				var f_iIndex = objMsgRow.attr('cindex');
				
				document.getElementById("Msg_Subject").innerHTML = fnEscapeHtml(messages.subject)
				
				
				msg_fr = messages.from;
				sCurrentUserEmail = m_sUsername + '@' + m_sDomain;
				if (messages.from_email.toLowerCase() == sCurrentUserEmail.toLowerCase() )
				{
					msg_fr = '<span style="color:#1772c6 !important;" >' + m_sMsgMe + '</span>';
					messages.from = m_sMsgMe;
				}
				
				document.getElementById("Msg_From").innerHTML = '<img src="' + m_sRessIMGURL + 'basic2-101.png" style="height:31px; width:32px;"/>&nbsp;&nbsp;&nbsp;' +  msg_fr;
				
				if (messages.to.indexOf(';') >= 0 )
					sMsgToHTML = messages.to.split(';')[0] + ' ... '
				else
					sMsgToHTML = messages.to;
				
				
				document.getElementById("Msg_To").innerHTML = '<img src="' + m_sRessIMGURL + 'trans.png" style="height:10px; width:32px;"/>&nbsp;&nbsp;&nbsp;&nbsp;' + sMsgToHTML + '&nbsp;&nbsp;&nbsp;';
				
				//get date from Inbox ...alread formated and has the  timezone!
				sDate = objMsgRow.attr('title');
				sDate = sDate.split('\n')[1];
				
				
	            if(YAHOO.util.Dom.hasClass(objMsgRow, 'MN'))
	            {
	                YAHOO.util.Dom.removeClass(objMsgRow, 'MN'); 
	                f_sPostData = 'Action=2&folder=' + encodeURI(v_sFolder) + '&MsgIDs=' + m_MSGID;
	                AJAXCallInbox('../../mail/mail_action.asp',true, f_sPostData);
	            }

				 
				document.getElementById("Msg_Date").innerHTML = '<img src="' + m_sRessIMGURL + 'trans.png" style="height:10px; width:32px;"/>&nbsp;&nbsp;&nbsp;&nbsp;' + sDate;
				
				//Fom Details
				document.getElementById("Msg_From_more").innerHTML = messages.from + '&nbsp;&nbsp;<a class="linkLine" style="font-size:10px" href="JavaScript:fnShowHideMsgHeaders()"><img id="HeadersExpand" width="9" height="10" style="vertical-align: middle" src="' + m_sRessIMGURL + 'arrow_less.png" title="' + mcLang.Text('lang_mail_112',1) + '"/></a>';
				if (messages.from_email.length > 2 )
					document.getElementById("Msg_From_more").innerHTML += '<br/>' + messages.from_email + '';
				
				//To Details
				aMsgto = messages.to.split(';');
				aMsgto_email = messages.to_email.split(';');
				for(var ci=0; ci < aMsgto.length; ci++)
		    	{
		    		if( !isValidEmailAddress( aMsgto_email[ci] ) )
		    			continue;
					aMsgto[ci] = '<a class="linkLine" href="JavaScript:top.fnSendTo(\'' + aMsgto_email[ci] + '\')" title="' + m_sSendMsgTo + aMsgto_email[ci] + '">' + aMsgto[ci] + '</a>';	
		    	}
				document.getElementById("Msg_To_more").innerHTML = aMsgto.join('; ') + ''; 
				
				document.getElementById("Msg_Cc_more").innerHTML = '';

				//Cc Details	
				if ( messages.cc.length > 2 )
				{
					document.getElementById('Msg_Ccc_more_tr').style.display = "";
					
					/*
					sCC = messages.cc;
					sCC = sCC.replace(/["']/g, ""); 
					sCC = trim(sCC);
					sCC = sCC.replace(/,/g, ";"); 
					aCcEmails = sCC.split(";");
					if (sCC.length > 1)
					{
						for (i = 0; i < aCcEmails.length; i++)
						{
							aCcEmails[i] = aCcEmails[i].split(' <')[0];
						}
					}
					sCC = aCcEmails.join(';');
					document.getElementById("Msg_Cc_more").innerHTML = sCC; 
					*/
					
					
					//Cc Details
					
					if (messages.cc.indexOf("<") >= 0)
						aMsgcc = messages.cc_email.split(';');
					else
						aMsgcc = messages.cc.split(';');
					
					aMsgcc_email = messages.cc_email.split(';');
					for(ci=0; ci < aMsgcc.length; ci++)
			    	{
			    		if( !isValidEmailAddress( aMsgcc_email[ci] ) )
			    			continue;
						aMsgcc[ci] = '<a class="linkLine" href="JavaScript:top.fnSendTo(\'' + aMsgcc_email[ci] + '\')" title="' + m_sSendMsgTo + aMsgcc_email[ci] + '">' + aMsgcc[ci] + '</a>';	
			    	}
					document.getElementById("Msg_Cc_more").innerHTML = aMsgcc.join('; ') + ''; 
					
					//document.getElementById("Msg_Cc_more").innerHTML = messages.cc_email.split(';').join('; ') + ''; 
				}
				else
					document.getElementById('Msg_Ccc_more_tr').style.display = "none";
					

				//Bcc Details
				if ( messages.bcc_email.length > 2 )
				{
					document.getElementById('Msg_Bccc_more_tr').style.display = "";				
					document.getElementById("Msg_Bcc_more").innerHTML = messages.bcc_email.split(';').join('; ') + ''; 
				}
				else
					document.getElementById('Msg_Bccc_more_tr').style.display = "none";


				
				document.getElementById("Msg_headers_more").innerHTML = messages.headers + '';
				
				//full headers Details
				if ( m_bShowHeaders == "true" )
				{
					document.getElementById('Msg_headers_more').style.display = "";
					$('#HeadersExpand').attr('src', m_sRessIMGURL + 'arrow_less.png');
					document.getElementById('Msg_headers_more_tr').style.display = "";
				} 
				else
				{
					document.getElementById('Msg_headers_more').style.display = "none";
					$('#HeadersExpand').attr('src', m_sRessIMGURL + 'arrow_more.png');
					document.getElementById('Msg_headers_more_tr').style.display = "none";
				}
				
				document.getElementById('divMsg_from').style.display = "inline-block";
				document.getElementById("Msg_DAte_more").innerHTML = messages.received + ''; 
				document.getElementById('MsgDetails').style.display = "none";
							
				objMsgBody = $('#Msg_body').contents().find('#Ifrm_Msg_body');
				$(objMsgBody).html(sHTMLbody);
				
				/*
				var arrLinks = [];
				iLinkIndex = 0;
				
				//open all URLs in new windows
				$('#Msg_body').contents().find('a').each(function() {
   					
   					try {
   					
   						sHref = $(this).attr('href');
   						sHref = sHref.replace(/javascript/gi, '');
   						$(this).attr('href', sHref);
   						
	   					$(this).attr('title', mcLang.Text('lang_mail_110',0) + ' ' + $(this).attr('href')) ;	
	   					$(this).attr('target','_blank');
	   					arrLinks.push($(this)[0].outerHTML);
	   					$(this)[0].outerHTML = 'xXxURLxX' + iLinkIndex;
	   					iLinkIndex +=1;
   					}
   					catch (x) { }

				});	
				
				//$(objMsgBody).html( Autolinker.link( $(objMsgBody).html() , { newWindow: true } ) ); 
				sHTMLBody = $(objMsgBody).html();
				for ( iLinkIndex =0; iLinkIndex < arrLinks.length; iLinkIndex +=1 )
				{
					sHTMLBody = sHTMLBody.replace( ('xXxURLxX' + iLinkIndex), arrLinks[iLinkIndex] );
				}
				if(typeof messages.calendar_event != 'undefined')
					if ( messages.calendar_event.length > 10 )
					{
						sHTMLBody = '<div style="background-color:#FFFEDB; color:#494949 ;padding:5px; margin-bottom:10px; line-height:23px">' + messages.calendar_event + '</div>' + sHTMLBody
					}
					
				$(objMsgBody).html(sHTMLBody);
				*/
								
				try {
   					
   						$(objMsgBody).linkify();   					
   					}
   				catch (x) {  }
   				
   				
   				//reset media link data
   				m_aMediaLinks = [];
				m_MediaLinkCount = 0;
				
				
				
				//open all URLs in new windows
				$(objMsgBody).find('a').each(function() {
   					
   					try {
   					
   						sHref = $(this).attr('href');	
   						
   						//check if there are any supported media links
   						var sMediaLinkURL = '';
   						sMediaLinkURL = fnCheckMediaLinks(sHref);
   						
   						if (sMediaLinkURL.length > 0)
   						{
   							$(this).attr('title', mcLang.Text('lang_rte_72',1)) ;
   							$(this).attr('target','_self');
   							
   							$(this).click(function(event) {
   							
   								top.fnOpenVideoView(sMediaLinkURL, '');
   								YAHOO.util.Event.stopEvent(event);
   								event.stopPropagation();
   								event.preventDefault();
   							
							});
   						
   							//sHref = 'JavaScript:top.fnOpenVideoView(\'' + sMediaLinkURL + '\', \'' + '' + '\')'
   							//$(this).attr('href', sHref);
   							
   							
   						}
   						else
   						{
	   						sHref = sHref.replace(/javascript/gi, '');  
	   						$(this).attr('href', sHref);
		   					$(this).attr('title', mcLang.Text('lang_mail_110',0) + ' ' + $(this).attr('href')) ;	
		   					$(this).attr('target','_blank');
		   					
		   					
   						}
   					}
   					catch (x) { }

				});	
				
				
				//::::::::::::
				try {
				
					$('#MsgDetails').html( Autolinker.link( $('#MsgDetails').html() , { newWindow: false } ) );
	
					//open all emails in composer
					$('#MsgDetails').contents().find('a').each(function() {
	   					
	   					if ( $(this).attr('href') !== undefined )
	   					{
		   					sHref = $(this).attr('href');
		   					if(sHref.indexOf('mailto:') != -1) 
		   					{
		   						$(this).attr('target','_top');
		   						$(this).attr('title', $(this).attr('href'));
		   						
		   						sEmail = sHref.replace(/mailto:/gi, "");
		   						sEmail = sEmail.replace(/</gi, "");
		   						sEmail = sEmail.replace(/>/gi, "");
		   						sEmail = sEmail.replace(/,/gi, "");
		   						sEmail = sEmail.replace(/;/gi, "");
		   						$(this).attr('href', "JavaScript:top.fnSendTo('" + sEmail + "')");
		   						$(this).attr('title', m_sSendMsgTo + sEmail);
		   						$(this).addClass( "linkLine" );
		   					}
	   					}
	
					});				
					
					//open all emails in composer
					$('#Msg_body').contents().find('a').each(function() {
	   					
	   					if ( $(this).attr('href') !== undefined )
	   					{
	   						sHref = $(this).attr('href');
	   						sHref = trim(sHref);
	   						$(this).attr('href', sHref);
		   		
		   					if(sHref.indexOf('mailto:') != -1) 
		   					{
		   						$(this).attr('target','_top');
		   						$(this).attr('title', $(this).attr('href'));
		   						
		   						sEmail = sHref.replace(/mailto:/gi, "");
		   						sEmail = sEmail.replace(/</gi, "");
		   						sEmail = sEmail.replace(/>/gi, "");
		   						sEmail = sEmail.replace(/,/gi, "");
		   						sEmail = sEmail.replace(/;/gi, "");
		   						$(this).attr('href', "JavaScript:top.fnSendTo('" + sEmail + "')");
		   						$(this).attr('title', m_sSendMsgTo + sEmail);
		   					}
	   					}
	
					});	
	
					//highlight text search?
		           	if (m_sInboxMode == 'search' )
		           	{
		           		var sSearchtxt = trim(document.getElementById('mSearchbox').value);
		           		$('#mMsgBodyScroll').highlight(sSearchtxt);
		           		$('#Msg_body').contents().find('#Ifrm_Msg_body').highlight(sSearchtxt);
		           	}
	           	
	           	}
	           	//::::::::::::
				catch (x) { }
				
				m_iTotalMsgAttach = 0;
				m_iTotalMsgAttachSize = 0;

				var sAttachHTML = '';
				if (messages.AttachFiles.length > 5)
					sAttachHTML = Thumbnail(messages.AttachFiles, false, '') + ''; 
	
				$('#Msg_body').contents().find('#DIVAttachPrev').html(sAttachHTML);
				
				//for now ust enable it for mail2world.net
				//if (m_sDomaincode == 'mail2world')
				//{
				//	fnInitDocsView(m_iTotalMsgAttach);
				//}
		
				//for now just enable it for English users
				if ( slang == 'en' )
				{
					if (m_sDomaincode == 'mail2world')
						fnInitDocsView(m_iTotalMsgAttach);
				}

				//remove any 100% for tables...
				$('#Msg_body').contents().find('table').height('');
				$('#Msg_body').contents().find('table').attr('style', 'height: auto !important');
								
				$('#mMsgBodyScroll').scrollTop(0);
				
				ShowLoading(false);
				ResizeToContent();	
	
				//AutoCheckMailCount();
				
				if(typeof bMultiTab == 'undefined')
					fnAddMultiTab(o, messages.subject);
					
				// default show To, CC details
				fnShowMsgDetails();	
				
				//got action from inbox ContextMenu?
				//reply
				if (m_iContextMenuAC == 1)
					QComposer('r');
				//reply all
				if (m_iContextMenuAC == 2)
					QComposer('rall');
				//forward
				if (m_iContextMenuAC == 3)
					QComposer('f');
					
				m_iContextMenuAC = null;
			
			 //$( "#Msg_Panel_Msg" ).draggable({ revert: true, zIndex: 100 }); 
				
				
		//}
		//catch (x) { 
		//		alert("JSON Parse failed!");
				//return;
				
				if (messages.HasReadRequest && (messages.ReadRequestURL.length > 10)) 
				{	mGGUID = guid();
					mYUIDialog_called = false;
					m_sReadRequestURL = messages.ReadRequestURL;
					if ( fnYUIPrompt(mcLang.Text('lang_mail_79',1), mcLang.Text('lang_mail_80',1), mcLang.Text('lang_mail_81',1), 'message icon-bubble', fnReadRequest, arguments) ) 
						return;  
				}
		//}
		
		//don't show Quick Reply in Drafts or Sent 
		if ( (v_sFolder.toLowerCase() != '/sent items') && (v_sFolder.toLowerCase() != '/drafts') )
			fnShowQuickRTE(true);
		else
			fnCloseQuickRTE();

		//::::	
		setTimeout(function(){ YAHOO.util.Dom.setStyle('Msg_body', 'height', ( $('#Msg_body').contents().find('#PageBody').height() + "px")); }, 500);
		setTimeout(function(){ YAHOO.util.Dom.setStyle('Msg_body', 'height', ( $('#Msg_body').contents().find('#PageBody').height() + "px")); }, 1000);
		setTimeout(function(){ YAHOO.util.Dom.setStyle('Msg_body', 'height', ( $('#Msg_body').contents().find('#PageBody').height() + "px")); }, 3000);
		//::::

    }
    
    var mCardTimeID = null;
    var mCardLastObj = null;
    
    function fnKeepMSGCard(bShow)
    {
    	return;
    	if (bShow)
    	{
    		window.clearTimeout( mCardTimeID);
    		$("#mCardPOPO").css({ "visibility": "visible" });	
    		
    		$('#mCardPOPO').mouseleave(function() {
				fnShowMSGCard($(mCardLastObj), false);
			}); 

    	}
    
    }
    
    
    //::::::
    function fnShowMSGCard(oObj, bShow)
    {
    	if (bShow == false)
    	{
    		window.clearTimeout( mCardTimeID);
    		
    		$('#ifm_MSGCard').attr('src','about:blank' );
			$("#mCardPOPO").css({ "visibility": "hidden"});			
     		return;
    	}
    	
    	if (mCardLastObj != oObj)
    	{
    		$('#ifm_MSGCard').attr('src','about:blank' );
    		$("#mCardPOPO").css({ "visibility": "hidden"});
    	}
    	
    	mCardLastObj = oObj;
    	window.clearTimeout( mCardTimeID);
    		
		mCardTimeID = setTimeout(function() {
			var sCardURL = '/app/msg_card.asp?cardurl=' + encodeURIComponent( $(mCardLastObj).attr('href') ) ;
			$('#ifm_MSGCard').attr('src',sCardURL );
			//$("#mCardPOPO").css({ "visibility": "visible" });			
		}, 0);
	    
	}
	    
	function fnResizeMSGCard()
	{
    	var oMsgBodyPos = $('#Msg_body');
    	var MsgBodyOffset = oMsgBodyPos.offset();
    	var p = $(mCardLastObj);
    	var offset = p.offset();
		
		iCardTopPos  = (offset.top + MsgBodyOffset.top) - ( $('#mCardPOPO').outerHeight() + 5 );
		iCardLeftPos = (offset.left + MsgBodyOffset.left);
		
		$("#mCardPOPO").css({ "top": (iCardTopPos + "px"), "left": (iCardLeftPos + "px") });	
	}

    //::::::
    function fnYouTubeURLParser(sURL)
    {
    	var sMediaVideoID = '';
		var regExp = /^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/;
		var match = sURL.match(regExp);
		if (match && match[2].length == 11) {
		
			sMediaVideoID = match[2];
			var sURL='https://www.youtube.com/oembed?url=http://www.youtube.com/watch?v=' + sMediaVideoID + '&format=json';
			
			m_aMediaLinks[m_MediaLinkCount] = new CATTACH(0, '', '', '', '', false, '', '', '');
			m_aMediaLinks[m_MediaLinkCount].index = m_MediaLinkCount;
        	m_aMediaLinks[m_MediaLinkCount].FileID = sMediaVideoID;
        	m_aMediaLinks[m_MediaLinkCount].URL = 'https://www.youtube.com/embed/' +  sMediaVideoID + '?rel=0&autoplay=1';

			$.ajax({
			     type: "GET",
			     url: '/app/HttpRequest.asp',
			     data: "HTTPURL=" + escape(sURL),
			     iMediaLinkCount: m_aMediaLinks[m_MediaLinkCount].index, 
			     success: function(data) {
							
					var  objJSON = jQuery.parseJSON(data);
					var sMediaID = m_aMediaLinks[this.iMediaLinkCount].FileID;
					m_aMediaLinks[this.iMediaLinkCount].icon =  objJSON.thumbnail_url;
					
					sTitle = htmlEncode(objJSON.title)
					sTitle = sTitle.replace('(60")', '60');
					m_aMediaLinks[this.iMediaLinkCount].name = sTitle;
					
					fnBuildMediaHTML(this.iMediaLinkCount);
		   		}
		   	});

		}
				
		return(sMediaVideoID)
	}
	

    //::::::
    function fnDailymotionURLParser(sURL)
    {
		var sMediaVideoID = '';
		var m = sURL.match(/^.+dailymotion.com\/(video|hub)\/([^_]+)[^#]*(#video=([^_&]+))?/);
		if (m !== null) {
			if(m[4] !== undefined) {
		            sMediaVideoID = m[4];
			}
		    sMediaVideoID = m[2];
		    
		    var sURL='https://api.dailymotion.com/video/' + sMediaVideoID + '?fields=id,title,thumbnail_medium_url';
		    
		    m_aMediaLinks[m_MediaLinkCount] = new CATTACH(0, '', '', '', '', false, '', '', '');
			m_aMediaLinks[m_MediaLinkCount].index = m_MediaLinkCount;
        	m_aMediaLinks[m_MediaLinkCount].FileID = sMediaVideoID;
        	m_aMediaLinks[m_MediaLinkCount].URL = 'https://www.dailymotion.com/embed/video/' + sMediaVideoID + '?autoplay=1';
        	
        	$.ajax({
			     type: "GET",
			     url: '/app/HttpRequest.asp',
			     data: "HTTPURL=" + escape(sURL),
			     iMediaLinkCount: m_aMediaLinks[m_MediaLinkCount].index, 
			     success: function(data) {
			     	
					var  objJSON = jQuery.parseJSON(data);
					var sMediaID = m_aMediaLinks[this.iMediaLinkCount].FileID;
					m_aMediaLinks[this.iMediaLinkCount].icon =  objJSON.thumbnail_medium_url;
					sTitle = htmlEncode(objJSON.title)
					sTitle = sTitle.replace('(60")', '60');
					m_aMediaLinks[this.iMediaLinkCount].name = sTitle;
					
					fnBuildMediaHTML(this.iMediaLinkCount);
		   		}
		   	});


		}
		
		return(sMediaVideoID);   
	
	}

    //::::::
    function fnVimeoURLParser(sURL)
    {
    	var sMediaVideoID = '';
    	sURL = sURL.toLowerCase();
    	
	    var regex = new RegExp(/(https?:\/\/)?(www.)?(player.)?vimeo.com\/([a-z]*\/)*([0-9]{6,11})[?]?.*/);
	
	    if ( regex.test(sURL) ) {
	        sMediaVideoID = regex.exec(sURL)[5];
	        
	        var sURL='http://vimeo.com/api/v2/video/' + sMediaVideoID + '.json';
		    
		    m_aMediaLinks[m_MediaLinkCount] = new CATTACH(0, '', '', '', '', false, '', '', '');
			m_aMediaLinks[m_MediaLinkCount].index = m_MediaLinkCount;
        	m_aMediaLinks[m_MediaLinkCount].FileID = sMediaVideoID;
        	m_aMediaLinks[m_MediaLinkCount].URL = 'https://player.vimeo.com/video/' + sMediaVideoID + '?api=1&autoplay=1';
        	
        	$.ajax({
			     type: "GET",
			     url: '/app/HttpRequest.asp',
			     data: "HTTPURL=" + escape(sURL),
			     iMediaLinkCount: m_aMediaLinks[m_MediaLinkCount].index, 
			     success: function(data) {
			     
			     	try {
			     		var  objJSON = jQuery.parseJSON(data);
						var sMediaID = m_aMediaLinks[this.iMediaLinkCount].FileID;
						m_aMediaLinks[this.iMediaLinkCount].icon =  objJSON[0].thumbnail_medium;
						sTitle = htmlEncode(objJSON[0].title)
						sTitle = sTitle.replace('(60")', '60');
						m_aMediaLinks[this.iMediaLinkCount].name = sTitle;	
						fnBuildMediaHTML(this.iMediaLinkCount);
					}
					catch (err) {
					
					  	// Do something about the exception here
					  	return(''); 
					  
					}
			 	
		   		}
		   	});

	        
	    }		
    
		return(sMediaVideoID);   
	}
	

    //::::::
    function fnCheckMediaLinks(sURL)
    {
    	var sVideoURL = '';
    	
    	//check for YouTube links
		var sYouTubeVideoID = fnYouTubeURLParser(sURL);
		if (sYouTubeVideoID.length > 0)
		{
			sVideoURL = m_aMediaLinks[m_MediaLinkCount].URL;
			m_MediaLinkCount += 1;
			return(sVideoURL);
		}
		
    	//check for Dailymotion links
		var sDailymotionVideoID = fnDailymotionURLParser(sURL);	
		if (sDailymotionVideoID.length > 0)
		{
			sVideoURL = m_aMediaLinks[m_MediaLinkCount].URL;
			m_MediaLinkCount += 1;
			return(sVideoURL);
		}
		

    	//check for Dailymotion links
		var sVimeoVideoID = fnVimeoURLParser(sURL);	
		if (sVimeoVideoID.length > 0)
		{
			sVideoURL = m_aMediaLinks[m_MediaLinkCount].URL;
			m_MediaLinkCount += 1;
			return(sVideoURL);
		}
		
		return('');
    	
    }


	//:::::::
	//:::::::
	function fnBuildMediaHTML(iCatIndex)
	{
		var f_sHTML= '';
		if ( $('#Msg_body').contents().find('#tdMediaLink').length == 0 )
		{
			f_sHTML = '<table class="IMGTD" width="100%" border="0" style="border-collapse: collapse; background-color:#fff">' +
					  '<tr>' +
					 '<td width="100%" valign="bottom" height="24" style="FONT-SIZE: 13px; color:#5B6A7B; padding-top: 5px; padding-bottom: 15px">' +
					 '<b>Shared videos</b>' +
					 '</td>' +
					 '</tr>' +
					 '<tr>' +
					 '<td id="tdMediaLink" width="100%">' +
					 '</tr>' + 
					 '</td>' +
					 '</table>';
						
			$('#Msg_body').contents().find('#DIVAttachPrev').append( '<div style="color:red" >' + f_sHTML + '</div><br><br>' );
		}
		
		f_sHTML= '<div id="imgprevbox0" style="width:183px; height:100px; font-family: arial,helvetica,sans-serif; font-size: 11px; text-align:center; color:#4c6776; float:left; margin-right:5px; margin-bottom:20px; padding-bottom: 25px" cindex="0" cbxi="0">' +
				 '		<div class="attDocView" style=" ; float:left;max-height: 150px; background-color:#fff; display:inline-block; padding-right:6px"  attext="JPG" title="' + mcLang.Text('lang_rte_72',1) + '">' +
				 '		<a id="insta0" class="instagramPicYoutube BPFile" style="display:inline-block;"  target="_self"  cindex="0" href="JavaScript:top.fnOpenVideoView(\'' + m_aMediaLinks[iCatIndex].URL + '\', \'' + m_aMediaLinks[iCatIndex].name + '\')" >' +
				 '			<img  src="' + m_sRessIMGURL + '1462486983_ic_play_black_48px.png" style="height: 32px; width:32px; position:absolute; padding-left:55; padding-top:40; opacity:.5">' +							 
				 '			<img id="aprevbx0" class="BPFile" src="' + m_aMediaLinks[iCatIndex].icon + '" cindex="0" imgtype="prev" style="max-height: 150px; max-width:150px">' +
				 '		</a>' +
				 '		</div>' +
				 '<div style="display:block;  clear:both;  height:22px; line-height:22px; width:160px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; overflow:hidden" id="attname0">' + m_aMediaLinks[iCatIndex].name + '</div>' +
				 '</div>';
						
		$('#Msg_body').contents().find('#tdMediaLink').append( f_sHTML );
		ResizeToContent();
	}
 
	//:::::::
	//:::::::
	function fnOpenVideoView(sURL, sTitle)
	{
		var iMsgDivTop = 90;
		var iMsgDivLeft= 170;
		
		if (m_ClientWidth <= 1200)
		{
			iMsgDivTop = 20;
			iMsgDivLeft= 20;
		}
		
		var d = new Date();
		var n = d.getTime();
			
		$("#MediaVideo-fullscreen").css( "display", "" );
			
		$("#divMediaVideoView").css( {'position' : 'absolute', 'left' : (iMsgDivLeft + 'px'), 'top' : (iMsgDivTop + 'px'), 'display' : 'none'} );
	    
	    var iMsgDivHeight = $( window ).height() - (iMsgDivTop * 2) - 45;
		var iMsgDivWidth  = $( window ).width() - (iMsgDivLeft * 2) - 35;
		
		$('#divMediaVideoView').width(iMsgDivWidth);
		$('#divMediaVideoView').height(iMsgDivHeight);
		
		$("#divMediaVideoView").fadeIn( "fast", function() { });
		
		//set iframe height
		$('#ifm_MediaVideoView').height(iMsgDivHeight - 40);
		
		$('#ifm_MediaVideoView').attr('src','about:blank');
		$('#ifm_MediaVideoView').fadeOut(200, function() 
		{ 		
			$("#ifm_MediaVideoView").css( {'display' : ''} );
			$('#ifm_MediaVideoView').attr('src',sURL);
		});
		
		top.$('#spanMediaVideoViewTitle').html(sTitle);
	} 

   
    
    function fnInitDocsView(iTotalMsgAttach)
    {

    	if (iTotalMsgAttach == 0) 
    		return;

		 $('#Msg_body').contents().find('.attDocView').each(function(){
		 
		
			var ext = $(this).attr('attext'); 	
			ext = ext.toLowerCase();		
			switch (ext) 
			{			
				case 'xlsx' :
				case 'pps' 	:
				case 'xls'  :		
				case 'docx' :
				case 'doc' 	:
				case 'ppt' 	:
				case 'pptx' :
				case 'pdf'	:
				case 'htm' 	:
				case 'txt' 	:
				
							var iattsize = $(this).attr('attsize');
							//exception for PDF file, don't use the viewer for PDF > 3MB...
							if ( (iattsize.length > 1) && (ext == 'pdf') )
							{
								iattsize = parseFloat(iattsize);
								if ( iattsize > 3000 )
									return true;
							}
							//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

							this.onclick = function(event) {
								var sDocURL = $(this).attr('onclick');
								sDocURL = sDocURL.replace( "JavaScript:top.fnOpenMsgAttach('" , '');
								sDocURL = sDocURL.replace( "')" , '');
								fnOpenDocsView(sDocURL, ext);
								return false;
							};
			}
		    
		  });
    
    }

//:::::::
//:::::::
function fnOpenDocsView(sDocURL, sExt)
{

	$.ajax({
		type: "GET",
		url: '/app/pageapi.asp',
		data: "api=gettguid",
		success: function(data) {
			     
			//did we get the saved JSON filters?
			if ( data.length == 36 )
			{
				sDocURL += '&GUID=' + data;		
				
				//location = sDocURL;  	
				
				//:::::::::::::::::::			
				var iMsgDivTop = 10;
				var iMsgDivLeft= 10;
				
				if (m_ClientWidth <= 1200)
				{
					iMsgDivTop = 20;
					iMsgDivLeft= 20;
				}
				
				var d = new Date();
				var n = d.getTime();
					
				$("#OnlineDocs-fullscreen").css( "display", "" );
					
				$("#divOnlineDocsView").css( {'position' : 'absolute', 'left' : (iMsgDivLeft + 'px'), 'top' : (iMsgDivTop + 'px'), 'display' : 'none'} );
			    
			    var iMsgDivHeight = $( window ).height() - (iMsgDivTop * 2) - 5;
				var iMsgDivWidth  = $( window ).width() - (iMsgDivLeft * 2) - 5;
				
				$('#divOnlineDocsView').width(iMsgDivWidth);
				$('#divOnlineDocsView').height(iMsgDivHeight);
				
				$("#divOnlineDocsView").fadeIn( "fast", function() { });
				
				//set iframe height
				$('#ifm_OnlineDocsView').height(iMsgDivHeight - 40);
			
				switch (sExt.toLowerCase()) 
				{			
					case 'pdf'	:
					case 'htm' 	:
					case 'txt' 	:	
								sURL = "/app/docs/Titan_OnlineDocs.asp?surl=" + encodeURIComponent(sDocURL) + '&fileExt=' + encodeURIComponent(sExt);
								break;
										
					default:
							//MS DOC V.
							sURL = "/app/docs/Titan_docs.asp?surl=" + encodeURIComponent(sDocURL) + '&fileExt=' + encodeURIComponent(sExt) + '&n=' + n;
				}
				
				$('#ifm_OnlineDocsView').attr('src','about:blank');
				$('#ifm_OnlineDocsView').fadeOut(200, function() 
				{ 		
					$("#ifm_OnlineDocsView").css( {'display' : ''} );
					$('#ifm_OnlineDocsView').attr('src',sURL);
				});
				//:::::::::::::::::::
				
				
			}
		}
	});



	

	

}    
    function fnAutoInboxFullScreen()
    {
		if (v_sFolder.toLowerCase() == '/drafts')
			return;
		
		setTimeout(function() {
      	// Do something after 5 seconds
      	
      		//if (Inboxdblclick)
			//{	
				fnMsgFullscreen()
				
			//}
		


      	
		}, 50);
   
    
    }
    
    function fnSendTo(sEmail)
    {
    	QComposer('n');
    	fnInsertRTEXEmail(sEmail);
    
    }
    
    function fnShowHideMsgHeaders()
    {
    	if ( $('#HeadersExpand').attr('src').indexOf('arrow_less.png') > 0 )
    	{
    		$('#HeadersExpand').attr('src', m_sRessIMGURL + 'arrow_more.png');
    		$('#Msg_headers_more').css( "display", "none" );
    		document.getElementById('Msg_headers_more_tr').style.display = "none";
    	}
    	else
    	{
    		$('#HeadersExpand').attr('src', m_sRessIMGURL + 'arrow_less.png');
    		$('#Msg_headers_more').css( "display", "" );
    		
    		document.getElementById('Msg_headers_more_tr').style.display = "";
    		
    		if ( document.getElementById('MsgDetails').style.display == "none" )
    		{
    			fnShowMsgDetails();    		
    		}


    	}
    	
    	ResizeToContent();
    }
    
    function fnCalAddEvent(sEventURL)
    {
    	fnApp(4, false);
    	$('#ifm_apps').attr('src',sEventURL);
    }
    
    function fnReadRequest()
    {
		$('#ifm_BPPhotoSlideView').attr('src',m_sReadRequestURL);
    }

    
    function fnMsgGoToAttach()
    {
    	//$('#Msg_body')[0].contentWindow.location.hash = "#attachlist";
    	//document.getElementById("iframeid")
    	
    	//var contentWnd = $('#Msg_body').attr('contentWindow');
		//document.getElementById("Msg_body").location.hash = "#attachlist"
		
		window["Msg_body"].location.hash = "#attachlist";
    }
    
    function fnMsgFullscreen()
    {

    	if (m_bMsgPreFullScreen)
    	{
    		m_bMsgPreFullScreen = false;
    		fnMsgExitFullscreen();
    		return;
    	}
    	
    	m_bMsgPreFullScreen = true;
    
		$("#mMSGPrevtabs").css( "display", "none" );

		
		var m_ClientHeight = $(window).height();
		var m_ClientWidth = $(window).width();
		
		var iMsgDivTop = 80;
		var iMsgDivLeft= 130;
		
		$("#msgprev-fullscreen").css( "display", "" );
		
		$("#Msg_Panel_Msg").css( {'position' : 'absolute', 'left' : (iMsgDivLeft + 'px'), 'top' : (iMsgDivTop + 'px'), 'z-index' : '101', 'display' : 'none'} );
	    $("#Msg_Panel_Msg").fadeIn( "fast", function() { });


		$('#msg_screen_img').attr('src', m_sRessIMGURL + 'msgpre_exit-screen.png');
				
		$( "#Msg_Panel_Msg" ).addClass( "MsgpreFullscreen" );
		


		
		var iMsgDivHeight = m_ClientHeight - (iMsgDivTop * 2);
		var iMsgDivWidth  = m_ClientWidth - (iMsgDivLeft * 2);
		
		$('#Msg_Panel_Msg').width(iMsgDivWidth);
		$('#Msg_Panel_Msg').height(iMsgDivHeight);
		$('#Msg_Main').height(iMsgDivHeight);
		

		$("#mMsgBodyScroll").height(iMsgDivHeight - 30);
		
		$('#mMsgBodyScroll').scrollTop(0);



    
    }
    
    function fnMsgExitFullscreen()
    {
    	
    	//$("#Msg_Panel_Msg").fadeOut( "fast", function() { 
    	
    	$("#msgprev-fullscreen").css( "display", "none" ); 
    	$("#mMSGPrevtabs").css( "display", "" );
    	
    	$('#msg_screen_img').attr('src', m_sRessIMGURL + 'msgpre_fullscreen.png');
    	
		$("#Msg_Panel_Msg").css( {'position' : 'static'} );
		$('#Msg_Panel_Msg').width('100%');
		
		$( "#Msg_Panel_Msg" ).removeClass( "MsgpreFullscreen" );
		
		$("#Msg_Panel_Msg").css( {'display' : ''} );

		ReSizeMsgPanel();
    	
    	//});
    	
		
		
		

			
	//	var Msg_Panel_InboxHeight = parseInt(document.getElementById('Msg_Panel_Msg').offsetHeight);
	//	YAHOO.util.Dom.setStyle('mMsgBodyScroll', 'height', (Msg_Panel_InboxHeight - 55 - 38) + 'px') ;
		
		
		m_bMsgPreFullScreen = false;
    
    }
    

    
    function fnShowMsgDetails()
    {
    	if ( document.getElementById('MsgDetails').style.display == "none" )
    	{
    		document.getElementById('MsgDetails').style.display = "";
    		$('#MSgDetailsExpand').attr('src', m_sRessIMGURL + 'arrow_less.png');
    	}
    	else
    	{
    		document.getElementById('MsgDetails').style.display = "none";
    		
    		$('#MSgDetailsExpand').attr('src', m_sRessIMGURL + 'arrow_more.png');
    	}
    	
    }
    
    /////////////////////////////////////fnShowMsgAttachFiles()
    
    function fnShowMsgAttachFiles()
    {
    	var f_iIndex = 0;
    	var iTotalMsgAttachSize = 0;
    	
    	m_iTotalMsgAttach = 0;
    	
    	document.getElementById("mMsgAttahcMenu").innerHTML = '';
    	
    	//forward attachments 
		var obj_MsgIfm = window["Msg_body"];
		for (var i=0; i < m_aCAtt.length; i++)
	    {  
			//ForwardAttach(i, m_aCAtt[i].name,  m_aCAtt[i].size, m_aCAtt[i].icon, messages.AttachGuidList.split("|")[i] );
			
			f_sName = m_aCAtt[i].name;
			f_Size = m_aCAtt[i].size;
			f_sIcon = m_aCAtt[i].icon;
			f_sDownloadURL = m_aCAtt[i].URL;
			
			f_iIndex +=1;	
			var f_iID = 'msg_fAtt' + f_iIndex;
			var iAttachSize = 0;
			
			if (f_Size.length <=1 )
				iAttachSiz = 1023;
			else
				iAttachSiz = parseInt(f_Size) * 1023;
			
			iTotalMsgAttachSize += iAttachSiz;
			
	
			sProgress = "<div style='height:16px;width:100px;background: url(" + m_sRessIMGURL + "attach/bar_white.gif); color:#535353; text-align: center;'>0%</div>";
			sSize = ShowFileSize(iAttachSiz);
			sName = ShowFileIcon(f_sName,38,'');
			sAction = ''; //ShowAction(f_iID, 4);
			
			
			sAction = '<img src="' + m_sRessIMGURL + 'F_m.png" onclick="fnForwardMsgAttachFile(\'' + i + '\',event)" class="jqTootltip" title="Forward file" style="height:16px; width:16px; cursor:pointer; float:right; padding-top:5px"/>';


			//document.getElementById('AllFiles').value += "|" +  f_sName;
		    //m_AllFilesArr.push( f_iID + m_sTextDelm + f_sName );
			
	
			fnGetForwardAttachThumb(f_sName, f_iID);
			
			//if (f_sName.length > 38)
			//	sName = f_sName.substr(0, 38) + '...';

						   
			var f_sHTMLCode = '<div id="' +  f_iID + '" fFIndex=' + f_iIndex + ' imgpr="" asize="' + iAttachSiz + '"  onclick="' + f_sDownloadURL + '" onmouseout="fnPrevImgOff()" onmouseover="fnPrevImg(this,true)" style="cursor:pointer; clear: both; height:27px; color:#535353; font-family: Arial, Helvetica, sans-serif; FONT-SIZE: 11px;">' +
					 		  '<div class="jqTootltip" title="' + top.mcLang.Text('lang_drive_30',1) + '" class="UploadFile" id="' +  f_iID + 'ns" style="float:left; width:310px; line-height:24px;"><div style="float:left; width:40px; line-height:24px; text-align:right">' + sSize + '</div>&nbsp;&nbsp;' + sName + sAction + '</div>' +
							  '</div>';
				
			m_iTotalMsgAttach +=1;
			 
		 	document.getElementById("mMsgAttahcMenu").innerHTML += f_sHTMLCode; 
		  
	  		//fnShowAttachCount();
		}
		
		
		
		if (m_iTotalMsgAttach  >= 1)
		{	
		

		
			if (m_iTotalMsgAttach > 1)
				document.getElementById("msg_spanAttachCount").innerHTML = m_iTotalMsgAttach + ' ' + m_sAttachments + ' ' + ShowFileSize(iTotalMsgAttachSize) + '&nbsp;';
			else
				document.getElementById("msg_spanAttachCount").innerHTML = m_iTotalMsgAttach + ' ' + m_sOneAttachment + ' &nbsp;' + ShowFileSize(iTotalMsgAttachSize) + '&nbsp;';
				
			document.getElementById("msg_attach").style.display = "block";
	
		}
		else
			document.getElementById("msg_attach").style.display = "none";

    
    
    
    }
    
    function fnForwardMsgAttachFile(iMsgAttachIndex, e)
    {
    
    	fnDocOnClick(); 
		YAHOO.util.Event.stopEvent(e); 

    
    	QComposer('n');
    	//var obj_MsgIfm = window["Msg_body"];
    	ForwardAttach(iMsgAttachIndex, m_aCAtt[iMsgAttachIndex].name,  m_aCAtt[iMsgAttachIndex].size, m_aCAtt[iMsgAttachIndex].icon, messages.AttachGuidList.split("|")[iMsgAttachIndex] );
		fnShowAttachCount();
    }
    
    function fnShowMsgAttachList()
    {
    
    	fnDocOnClick();
		fnShowAttachCount();
		var xy = YAHOO.util.Dom.getXY('msg_attach');
		
		fnShowPOPOpt('msg_attach', 'mMsgAttahcMenu', 0,0);
		
		var iAttachlist_height = parseInt(document.getElementById('mMsgAttahcMenu').offsetHeight);
		
		xy = YAHOO.util.Dom.getXY('mPOPOpt');
		xy[0] -= 140 ;
		xy[1] -= (iAttachlist_height + 51) ;
		
		YAHOO.util.Dom.setXY('mPOPOpt', xy);

    
    
    }
    ////////////////////////////////////fnShowMsgAttachFiles()
    
    
    //:::::::
	//:::::::
	function ShowLoading(f_bValue)
	{
		document.getElementById("Msg_Main").style.display = "";
		if (f_bValue == true)
		{
			//document.getElementById("Msg_Main").style.display = "none";
			//document.getElementById("Msg_NoMessage").style.display = "none";
			
			document.getElementById("Msg_Subject").style.display = "";
			
			//document.getElementById("Msg_Loading").style.display = "";
			//document.getElementById("Msg_LoadingText").style.display = "";	
		}
		else
		{
			//document.getElementById("Msg_Main").style.display = "";
			//document.getElementById("Msg_NoMessage").style.display = "none";
			document.getElementById("Msg_Subject").style.display = "";
			//document.getElementById("Msg_LoadingText").style.display = "";
			document.getElementById("Msg_Loading").style.display = "none"; 
		}
	}
	
    //:::::::
	//:::::::
	function GetouterHTML(node){ 
	    // if IE, Chrome take the internal method otherwise build one 
	  return node.outerHTML || ( 
	      function(n){ 
	          var div = document.createElement('div'), h; 
	          div.appendChild( n.cloneNode(true) ); 
	          h = div.innerHTML; 
	          div = null; 
	          return h; 
	      })(node); 
	  } 

    //:::::::
	//:::::::
	function CheckBoxOpt(v_CheckOption)
	{
	
		for (var i=0; i < m_TotalMsgs; i++)
	    {
		    ObjBox = document.getElementById(("C" + i));
		    
            if (ObjBox == null)
	            continue;
	            
	        //if (ObjBox.checked)
			//{
			//	alert(ParentRow.outerHTML);
			//}

			if (v_CheckOption == 'All')
				document.getElementById("Call").checked = true;
			else
				document.getElementById("Call").checked = false;
	            
	        ObjBox.checked = false;
	        ObjBox.parentNode.parentNode.style.backgroundColor = "";
	            
	        var ParentRow = ObjBox.parentNode.parentNode;            
            
			var b_CheckIt = false;
			var sMsgStr = GetouterHTML(ParentRow); //ParentRow.outerHTML;
		    switch (v_CheckOption) 
	        {
	            case "All":   
					        b_CheckIt = true;
					        
	            case "None":
					        break;
					        
	            case "Read":  
	            			if( (YAHOO.util.Dom.hasClass(ParentRow, 'MN')) == false)
								b_CheckIt = true;;
					        break;
	            case "Unread":  
	            			if(YAHOO.util.Dom.hasClass(ParentRow, 'MN'))
								b_CheckIt = true;
					        break;
					        
	            case "Starred":
	            			if ( sMsgStr.indexOf("star_off.png") < 0)
								b_CheckIt = true;
					        break;
					        
	            case "Unstarred":  
	            
							if ( sMsgStr.indexOf("star_off.png") > 0)
								b_CheckIt = true;
					        break;
	
	            case "HPriority":  
	            
							if ( sMsgStr.indexOf("ph2.png") > 0)
								b_CheckIt = true;
					        break;

					      
					        break;
	
	            case "LPriority":  
	            
							if ( sMsgStr.indexOf("pl2.png") > 0)
								b_CheckIt = true;
					        break;
					        	
	            case "Attachment":  
	            
							if ( sMsgStr.indexOf("img/att.png") > 0)
								b_CheckIt = true;
					        break;
	
	            case "Today":  
					      
					        break;
	

	            case "Replied":  
	            
							if ( sMsgStr.indexOf("img/R.png") > 0)
								b_CheckIt = true;
					        break;
					        	
	            case "Forwarded":  
	            
							if ( sMsgStr.indexOf("img/F.png") > 0)
								b_CheckIt = true;
					        break;      
	
	       }
       
	       if (b_CheckIt)
	       {
	       		ObjBox.parentNode.parentNode.style.backgroundColor = sCheckboxCheckedColor;
	       		ObjBox.checked = true;
	       }

            
	    }
        
		fnShowInboxActions();
	} 
	


    
   
	/***********************************************
	* Disable Text Selection script- Ã‚Â© Dynamic Drive DHTML code library (www.dynamicdrive.com)
	* This notice MUST stay intact for legal use
	* Visit Dynamic Drive at http://www.dynamicdrive.com/ for full source code
	***********************************************/
	
	//:::::::
	//:::::::
	function disableSelection(target){
	if (typeof target.onselectstart!="undefined") //IE route
		target.onselectstart=function(){return false};
	else if (typeof target.style.MozUserSelect!="undefined") //Firefox route
		target.style.MozUserSelect="none";
	else //All other route (ie: Opera)
		target.onmousedown=function(){return false};
	//target.style.cursor = "default"
	}
	
	//Sample usages
	//disableSelection(document.body) //Disable text selection on entire body
	//disableSelection(document.getElementById("mydiv")) //Disable text selection on element with id="mydiv"
	

	function fnRemoveAllAttach()
	{
		//fnRTEUpdate();
		
		//prompt user for  action...
		if ( fnYUIPrompt(mcLang.Text('lang_mail_82',1), mcLang.Text('lang_mail_83',1), mcLang.Text('lang_mail_84',1), 'message icon-bubble', ResetAttach, arguments) )
			return;
	}
	
	function fnCallBackQcomposer()
	{
		fnRTEClose();
		QComposer(mRTEMsgAction);
	}
	
	//:::::::
	//:::::::
	function QComposer(vAction)
	{	
		if (m_bMsgPreFullScreen)
			fnMsgExitFullscreen();

	
		if ( mRTEOpen )
		{	
			//check if the RTE is empty first
			if (!fnIsRTEEmpty())
			{
			
				if ( fnReadCookie('M2W1', 'CancelMessageQuery', true) == '0')
				{
				
				}
				else
				{
					//if ( vAction == 'd' )
					mRTEMsgAction = vAction;
					//prompt user for  action...
					if ( fnYUIPromptComposer(mcLang.Text('lang_mail_85',1), mcLang.Text('lang_mail_86',1), mcLang.Text('lang_mail_87',1), 'message icon-bubble', fnCallBackQcomposer, arguments) )
					return;
				}

			
			
			}
		}
	
		fnRTEClose(); 
						
		fnResizeRTE();
		
		
		//******
		RTE_XY = YAHOO.util.Dom.getXY('raptor-wrapper');
		rte_ToCcHeight = ( $('#rte_ToCc').height() + RTE_XY[1] ) - 25 ;
		$('#rte_ToCc').css('max-height', rte_ToCcHeight + 'px');
		
		//fnAddDebug( 'RTE_XY[0]:' + RTE_XY[1] + '\nrte_ToCcHeight:' + rte_ToCcHeight + '\n$(#rte_ToCc).height():' + $('#rte_ToCc').height())
		//*******
		 
		
		
		document.getElementById("rte_Minimize").style.visibility = "hidden";
		
		mRTEMsgAction = vAction;
		mRTEMsgSaveAction = vAction;
		
		mbDropMode = false;
		mRTEMsgGUID = '';
		
		if( vAction == 'r' || vAction == 'f' || vAction == 'rall' || vAction == 'd')
		{
		
			var l_sSubject = htmlDecode(messages.subject);
			var sHTMLBODYValue = messages.body;
            var sOrigFrom = messages.from_email;
            // <RK> 052120 Fixed an issue with Reply-to support
            var sOrigReplyTo = messages.reply_to_email;
		    var sOrigToEmail = messages.to_email;
		    var sOrigCCEmail = messages.cc_email;
		    var sOrigBCCEmail = messages.bcc_email;
		    var sCurrentUserEmail = m_sUsername + '@' + m_sDomain;
		    var sFrom = sCurrentUserEmail;
		    var sFromName = messages.from;
		    var sFromEmail = messages.from_email;
		    var xml_Sent = messages.received;
		    var xml_MsgToEmail = messages.to_email;
		    var xml_CCEmail = "";
		    var sReceivedDate_full = messages.received_full;
		    var oCCA = messages.cc_email;
		    if (oCCA) {
		      xml_CCEmail = messages.cc_email;
		    }
		  	//var xml_CCEmail = document.getElementById("CCA").innerHTML;
			//alert ('deluxe QComposer 3b');
		    var xml_OriginalSubject = messages.subject;
			//alert ('deluxe QComposer 3c');
		    var bIncMsg = true;
		    var bShowHeaders = true;
		    
		    
		    $('#divRTETitleMin').html(htmlEncode(l_sSubject));
			$('#divRTETitle').html(htmlEncode(l_sSubject));

		    document.getElementById('FolderIDs').value = '';
	    	document.getElementById('AllFiles').value = ''; 
	    	
	    	mRTEMsgGUID = m_MSGID;
	    	
	    	mCurrentSavedDraftGUID = '';
		    
		     if (vAction == "r") 
		     {
		     	if ( fnReadCookie('M2W0', 'IncludeOriginalMessage', true) == '0' )
		     		sHTMLBODYValue = '';
		     
				//document.getElementById(("Ico" + m_CurrentMsgIndex)).src = "../../mail/new/R.gif";	
				iMode = 2; // M2W.Const.Composer.M_REPLY;
				
					
				sCC = "";
				sBCC = "";
				sSubject = addSubjPrefix("Re:", l_sSubject);
				sBody 	 = FormatMsgBody(sFromName, sFromEmail, sReceivedDate_full, xml_MsgToEmail, xml_CCEmail, xml_OriginalSubject, sHTMLBODYValue, bIncMsg, bShowHeaders);
				
				//Sent items? ...then use the TO field
				if ( v_sFolder.toLowerCase() == '/sent items' ) 
				{
					//////
					//To
				    sTo = sOrigToEmail;
				    oCurrentAutoTextBox = $('#rte_to'); 
				    sCC = trim(sTo);
				    sCC = sCC.replace(/,/g, ";")
				    aCcEmails = sCC.split(";");
				    if (sCC.length > 1)
				    {
		    			for (i = 0; i < aCcEmails.length; i++)
		    		 	{
		    				fnInsertRTEXEmail(aCcEmails[i]);
		    			}
		    		}
					/////
				}
				else
				{
                    sTo = sOrigFrom;
                     // <RK> 052120 Fixed an issue with Reply-to support
                    if (sOrigReplyTo) {
                        sTo = sOrigReplyTo;
                    }
					oCurrentAutoTextBox = $('#rte_to'); 
					fnInsertRTEXEmail(sTo);
				}		
				
		    } else if (vAction == "rall") {
				  
				  
				  if ( fnReadCookie('M2W0', 'IncludeOriginalMessage', true) == '0' )
		     	  	sHTMLBODYValue = ''
				  
			      iMode = 3; // M2W.Const.Composer.M_REPLYALL;
			      			      
			      sBCC = "";
			      sSubject = addSubjPrefix("Re:", l_sSubject);
			      sBody = FormatMsgBody(sFromName, sFromEmail, sReceivedDate_full, xml_MsgToEmail, xml_CCEmail, xml_OriginalSubject, sHTMLBODYValue, bIncMsg, bShowHeaders);
			      
			      
				 //Sent items? ...then use the TO field
				 if ( v_sFolder.toLowerCase() == '/sent items' ) 
				 {
					//////
					//To
				    sTo = sOrigToEmail;
				    oCurrentAutoTextBox = $('#rte_to'); 
				    sCC = trim(sTo);
				    sCC = sCC.replace(/,/g, ";")
				    aCcEmails = sCC.split(";");
				    if (sCC.length > 1)
				    {
			    		for (i = 0; i < aCcEmails.length; i++)
			    	 	{
			    			fnInsertRTEXEmail(aCcEmails[i]);
			    			
			    			if( sOrigCCEmail.indexOf(aCcEmails[i]) != -1)
			    			{
			    				sOrigCCEmail = replaceAll(sOrigCCEmail, aCcEmails[i], '');
			    			}
			    		}
			    	}
					/////
										 
					sCC = trim(sOrigCCEmail);
					
				}
				else
				{
				     sTo = sOrigFrom;
				     // <RK> 052120 Fixed an issue with Reply-to support
				     if (sOrigReplyTo) {
				         sTo = sOrigReplyTo;
				     }
				   oCurrentAutoTextBox = $('#rte_to');
				   fnInsertRTEXEmail(trim(sTo));
				   sCC = RemoveEmpties(RemoveEmail (sOrigToEmail, sCurrentUserEmail) + ";" + RemoveEmail (sOrigCCEmail, sCurrentUserEmail), ";");
				}	
			      
  
			      oCurrentAutoTextBox = $('#rte_cc'); 
			      sCC = trim(sCC);
			      sCC = sCC.replace(/,/g, ";")
			      aCcEmails = sCC.split(";");
			     
			     if (sCC.length > 1)
			     {
			     	fnShowCcBcc('cc');
			     	//sCurrentUserEmail = (m_sUsername + '@' + m_sDomain);
			     	//sCurrentUserEmail = sCurrentUserEmail.toLowerCase();
	    		 	for (i = 0; i < aCcEmails.length; i++)
	    		 	{
	    		
	    		 		//if ( trim(aCcEmails[i].toLowerCase()) != sCurrentUserEmail );
	    		 		if ( aCcEmails[i]  != 'undisclosed-recipients:' )
	    					fnInsertRTEXEmail(aCcEmails[i]);
	    			}
	    		 }
			      
			      
		    } else if (vAction == "f") {
			      iMode = 4; // M2W.Const.Composer.M_FORWARD;
			      sTo = "";
			      sCC = "";
			      sBCC = "";
			      sSubject = addSubjPrefix("Fw:", l_sSubject);
			      sBody = FormatMsgBody(sFromName, sFromEmail, sReceivedDate_full, xml_MsgToEmail, xml_CCEmail, xml_OriginalSubject, sHTMLBODYValue, bIncMsg, bShowHeaders);
			      
			      
			      //set up attachments
				  var l_aCAtt = new Array();
				  l_aCAtt = [];
				  sAttachBulk = messages.AttachFiles
				 var arr_AttachList = sAttachBulk.split("|-*_|")
				 for (var i=0; i <  arr_AttachList.length; i++)
				 {
					if (arr_AttachList[i].length > 0)
					{
							l_aCAtt[i] =  eval('new cCATTACH(' + arr_AttachList[i] + ')');
							ForwardAttach(i, l_aCAtt[i].name,  l_aCAtt[i].size, l_aCAtt[i].icon, messages.AttachGuidList.split("|")[i] );
					}
				 }

  
		    } else if (vAction == "d") {
		    
			    iMode = 4; // M2W.Const.Composer.M_FORWARD;   
					
				/////////

			      sBCC = "";
			      
			      //To
			      sTo = sOrigToEmail;
			      oCurrentAutoTextBox = $('#rte_to'); 
			      sCC = trim(sTo);
			      sCC = sCC.replace(/,/g, ";")
			      aCcEmails = sCC.split(";");
			     if (sCC.length > 1)
			     {
	    		 	for (i = 0; i < aCcEmails.length; i++)
	    		 	{
	    				fnInsertRTEXEmail(aCcEmails[i]);
	    			}
	    		}

			      //Cc
			      sCC = sOrigCCEmail;
			      oCurrentAutoTextBox = $('#rte_cc'); 
			      sCC = trim(sCC);
			      sCC = sCC.replace(/,/g, ";") 
			      aCcEmails = sCC.split(";");
			     if (sCC.length > 1)
			     {
			     	fnShowCcBcc('cc');
	    		 	for (i = 0; i < aCcEmails.length; i++)
	    		 	{
	    				fnInsertRTEXEmail(aCcEmails[i]);
	    			}
	    		}
	    		
	    		   //Bcc
			      sCC = sOrigBCCEmail;
			      sCC = sCC.replace(/["']/g, ""); 
			      oCurrentAutoTextBox = $('#rte_bcc'); 
			      sCC = trim(sCC);
			      sCC = sCC.replace(/,/g, ";")
			      aCcEmails = sCC.split(";");
			     if (sCC.length > 1)
			     {
			     	fnShowCcBcc('bcc');
	    		 	for (i = 0; i < aCcEmails.length; i++)
	    		 	{
	    				fnInsertRTEXEmail(aCcEmails[i]);
	    			}
	    		}

				////////////////
	
		
				sSubject = l_sSubject;
				sBody = sHTMLBODYValue;
   
			    m_MSGID = m_MSGID.replace(/{/g, "");
				m_MSGID = m_MSGID.replace(/}/g, "");

				mCurrentSavedDraftGUID = m_MSGID; 
				document.getElementById("Hidden10").value = m_MSGID;

		        //mRTEMsgAction = 'f';// commented <uad_korney> 12/18/2015
				mRTEMsgAction = 'd';// added <uad_korney> 12/18/2015

			     				    

				//set up attachments
				var l_aCAtt = new Array();
				l_aCAtt = [];
				sAttachBulk = messages.AttachFiles
				var arr_AttachList = sAttachBulk.split("|-*_|")
				for (var i=0; i <  arr_AttachList.length; i++)
				{
					if (arr_AttachList[i].length > 0)
					{
							l_aCAtt[i] =  eval('new cCATTACH(' + arr_AttachList[i] + ')');
							ForwardAttach(i, l_aCAtt[i].name,  l_aCAtt[i].size, l_aCAtt[i].icon, messages.AttachGuidList.split("|")[i] );
					}
				}


  
		    }


			$("#rte_subject").val(sSubject);

			//fnAddDebug(sBody);
			
						//sBody = sBody.replace(/<br>/g, '<p style="margin-top:2px; margin-bottom:2px"><br/></p>');
			$('#rte_to').focus();
			fnUpdateRTEText('');
			fnUpdateRTEText('<p style="margin-top:2px; margin-bottom:2px"><br/></p>' + sBody);
			

			/*
    		var iframe_window = window.frames["RichEditIFrameID"];
			iframe_window.focus();
			iframe_window.contentDocument.body.focus(); 	

			RichEditIFrameID.focus();	
			*/			

			//RichEditIFrameID.focus();

			//$('#raptor-docked-element').css('margin', '25px');
			//$('#raptor-docked-element').css('padding', '25px');
			
 			//$("#raptor-docked-element").find('div').replaceWith("<p>xxxxxxxxxxxxxxxx</p>");
 			//$("#raptor-docked-element").find('div').children()[0].replaceWith("<p>xxxxxxxxxxxxxxxx</p>");
			//$("#raptor-docked-element").find('div').css('line-height', '20px');
			//$("#raptor-docked-element").find('div').css('line-height', '25px');;
			//$("#raptor-docked-element").find('p').css('line-height', '7px');
			//$("#raptor-docked-element").find('p').css('margin-top', '0px');
			//$("#raptor-docked-element").find('p').css('margin-bottom', '0px');
			//$("#raptor-docked-element  div").css('line-height', '13px');

		
		}else if(vAction == 'n')  
		{
			document.getElementById('rte_to').value = "";
			document.getElementById('rte_subject').value = "";
			
			mCurrentSavedDraftGUID = ''; 
			//m_MSGID = '';
			document.getElementById("Hidden10").value = '';
			
			//document.getElementById('raptor-docked-element').innerHTML = '';
			//$("#raptor-docked-element").html('<p style="margin-top:2px; margin-bottom:2px"><br/></p>&nbsp;')';
			//$("#raptor-docked-element").children("p").remove();
			
			
			if ( ($.browser.name == "chrome") || ($.browser.name == "firefox") || ($.browser.name == "safari") )
			{
				fnUpdateRTEText('<br type="_moz">');
			}
			else
				fnUpdateRTEText('');
			
			//set default empty RTE body length
			var sRTEBody = fnGetRTEText();
			m_RTEEmptyChars = sRTEBody.length;
			
			//auto add sign?!	
			if (autoaddsig != '0') 
			{
				fnUpdateRTEText('');
				fnInsertDeafultSignature();
			}
			

		}
		
		fnShowQuickRTE(false)
		
		document.getElementById("raptor-wrapper").style.visibility = "visible";
			
		fnSetUpUploaderBtn(true);
		document.getElementById("uploaderOverlay").style.visibility= "visible";
		
		mRTEOpen = true;
		
		fnShowAttachCount();
		
		m_AutoSaveDraftTimeID = window.setTimeout("fnAutoSaveDraft()",180000);
		
		
		//$('#RichEditIFrameID').contents().find('body').focus();
		//$('#RichEditIFrameID').contents().find('.rteDiv').focus();
		//$('#RichEditIFrameID').contents().find('.rteDiv').click();
		
		//$("#RichEditIFrameID")[0].contentWindow.fnSetFocus();
		
		if( (vAction == 'f') || (vAction == "n")  )
		{
			$('#rte_to').focus();
		}
		else
		{
			//show RTE cursor
			if ( ($.browser.name == "chrome") || ($.browser.name == "firefox") || ($.browser.name == "safari") )
			{
				$('#RichEditIFrameID').focus();
				$('#RichEditIFrameID').click();
				$('#RichEditIFrameID').get(0).focus();
				$('#RichEditIFrameID').contents().find('body').get(0).focus();

			}
			else
			{
				$('#rte_to').click();
				$('#RichEditIFrameID').contents().find('body').get(0).focus();

			}
		}
		
		
		/*
		if (mmRTE1stOpen)
		{
			mmRTE1stOpen = false;
		
			//now load emotoicons!
			$(".emotico img").each(function() {   
		  		$(this).attr('src', $(this).attr('data-url'));
			}); 
		}
		*/
		
	}

	//:::::::
	//:::::::	
	function fnInsertDeafultSignature()
	{
	
		$.ajax({
	     type: "GET",
	     url: '../../app/signature_rte.asp',
	     data: 'sig=default', 
	     success: function(data) {
	          
				if (data.length > 0)
					fnRTEAddSig('<br><br>' + data);
			}
	   });

	
	}
	
	
	//:::::::
	//:::::::
	function fnGetRTEText()
	{
		var sRTEData = $('#RichEditIFrameID').contents().find('body').html();
		return( sRTEData );
	}


    //:::::::
	//:::::::
	function fnUpdateRTEText(sTextBody)
	{
		$('#RichEditIFrameID').contents().find('body').html('<div class="rteDiv"></div>' + sTextBody);
	}

    //:::::::
	//:::::::	
	function fnRTEAppend(sHTMLID, sHTML)
	{
		$('#RichEditIFrameID').contents().find(sHTMLID).append(sHTML);
	}
	
	//:::::::
	//:::::::	
	function fnRTEDelete(sHTMLID)
	{
		$('#RichEditIFrameID').contents().find(sHTMLID).remove();
	}
	
	//:::::::
	//:::::::	
	function fnRTEDisableSelect(sHTMLID)
	{
		 $('#RichEditIFrameID').contents().find(sHTMLID).attr('unselectable','on')
	     .css({'-moz-user-select':'-moz-none',
	           '-moz-user-select':'none',
	           '-o-user-select':'none',
	           '-khtml-user-select':'none', /* you could also put this in a class */
	           '-webkit-user-select':'none',/* and add the CSS class here instead */
	           '-ms-user-select':'none',
	           'user-select':'none'
	     }).bind('selectstart', function(){ return false; });
	}

	
	//:::::::
	//:::::::	
	function fnRTEElementExists(sHTMLID)
	{
		return $('#RichEditIFrameID').contents().find(sHTMLID).length
	}

	//composer_Deluxe
	//------------------------------------------
	
	//:::::::
	//:::::::
	function RemoveEmail (sEmailList, sEmail) {
	//alert ('RemoveEmail sEmailList=' + sEmailList + ' sEmail=' + sEmail);
	  var result, i, slen, aEmails, pos;
	  result = "";
	  pos = 0;
	  slen = sEmailList.length;
	  if (slen > 0) {
	    aEmails = sEmailList.split(";");
	    //alert ('aEmails.length=' + aEmails.length);
	    for (i = 0; i < aEmails.length; i++) {
	      pos = aEmails[i].indexOf(sEmail);
	//alert ('i:' + i + ' pos:' + pos);
	      if (pos >= 0) {
	        aEmails[i] = "";
	      }
	    }
	    result = aEmails.join(";");
	  }
	  return (result);
	}
	 
	//------------------------------------------
	
	//:::::::
	//:::::::
	function addSubjPrefix(sPfx, s) {
	  var result = "";
	  var sLf = s.slice(0, sPfx.length);
	  if (sLf.toLowerCase() != sPfx.toLowerCase()) {
	    result = sPfx + " " + s;
	  } else {
	    result = s;
	  }
	  return (result);
	}
	 
	//------------------------------------------
	//:::::::
	//:::::::
	function FormatMsgBody(sFromName, sFromEmail, sSent, sToEmail, sCCEmail, sSubject, sMsgBody, IncludeOriginalMessage, m_bShowBasicHeaders) {
	

	sMsgBody = stringreplace(sMsgBody, '<div origmsg="yes"></div>', '<div></div>');
	
	  var result = "";
	  var sBreakLine = '<div class="rteDiv">&nbsp;</div>'; //"<div></div>"; "\n";
	  var sBreakLine2 = ''; //"<div></div>"; "\n";
	  var showBasicHeaders = "";
	  
	 ///////////////////::::::::::::: DATE 
	var monthNames = [ mcLang.Text('lang_msearch_12',1), mcLang.Text('lang_msearch_13',1), mcLang.Text('lang_msearch_14',1), mcLang.Text('lang_msearch_15',1), mcLang.Text('lang_msearch_16',1), mcLang.Text('lang_msearch_17',1), mcLang.Text('lang_msearch_18',1), mcLang.Text('lang_msearch_19',1), mcLang.Text('lang_msearch_20',1), mcLang.Text('lang_msearch_21',1), mcLang.Text('lang_msearch_22',1), mcLang.Text('lang_msearch_23',1) ];
	var dayNames= ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]; 
	
	if ( (slang == "av") || (slang == "es") )
	{
		dayNames= ["Dom", "Lun", "Mar", "Mie", "Jue", "Vie", "Sab"]; 
	}
	
	objMsgRow = $('div[msgid*="' + m_MSGID + '"]'); 
	sSent = objMsgRow.attr('sdate');
	
	//console.log('XX sSent:' + sSent);
	
	//alert(objMsgRow.attr('title') + '\n' + sSent)
	

	var newDate = new Date(sSent); 
	//newDate.setDate(newDate.getDate() + 1);    
	var sDate = dayNames[newDate.getDay()] + ", " + newDate.getDate() + ' ' + monthNames[newDate.getMonth()] + ', ' + newDate.getFullYear() + ' ' + m_sAtText + ' ';
	var hours =  newDate.getHours();
	var minutes =  newDate.getMinutes();
	
	sHourMinutes = hours + ':' + minutes;
	
	if ( (slang == "av") || (slang == "es") || (mSkinUI == 'telmex') )
	{
	}
	else
	{
		arr_sSent = sSent.split(" ");
		sHourMinutes = arr_sSent[1] + ' ' + arr_sSent[2];
	}  
	
	sDate += sHourMinutes;
	///////////////////::::::::::::: DATE 
	
	  if (m_bShowBasicHeaders) {
		  showBasicHeaders = sBreakLine + 'From: ' + sFromName + ' &lt;' + sFromEmail + '&gt;' + sBreakLine2;
			showBasicHeaders += sBreakLine + 'Sent: ' +  sSent + sBreakLine2;
			showBasicHeaders += sBreakLine + 'To: ' + sToEmail + sBreakLine2;
			if (sCCEmail.length > 0) showBasicHeaders += 'Cc: ' + sCCEmail + sBreakLine2;
			showBasicHeaders += sBreakLine + 'Subject: ' + sSubject + sBreakLine2;
			
			//'On Thu, Jul 18, 2013 at 8:41 PM, Mark Bill <abc@abc.net> wrote:'
			 sHeadersDateName = sDate + ', ' + sFromName + ' &lt;' + sFromEmail + '&gt;';
			 showBasicHeaders = '<br><br><div origmsg="yes"></div>' + m_sReplyBasicHeader
			 showBasicHeaders = showBasicHeaders.replace(/_xxxDateANDNamexxx_/gi, sHeadersDateName);
			
		}
		
	showToCc = '<div style="background-color:#F9F9F9; color:#454545;padding:5px; margin-bottom:15px; line-height:23px">' + mcLang.Text('lang_cont_9',1) +': ' + htmlDecode($('#Msg_To_more').html()) + '<br/>';
	
	CcEmails = htmlDecode($('#Msg_Cc_more').html());
	
	if ( trim(CcEmails).length > 4)
		showToCc += mcLang.Text('lang_cont_10',1) + ': ' + CcEmails;
	
	showToCc += '</div>';

 
	  result = showBasicHeaders + sBreakLine2 + sBreakLine + '<div class="rteDiv" style="border-left: 3px #CCCCCC solid; padding-left:8px;">' + showToCc + sMsgBody + '</div>';

	  return (result);
	}
	
	function fnConvert_to_24h(time_str) {
		
	    // Convert a string like 10:05:23 PM to 24h format, returns like [22,5,23]
	    var time = time_str.match(/(\d+):(\d+) (\w)/);
	    var hours = Number(time[1]);
	    var minutes = Number(time[2]);
	    //var seconds = Number(time[3]);
	    var meridian = time[3].toLowerCase();
	
	    if (meridian == 'p' && hours < 12) {
	      hours = hours + 12;
	    }
	    else if (meridian == 'a' && hours == 12) {
	      hours = hours - 12;
	    }
	    //return [hours, minutes, seconds];
	    
	    if(hours<10) hours = "0" + hours;
		if(minutes<10) minutes = "0" + minutes;
	    
	    return (hours + ':' + minutes);
	  }
  	
	//:::::::
	//:::::::
	function trim(stringToTrim) {
		return stringToTrim.replace(/^\s+|\s+$/g,"");
	}
	
	 
	//------------------------------------------
	//:::::::
	//:::::::
	function RemoveEmpties (sLine, sDelim) {
	//alert ('ms_message.asp RemoveEmpties flag1');
	  var result = "";
	  if (sLine.length > 0) {
	//alert ('ms_message.asp RemoveEmpties flag2');
	    var ar1 = sLine.split(sDelim);
	    var ar2 = [];
	    var j = 0;
	    var i = 0;
	    var sItem;
	    for (i = 0; i < ar1.length; i++) {
	      sItem = trim(ar1[i]);
	      if (sItem.length > 0) ar2[j++] = sItem;
	    }
	    result = ar2.join(sDelim + " ");
	  }
	//alert ('ms_message.asp RemoveEmpties flag3');
	  return(result);
	}
	 
	//------------------------------------------
	 //:::::::
	 //:::::::
	  function ConvertIntermediate(sValue) {
	    var result = "";
	    switch (sValue) {
	      case "r":
	        result = "reply";
	        break;
	      case "rall":
	        result = "replyall";
	        break;
	      case "f":
	        result = "forward";
	        break;
	    }
	    return (result);
	  }
	


function utf8_encode(argString) {
  //  discuss at: http://phpjs.org/functions/utf8_encode/
  // original by: Webtoolkit.info (http://www.webtoolkit.info/)
  // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
  // improved by: sowberry
  // improved by: Jack
  // improved by: Yves Sucaet
  // improved by: kirilloid
  // bugfixed by: Onno Marsman
  // bugfixed by: Onno Marsman
  // bugfixed by: Ulrich
  // bugfixed by: Rafal Kukawski
  // bugfixed by: kirilloid
  //   example 1: utf8_encode('Kevin van Zonneveld');
  //   returns 1: 'Kevin van Zonneveld'

  if (argString === null || typeof argString === 'undefined') {
    return '';
  }

  // .replace(/\r\n/g, "\n").replace(/\r/g, "\n");
  var string = (argString + '');
  var utftext = '',
    start, end, stringl = 0;

  start = end = 0;
  stringl = string.length;
  for (var n = 0; n < stringl; n++) {
    var c1 = string.charCodeAt(n);
    var enc = null;

    if (c1 < 128) {
      end++;
    } else if (c1 > 127 && c1 < 2048) {
      enc = String.fromCharCode(
        (c1 >> 6) | 192, (c1 & 63) | 128
      );
    } else if ((c1 & 0xF800) != 0xD800) {
      enc = String.fromCharCode(
        (c1 >> 12) | 224, ((c1 >> 6) & 63) | 128, (c1 & 63) | 128
      );
    } else {
      // surrogate pairs
      if ((c1 & 0xFC00) != 0xD800) {
        throw new RangeError('Unmatched trail surrogate at ' + n);
      }
      var c2 = string.charCodeAt(++n);
      if ((c2 & 0xFC00) != 0xDC00) {
        throw new RangeError('Unmatched lead surrogate at ' + (n - 1));
      }
      c1 = ((c1 & 0x3FF) << 10) + (c2 & 0x3FF) + 0x10000;
      enc = String.fromCharCode(
        (c1 >> 18) | 240, ((c1 >> 12) & 63) | 128, ((c1 >> 6) & 63) | 128, (c1 & 63) | 128
      );
    }
    if (enc !== null) {
      if (end > start) {
        utftext += string.slice(start, end);
      }
      utftext += enc;
      start = end = n + 1;
    }
  }

  if (end > start) {
    utftext += string.slice(start, stringl);
  }

  return utftext;
}

	
	//:::::::
	//:::::::
   function fnRTESend()
  {
  
	  	CheckSpellDone();
	  	
	  	
	  	//account is disabled?
	  	if ( sendingdisabled == 'True' )
	  	{
	  		UpdateInboxAlert('<span style="color:red">The Compose feature of your account has been disabled due to a suspected spam activity.  Contact Support to reactivate this feature.</span>', '');
	  		return
	  	}
	  	
	  	var sinvalidM2Wemail = '';
	  	
	  	m_arrAutoSaveContacts = [];
	  	
	  	//Get To/Cc/Bcc
		var rtEmaillistTo = $("#rtEmaillistTo").children("div").children("a");
		var rtEmaillistCc = $("#rtEmaillistCc").children("div").children("a");
		var rtEmaillistBcc= $("#rtEmaillistBcc").children("div").children("a");
	
		var sToEmail = ''
		var sCcEmail = ''
		var sBccEmail = ''
		for ( var b=0; b < rtEmaillistTo.length; b++)
		{
			if ( $(rtEmaillistTo[b]).attr('validemail') == 'yes' )
			{
				sToEmail += $(rtEmaillistTo[b]).attr('title') + ';'
				if ( isValidEmailAddress($(rtEmaillistTo[b]).attr('title'))  )
					m_arrAutoSaveContacts.push( $(rtEmaillistTo[b]).attr('title') );
			}
			else
			{
				if ( $(rtEmaillistTo[b]).attr('bm2wemail') == 'true' )
				{
					sinvalidM2Wemail += $(rtEmaillistTo[b]).attr('title') + '<br>'
				}
			}
		}
		
		for ( var b=0; b < rtEmaillistCc.length; b++)
		{
			if ( $(rtEmaillistCc[b]).attr('validemail') == 'yes' )
			{
				sCcEmail += $(rtEmaillistCc[b]).attr('title') + ';'
				if ( isValidEmailAddress($(rtEmaillistCc[b]).attr('title'))  )
					m_arrAutoSaveContacts.push( $(rtEmaillistCc[b]).attr('title') );
			}
			else
			{
				if ( $(rtEmaillistTo[b]).attr('bm2wemail') == 'true' )
				{
					sinvalidM2Wemail += $(rtEmaillistTo[b]).attr('title') + '<br>'
				}
			}			
		}
		
		for ( var b=0; b < rtEmaillistBcc.length; b++)
		{ 
			if ( $(rtEmaillistBcc[b]).attr('validemail') == 'yes' )
			{
				sBccEmail+= $(rtEmaillistBcc[b]).attr('title') + ';'
				if ( isValidEmailAddress($(rtEmaillistBcc[b]).attr('title'))  )
					m_arrAutoSaveContacts.push( $(rtEmaillistBcc[b]).attr('title') );
			}
			else
			{
				if ( $(rtEmaillistTo[b]).attr('bm2wemail') == 'true' )
				{
					sinvalidM2Wemail += $(rtEmaillistTo[b]).attr('title') + '<br>'
				}
			}
		}


	  	if ( sinvalidM2Wemail.length > 0 )
	  	{
	  	
	  		sMessage = m_sInvalidEmailMsg1 + "<br><br>" + sinvalidM2Wemail + "<br>" + m_sInvalidEmailMsg2;
	  		fnYUIPromptOK(sMessage, mcLang.Text('lang_drive_39',1) );
	  		return;
	  	}

	
	  	if ( (sToEmail.length == 0) &&  (sCcEmail.length == 0) && (sBccEmail.length == 0) )
	  	{
	  		UpdateInboxAlert(mcLang.Text('lang_rte_73',1), '1359077142_info_16.png');
	  		return;
	  	}
		///////////////

	  	
	  	if (uploadDone == false)
	  	{
			//prompt user for  action...
			if ( fnYUIPrompt(mcLang.Text('lang_mail_77',1), mcLang.Text('lang_mail_74',1), mcLang.Text('lang_mail_75',1), 'message icon-bubble', fnRTESend, arguments) )
				return;
	  	}
	  	
	  	/*
	  	if (m_bSendingMail)
	  	{
	  		UpdateInboxAlert(mcLang.Text('lang_mail_78',1), '1359077142_info_16.png');
	  		return;
	  	}
	  	*/
	  	
  		//Detect the word 'attached' in the message body and alert the user if no attachments found
		if (m_iTotalQAttach == 0)
  			if ( fnCheckForAttachedWords() )
  			{
				//prompt user for  action...
				if ( fnYUIPrompt(mcLang.Text('lang_mail_76',1), mcLang.Text('lang_mail_74',1), mcLang.Text('lang_mail_75',1), 'message icon-bubble', fnRTESend, arguments) )
					return;
		
  			}

	  	
	  	//prompt user for  action...
	  	sSubjectval = trim(document.getElementById('rte_subject').value);
	  	if (sSubjectval.length == 0)
			if ( fnYUIPrompt(mcLang.Text('lang_mail_73',1), mcLang.Text('lang_mail_74',1), mcLang.Text('lang_mail_75',1), 'message icon-bubble', fnRTESend, arguments) )
				return;
	
	
	    sAlias = m_sUsername + '@' + m_sDomain;
	
		/*
			var l_sSubject = messages.subject;
				var sHTMLBODYValue = messages.body;
			    var sOrigFrom = messages.from_email;
			    var sOrigToEmail = messages.to_email;
			    var sOrigCCEmail = messages.cc_email;
			    var sCurrentUserEmail = m_sUsername + '@' + m_sDomain;
			    var sFrom = sCurrentUserEmail;
			    var sFromName = messages.from;
			    var sFromEmail = messages.from_email;
			    var xml_Sent = messages.received;
			    var xml_MsgToEmail = messages.to_email;
			    var xml_CCEmail = "";
			    var oCCA = messages.cc_email;
			    if (oCCA) {
			      xml_CCEmail = messages.cc_email;
		*/
		
		if (mRTEMsgAction == 'n')
		{
			document.getElementById("Hidden10").value = '';
			document.getElementById("Hidden11").value = '';  //sAction
		}
		else
		{
			document.getElementById("Hidden10").value = m_MSGID;
			document.getElementById("Hidden11").value = mRTEMsgAction;  //sAction
		}
		
		//****** Attach
		fnGetUploadedAttach();
		
		
		$(".rteSharedFiles").remove();
		
		//remove the X btn for any shared
		fnRTEDelete('.cssRemoveShare');
		
		//convert all urls to hyperlinks
		var linkedText = fnGetRTEText(); //Autolinker.link( fnGetRTEText(), { newWindow: true } );
				
		var buffer = '';
			buffer += 'save_draft=';
			buffer += '&KeepSavedDraft=true';		
			buffer += '&Send_mail=' + encodeURI('- Send Mail -') ; 	//Send_mail
			buffer += '&RichTextFormat=true';  						//RichTextFormat
			buffer += '&mail_as_HTML=true'; 						//Mail_as_HTML
			buffer += '&xml_Priorities=' + mRTEPriority;
			buffer += '&SavedDraftGUID=' + mCurrentSavedDraftGUID;
			buffer += '&multilingual=false';
			buffer += '&faction=none';
			buffer += '&AllFiles=' + encodeURI(document.getElementById('AllFiles').value);
			buffer += '&FolderIDs=' + encodeURI(document.getElementById('FolderIDs').value);
			buffer += '&mail_request_receipt=' + $('#ckbRequestReceipt').prop("checked"); //ckbRequestReceipt
            buffer += '&mail_delivery_receipt=' + $('#ckbDeliveryReceipt').prop("checked"); //ckbDeliveryReceipt
			buffer += '&sMsgId=' + encodeURI(m_MSGID);
			buffer += '&sAction=' + document.getElementById('Hidden11').value;
			buffer += '&mail_save_message=true';
			buffer += '&xml_Bcc=' + encodeURIComponent(sBccEmail);
			buffer += '&xml_Cc=' + encodeURIComponent(sCcEmail);
			buffer += '&xml_To=' + encodeURIComponent(sToEmail);
			buffer += '&xml_From=' + encodeURIComponent(document.getElementById("xml_From").value);
			buffer += '&xml_Subject=' + encodeURIComponent(document.getElementById('rte_subject').value);
			buffer += '&xml_Subject3=' + Base64.encode(document.getElementById('rte_subject').value);
			
			buffer += '&xml_TextBody=' + encodeURIComponent(linkedText);
			//buffer += '&xml_TextBody=' + encodeURIComponent(utf8_encode(linkedText));
			
			//buffer += '&xml_Subject2=' + Base64.encode(encodeURIComponent(document.getElementById('rte_subject').value));
			//buffer += '&xml_Subject3=' + Base64.encode(document.getElementById('rte_subject').value);
			//buffer += '&xml_TextBody=' + encodeURIComponent(linkedText); //encodeURIComponent(utf8_encode(linkedText));
			
			//var arabic = /[\u0600-\u06FF]/;
			//var string = 'عربية‎'; // some Arabic string from Wikipedia
			//alert(arabic.test(linkedText)); // displays true
						
			//buffer += '&xxxxxxx=' + xxxxxxxxxx;
		
	
		document.getElementById("raptor-wrapper").style.visibility = "hidden";
		UpdateInboxAlert(mcLang.Text('lang_mail_95',1), '1359077142_info_16.png');
		m_bSendingMail = true;
		
		//::::::LOG CODE STARTS :::
		sLogData = document.getElementById('AllFiles').value;
		sLogBuffer = '?newcom=true&XAttach=' + sLogData.length;
		sLogData = document.getElementById('FolderIDs').value;
		sLogBuffer += '&XFolderIDs=' + sLogData.length;
		sLogBuffer += '&XPriority=' + mRTEPriority;
		sLogBuffer += '&XSavedDraftGUID=' +  mCurrentSavedDraftGUID;
		sLogBuffer += '&XsAction=' + document.getElementById('Hidden11').value;
		sLogBuffer += '&XsMsgId=' + encodeURI(m_MSGID);
		sLogBuffer += '&XUser=' + m_sUsername + '_' + m_sDomain;
		sLogBuffer += '&XReadReceipt=' + $('#ckbRequestReceipt').prop("checked");		
        sLogBuffer += '&XDeliveryReceipt=' + $('#ckbDeliveryReceipt').prop("checked");		
		//::::::LOG CODE ENDS   :::
		
		fnRTEClose();
		
		sLogBuffer = '?newcom=true';
		
		//set new reply/forward flag
		if ( ( mRTEMsgAction != 'n' ) && ( $('div[msgid*="' + mRTEMsgGUID + '"]').length ) )
		{
			var objMsgRow = $('div[msgid*="' + mRTEMsgGUID + '"]');
			var f_sIndex = $(objMsgRow).attr('cindex');
	
			var msgico = document.getElementById(("Ico" + f_sIndex)).src.toLowerCase();
			var sNewico = '';
			if ( msgico.indexOf('/rf.png') == -1)
			{
		        switch (mRTEMsgAction) 
		        {
		            case 'r':   
		            case 'rall':
		            
		            	if ( msgico.indexOf('/F.png') != -1)
		            		sNewico = 'RF.png';
		            	else
		            		sNewico = 'R.png';
		            
						        break;
		            case 'f':   

		            	if ( msgico.indexOf('/R.png') != -1)
		            		sNewico = 'RF.png';
		            	else
		            		sNewico = 'F.png';
		        }
		        
		        document.getElementById(("Ico" + f_sIndex)).src = m_sRessIMGURL + sNewico;
	        } 

		}
		///////


		
		$.ajax({
	     type: "post",
	     url: '../../mail/mail_send.asp' + sLogBuffer,
	     data: buffer,  
	     success: function(data) {
	       
				if (data.length > 0)
				{
					arrResponse  = data.split('|');
					///////
					if ( (arrResponse[0] == '0') && (arrResponse.length > 1) )
					{
						sSavedDraftGUID = arrResponse[1];
						///////
						if (sSavedDraftGUID.length == 36)
						{
							var obj_callback = new clsAjaxcallback();    
				        	obj_callback.Ajaxcallback.success = fAJAXDraftsDeletedResponse;
							var sURL = '../../mail/mail_action.asp?Action=15&MsgIDs=' + sSavedDraftGUID + '|';
				        	makeRequest(sURL, obj_callback.Ajaxcallback); 
				        	
				        	m_bSendingMail = false;
							if ( v_sFolder.toLowerCase() == '/sent items' ) 
								NextPrevPage(CurentPage);
						}
						///////
					}
					///////
				
				}
				
			}
	   });
	   
	   fnCheckAutoSaveRecipients();


  }


	function fnCheckAutoSaveRecipients()
	{ 
	
		var buffer = 'SearchQuery=';
		
		for (var cc=0; cc < m_arrAutoSaveContacts.length; cc++)
		{	
		    sEmail =  m_arrAutoSaveContacts[cc];
		    buffer += sEmail + '|';              	
		}
		
		$.ajax({
		     type: "post",
		     url: '../../contacts/contacts_action.asp?Action=emaillistexist',
		     data: buffer,  
		     success: function(data) {
		       
					if (data.length > 0)
					{
						arrResponse  = data.split('|');
						
						
						/////////////
						
						sHTML = '<table border="0" cellspacing="0" cellpadding="0" align="center" width="100%">' +
							    '<tr style="height: 30px; background-color:#F1F2F6; color: #708194; line-height: 30px;" >' +
								'  <td width="25px">&nbsp;<input type="checkbox" id="contact_select_all" onclick="fnSaverecipients_selectall()"></td>' +
							    '  <td width="190px">&nbsp;' + mcLang.Text('lang_cont_37',1) + '</td>' + 
							    '  <td width="170px">&nbsp;' + mcLang.Text('lang_cont_48',1) + '</td>' + 
							    '  <td width="">&nbsp;' + mcLang.Text('lang_cont_50',1) + '</td>' + 
							    '</tr>'
						
						var iTotalEmails = 0;	    
						for(i=0; i < (arrResponse.length - 1) ; i++)
						{
							if ( arrResponse[i] == 0 )
							{	
								sHTML += '<tr style="height:32px">' +
								  	'	<td>&nbsp;<input type="checkbox" id="contact_Add_' + iTotalEmails + '" value="yes"></td>' +
									'	<td><input type="hidden" id="contact_HomeEmail_' + iTotalEmails + '" value="' + m_arrAutoSaveContacts[i] + '">&nbsp;' + m_arrAutoSaveContacts[i] + '</td>' +
									'	<td>&nbsp;<input type="text" size="28" style="width:140px" id="contact_FirstName_' + iTotalEmails + '"></td>' +
									'	<td>&nbsp;<input type="text" size="28" style="width:140px" id="contact_LastName_' + iTotalEmails + '"></td>' +
									'</tr>';
									iTotalEmails +=1;
							}
						}
   
						sHTML +='</table><input type="hidden" id="saverecipients_total" value=' + iTotalEmails + '>';
						
						if (iTotalEmails == 0)
							return;
						
						$('#divSaveRecipientsBoxList').html(sHTML);
						$(function() {
				
							var iTop =  ( ($(window).height() - $('#divSaveRecipientsMenu').outerHeight())/2) - 100;
							if (iTop < 20)
								iTop += 100
							
							    $('#divSaveRecipientsMenu').css({
					     		position:'absolute',
					     		display:'block',
					        	left: ($(window).width() - $('#divSaveRecipientsMenu').outerWidth())/2,
					        	top: iTop		    }); 
							});
							
							$("#SaveRecipients-fullscreen").css( "display", "" );
						
						////////////
					}
					
				}
		   });


	
	
	}
	
	function fnSaveRecipientsBoxClose()
	{
		$("#divSaveRecipientsMenu").css( "display", "none" );
		$("#SaveRecipients-fullscreen").css( "display", "none" );
		$('#divSaveRecipientsBoxList').html('');

	
	}
	
	function fnSaverecipients_selectall() 
	{
		var bSelectAll = $('#contact_select_all').prop( "checked");
		var saverecipients_total = $('#saverecipients_total').val();
		for (x = 0; x < saverecipients_total; ++x)
		{
			$('#contact_Add_' + x).prop( "checked", bSelectAll);
		}
	}
		
	function fnSaveRecipientsOKBtn()
	{
		var checkbox_select = "no";
		var saverecipients_total = $('#saverecipients_total').val();
		var sRecipients = '';

	
		for (x = 0; x < saverecipients_total; ++x)
		{
			if ( $('#contact_Add_' + x).prop("checked")  )
			{
				checkbox_select = "yes";
				sRecipients +=  $('#contact_HomeEmail_' + x).val() + '|#|' 
	
				if (trim($('#contact_FirstName_' + x).val()) == "")
				{
					UpdateInboxAlert(m_sContactsAutoSave0);
					$('#contact_FirstName_' + x).focus();
					return;
				}
	
				sRecipients +=  $('#contact_FirstName_' + x).val() + '|#|'
				
				if (trim($('#contact_LastName_' + x).val()) == "")
				{
					UpdateInboxAlert(m_sContactsAutoSave1);
					$('#contact_LastName_' + x).focus();
					return;
				}
				
				sRecipients +=  $('#contact_LastName_' + x).val() + '||'
	
			}
		}
	
		if (checkbox_select == "no")
		{
			UpdateInboxAlert(m_sContactsAutoSave2);
			return;
		}
		
		
		
		//call the  backend....
		var buffer = 'recipients=' + encodeURIComponent(sRecipients);	
		$.ajax({
		     type: "post",
		     url: '../../app/rte_saverecipients.asp',
		     data: buffer,  
		     success: function(data) {
		       
					if (data.length > 0)
					{
						UpdateInboxAlert(data);
					}
					
				}
		   });
		   
		fnSaveRecipientsBoxClose();   
		//////




	
	}

    //:::::::
	//:::::::
	function fnCheckForAttachedWords()
	{
		var sMsgBody = $('#RichEditIFrameID').contents().find('body').html();
		
		var rteHTML = [];
		rteHTML['body'] = sMsgBody.split('<div origmsg="yes"></div>')[0];
		
		var sHTMLBody = rteHTML['body'].toLowerCase();
		
		if(sHTMLBody.search('attached') != -1)
		    return(true);

		if(sHTMLBody.search('attaching') != -1)
		    return(true);

		if(sHTMLBody.search('attachment') != -1)
		    return(true);

		if(sHTMLBody.search('enclosed') != -1)
		    return(true);
		
		return(false);		
		
	}


    //::::::: 
	//:::::::
	function fnRTEAlias(sAliasID, obj)
	{
		document.getElementById("xml_From").value = sAliasID;
		$('#spanAlias').html($(obj).html());	 
	}


    //:::::::
	//:::::::
	function fnRTESendConfirm(sReturn, sSavedDraftGUID)
	{
		
		
		if (sSavedDraftGUID.length == 36)
		{
			var obj_callback = new clsAjaxcallback();    
        	obj_callback.Ajaxcallback.success = fAJAXDraftsDeletedResponse;
			var sURL = '../../mail/mail_action.asp?Action=15&MsgIDs=' + sSavedDraftGUID + '|';
        	makeRequest(sURL, obj_callback.Ajaxcallback); 
		}
		
		m_bSendingMail = false;
		if ( v_sFolder.toLowerCase() == '/sent items' ) 
			NextPrevPage(CurentPage);
			
			
			
		try {
			document.getElementById("my_iframe").src = 'about:blank';
		}
		catch (x) { }

			
	}
	

	
    //:::::::
	//:::::::
	//for auto timer
	function fnAutoSaveDraft()
	{
		if (!fnIsRTEEmpty())
		{
			fnSaveDraft('a');
		}
		else
		{
			window.clearTimeout(m_AutoSaveDraftTimeID);
			m_AutoSaveDraftTimeID = window.setTimeout("fnAutoSaveDraft()",180000);

		}
	}
	
    //:::::::
	//:::::::
	function fnSaveDraft(sSaveMode)
	{
		
		window.clearTimeout(m_AutoSaveDraftTimeID);
		m_AutoSaveDraftTimeID = window.setTimeout("fnAutoSaveDraft()",180000);
	
	
		if (mSavedDraftBusy)
			return;

		CheckSpellDone();
		
		mSavedDraftBusy = true;

		var sMsgBody = fnGetRTEText(); //mC.GetMessage();
		
		//Get To/Cc/Bcc
		var rtEmaillistTo = $("#rtEmaillistTo").children("div").children("a");
		var rtEmaillistCc = $("#rtEmaillistCc").children("div").children("a");
		var rtEmaillistBcc= $("#rtEmaillistBcc").children("div").children("a");
	
		var sToEmail = '';
		var sCcEmail = '';
		var sBccEmail = '';
		for ( var b=0; b < rtEmaillistTo.length; b++)
		{
			if ( $(rtEmaillistTo[b]).attr('validemail') == 'yes' )
				sToEmail += $(rtEmaillistTo[b]).attr('title') + ';'
		}
		
		for ( var b=0; b < rtEmaillistCc.length; b++)
		{
			if ( $(rtEmaillistCc[b]).attr('validemail') == 'yes' )
				sCcEmail += $(rtEmaillistCc[b]).attr('title') + ';'
		}
		
		for ( var b=0; b < rtEmaillistBcc.length; b++)
		{
			if ( $(rtEmaillistBcc[b]).attr('validemail') == 'yes' )
				sBccEmail+= $(rtEmaillistBcc[b]).attr('title') + ';'
		}
	
	  	if ( (sToEmail.length == 0) &&  (sCcEmail.length == 0) && (sBccEmail.length == 0) )
	  	{
	  		//UpdateInboxAlert('Please specify at least one recipient.', '1359077142_info_16.png');
	  		sToEmail = ''
			sCcEmail = ''
			sBccEmail = ''
	  	}
		///////////////
		 
		//****** Attach
		fnGetUploadedAttach();
		
		var buffer = 'autosavedraft=yes&KeepSavedDraft=true&Send_mail=&junk=none&mail_save_message=true&save_draft=Save%20Draft';
			buffer += '&xml_Bcc=' + sBccEmail;
			buffer += '&xml_Cc=' + sCcEmail;
			buffer += '&xml_To=' + sToEmail;	
	        // begin <uad_korney> 12/18/2015 support Forward/reply for Saved Draft
	        //buffer += '&sAction=';	
	        //buffer += '&sMsgId=';
			buffer += '&sMsgId=' + encodeURI(m_MSGID);
			buffer += '&sAction=' + mRTEMsgAction
	        // end <uad_korney> 12/18/2015 support Forward/reply for Saved Draft
			buffer += '&SavedDraftGUID=' + encodeURI(mCurrentSavedDraftGUID);
			buffer += '&FolderIDs=' + encodeURI(document.getElementById('FolderIDs').value);
			buffer += '&AllFiles=';
			buffer += '&xml_Subject=' + encodeURIComponent(document.getElementById('rte_subject').value);
			buffer += '&xml_TextBody=' + encodeURIComponent(sMsgBody); 
		
		//alert("Draft GUID BEFORE:" + m_MSGID);
		
		//::::::LOG CODE STARTS :::
		sLogBuffer = '?newcom=true&SaveDraft=TRUE';
		sLogData = document.getElementById('FolderIDs').value;
		sLogBuffer += '&XFolderIDs=' + sLogData.length;
		sLogBuffer += '&XPriority=' + mRTEPriority;
		sLogBuffer += '&XSavedDraftGUID=' +  mCurrentSavedDraftGUID;
		sLogBuffer += '&XsAction=';
		sLogBuffer += '&XsMsgId=' + encodeURI(m_MSGID);
		sLogBuffer += '&XUser=' + m_sUsername + '_' + m_sDomain;
		sLogBuffer += '&XReadReceipt=' + $('#ckbRequestReceipt').prop("checked");		
        sLogBuffer += '&XDeliveryReceipt=' + $('#ckbDeliveryReceipt').prop("checked");		
		//::::::LOG CODE ENDS   :::
		
		//alert('---BEFORE calling SaveDraft--\nsMsgId:' + m_MSGID + '\nSavedDraftGUID=' + mCurrentSavedDraftGUID)
		sLogBuffer = '?newcom=true&SaveDraft=TRUE';
		
    	$.ajax({
	     type: "post",
	     url: '../../mail/mail_send.asp' + sLogBuffer, 
	     data: buffer,  
	     success: function(data) {
	       
				//if (data.length > 0)
				//{
					
					handleSaveDraftResponse(data);
				//}
				
			},
		 error: function(){
        		// will fire when timeout is reached
        		//alert('TIMEOUT!!!!!')
    		},
		 timeout: 300000// sets timeout to 3 seconds
	   });

    	
 
 
		
	}
	
	//::::::
	function handleSaveDraftResponse(sHTTPData)
	{
		if (m_MSGID.length == 36)
		{
			/*
			var obj_callback = new clsAjaxcallback();    
        	obj_callback.Ajaxcallback.success = fAJAXDraftsDeletedResponse;
			var sURL = '../../mail/mail_action.asp?Action=15&MsgIDs=' + m_MSGID + '|';
        	makeRequest(sURL, obj_callback.Ajaxcallback); 
        	*/
		}
			
			
		var sTimestamp = fnGetTimestamp();
				
		var sMessage = mcLang.Text('lang_rte_59',1)
		sMessage = sMessage.replace(/xxxx/gi, sTimestamp)
		UpdateInboxAlert(sMessage, '1359077142_info_16.png');
		
		if (sHTTPData.length == 36)
		{	
			mCurrentSavedDraftGUID = sHTTPData;
			
			if (v_sFolder.toLowerCase() == '/drafts')
			{
				NextPrevPage(CurentPage);
			}

		}
		
		//alert('---AFTER calling SaveDraft--\nsMsgId:' + m_MSGID + '\nSavedDraftGUID=' + mCurrentSavedDraftGUID)

		mSavedDraftBusy = false; 
		
		if (mSavedDraftCloseRTE)
		{
			mSavedDraftCloseRTE = false; 
			fnRTEClose();
		}
	}
	
	//::::::
	function fAJAXDraftsDeletedResponse(o)
	{

		var sHTTPData = o.responseText;	
		//alert(sHTTPData);
		
		if (v_sFolder.toLowerCase() == '/drafts')
			NextPrevPage(CurentPage);
		
	}
	
	function cCATTACH(f_iIndex, f_sFileID, f_bImg, f_sName, f_sSize, f_bBP, f_sURL, f_sIcon, f_sDate)
	{
		this.index  = f_iIndex;
		this.FileID = f_sFileID;
		this.bImg   = f_bImg;
		this.name   = f_sName;
		this.size   = f_sSize;
		this.bBP    = f_bBP;
		this.URL    = f_sURL;
		this.icon   = f_sIcon;
		this.sDate  = f_sDate;
	}
	
		/////////////////////////////////////


	function fnRTEColorPickCss(sID, bOver)
	{
		if (bOver)
			$("#" + sID).css("background-color", "#E1E1E1");
		else
			$("#" + sID).css("background-color", "");
		
		
	}

    //:::::::
	//:::::::	
	function fnInitRTE()
	{
	
		generate_wysiwyg('xml_TextBody','RichEditIFrameID', "");
					
		
		setTimeout(function() {
    
			fnRTEClear();
		
			$(".jqTootltip").tipTip();
			
			//set click for iframe - close popups
			_ifm = document.getElementById('RichEditIFrameID');
	    	_doc = _ifm.contentDocument || _ifm.contentWindow.document;
	    	if(window.addEventListener){ // Mozilla, Netscape, Firefox
				_doc.addEventListener('click', fnDocOnClick, true);
				_doc.addEventListener('onscroll', fnDocOnClick, true);
			} else { // IE
				_doc.attachEvent('onclick', fnDocOnClick);
				_doc.attachEvent('onscroll', fnDocOnClick)
			}
			
		
			//now load RTE icons!
			$(".postLoadIMG").each(function() {   
		  		$(this).attr('src', $(this).attr('data-url'));
			});  
			

			//now load external JS files
			//::: Google Drive -->
			var script = document.createElement('script'); 
			script.type = 'text/javascript'; 
			script.src = 'https://apis.google.com/js/api.js'; 
			document.getElementsByTagName('head')[0].appendChild(script);  
			
			//::: Dropbox JS
			script = document.createElement('script'); 
			script.type = 'text/javascript'; 
			script.src = 'https://www.dropbox.com/static/api/1/dropbox.js'; 
			script.setAttribute('id', 'dropboxjs'); 
			script.setAttribute('data-app-key', '1zebaq2b7izqwu7');
			document.getElementsByTagName('head')[0].appendChild(script); 
			
			//::: Skydrive
			script = document.createElement('script'); 
			script.type = 'text/javascript'; 
			script.src = 'https://js.live.net/v5.0/wl.js'; 
			document.getElementsByTagName('head')[0].appendChild(script); 
			
			//::: Box.com
			script = document.createElement('script'); 
			script.type = 'text/javascript'; 
			script.src = 'https://app.box.com/js/static/select.js'; 
			document.getElementsByTagName('head')[0].appendChild(script);
			
			//::: Load Feather code - IMG EDIT TOOL
			script = document.createElement('script'); 
			script.type = 'text/javascript'; 
			//script.src = 'https://feather.aviary.com/js/feather.js';
			//script.src = m_sCDNURL + 'cdn-feather_2.js'; 
			script.src = 'https://dme0ih8comzn4.cloudfront.net/js/feather.js'
			
			script.onload = function() {
	  			fnInitFeatherEditor();
			};
			document.getElementsByTagName('head')[0].appendChild(script); 
			/////////////////
			
		}, 1000); // <-- time in milliseconds
		
		

		
		//$( "#raptor-wrapper" ).draggable();

	}

	var m_bFullScreen = false;
	
	function fnRTEXCloseX(e)
	{
		e.preventDefault();
		fnRTEXClose();
		
	
	}
	
	function fnRTEHeaderClick()
	{
		fnRTEMinimize();
	
	}

    //:::::::
	//:::::::	
	function fnResizeRTE()
	{
		var m_ClientHeight = $(window).height();
		var m_ClientWidth = $(window).width();
		
		var iRTETop = 80;
		var iRTELeft= 130;
		
		var iRTEHeight = m_ClientHeight - (iRTETop * 2);
		var iRTEWidth  = m_ClientWidth - (iRTELeft * 2);


		
		
		if (m_bFullScreen)
		{
			
			$('#raptor-wrapper').offset({ top: iRTETop, left: iRTELeft });
			
			
			$('#raptor-wrapper').width(iRTEWidth);
			$('#raptor-wrapper').height(iRTEHeight);
			
			var iRTEIframeHeight = $('#raptor-wrapper').height() - ( $('#RTE_Header').height() +  $('#rteToolbar').height() + $('#RTE_BActions').height() )
			
			$('#RichEditIFrameID').height(iRTEIframeHeight);
			$('#rte_ToCc').width( iRTEWidth - 10);
		
		}
		else
		{
			iRTEHeight = '';
			iRTEWidth  = 630;

			$('#raptor-wrapper').height('');
			$('#raptor-wrapper').width(iRTEWidth);
			
			var iRichEditIFrameIDHeight = 400;
			if (m_ClientHeight < 700)
			{
				if (m_ClientHeight < 470)
				{
					if (m_ClientHeight < 400)
					{
						if (m_ClientHeight < 300)
							iRichEditIFrameIDHeight = 100;
						else
							iRichEditIFrameIDHeight = 150;
					}
					else
						iRichEditIFrameIDHeight = 200;
				}
				else
					iRichEditIFrameIDHeight = 250;
			}
			
			$('#RichEditIFrameID').height(iRichEditIFrameIDHeight);
			
			$('#rte_ToCc').width( iRTEWidth - 10);
			
			var iRTE_height= parseInt(document.getElementById('raptor-wrapper').offsetHeight);
			var iRTE_width = parseInt(document.getElementById('raptor-wrapper').offsetWidth);

		
			var xy = YAHOO.util.Dom.getXY('raptor-wrapper');
			xy[0] = parseInt(m_ClientWidth - iRTE_width) - 35 ; 
			xy[1] = parseInt(m_ClientHeight - iRTE_height) - 18;
			YAHOO.util.Dom.setXY('raptor-wrapper', xy);
		}
		
		xy = YAHOO.util.Dom.getXY('btnAttach');
		//xy[0] = parseInt(m_ClientWidth - iRTE_width) - 10 ; 
		//xy[1] = parseInt(m_ClientHeight - iRTE_height) - 10;
		YAHOO.util.Dom.setXY('uploaderOverlay', xy);
		
		//rte_Actionstatus
		document.getElementById("rte_Actionstatus").style.display = "block";
		xy = YAHOO.util.Dom.getXY('btnSendMail');
		xy[0] -= 1 ; 
		xy[1] -= 53;
		YAHOO.util.Dom.setXY('rte_Actionstatus', xy);
		
		//::: Set To width
		fnREsizeRTEInput();

	}
	

    //:::::::
	//:::::::
	function fnShowQuickRTE(bShow)
	{
		if (mRTEOpen)
			bShow = false;
			
		if (bShow)
		{
			$('#rte_QuickT').html('');
			$('#RTE_QuickBActions').height('');
			$('#rte_QuickT').height('');

			msUploaderApp = 'composer';
			mbDropMode = false;
			fnResizeQuickRTE()
			
			//$("#Quickraptor-wrapper").css( "visibility", "visible" );
			
			//QComposer('n');
			fnRTEClose();
			
			if (document.getElementById("Quickraptor-wrapper").style.visibility == "hidden")
			{
				clearTimeout(m_tQuickReplyWrapper);
				$("#Quickraptor-wrapper").fadeIn(0)
				$("#Quickraptor-wrapper").css('visibility','visible').hide().fadeIn(300);
	
			}
			
			
			
			try {
					
					var sMessage = mcLang.Text('lang_mfilter_45',1);
					sMessage = sMessage.replace(/__XXEmailXX__/gi, messages.from_email);
					
					$('#btnQuickSendMail').prop('title', sMessage );					
					
			}
			catch (x) {
					$('#btnQuickSendMail').prop('title', 'Send reply now');
			}

				
			mQuickRTEOpen = true;
		}
		else
		{
			clearTimeout(m_tQuickReplyWrapper);
			$("#Quickraptor-wrapper").css( "visibility", "hidden" );
			mQuickRTEOpen = false;
		}
	}

    //:::::::
	//:::::::	
	function fnCloseQuickRTE()
	{
		if (mQuickRTEOpen)
		{
			mQuickRTEKeepAttach = false;
			fnShowQuickRTE(false);
			fnRTEClose();
			
			$('#rte_QuickT').html('');
			$('#RTE_QuickBActions').height('');
			$('#rte_QuickT').height('');
		}
	
	}   
 

    //:::::::
	//:::::::	
	function fnResizeQuickRTE()  
	{
		var m_ClientHeight = $(window).height();
		var m_ClientWidth = $(window).width();
				
		var H = $("#rte_QuickT")[0].scrollHeight;		
		//$('#Quickraptor-wrapper').height(H + 5);
		
		$('#rte_QuickTP').height(H);

		
				
		iRTEHeight = $('#Quickraptor-wrapper').height();
		iRTEWidth  = $('#Quickraptor-wrapper').width();
		
		//var position = $('#Quickraptor-wrapper').position();
		//$("#mydiv").css({top: 200, left: 200, position:'absolute'});

		var xy = YAHOO.util.Dom.getXY('Quickraptor-wrapper');
		xy[0] = parseInt(m_ClientWidth - iRTEWidth) - 37 ; 
		xy[1] = parseInt(m_ClientHeight - iRTEHeight) - 20;
		YAHOO.util.Dom.setXY('Quickraptor-wrapper', xy);
		
		//rte_Actionstatus
		document.getElementById("rte_Actionstatus").style.display = "block";
		xy = YAHOO.util.Dom.getXY('Quickraptor-wrapper');
		xy2 = YAHOO.util.Dom.getXY('btnQuickSendMail');
		xy[0] = xy2[0] - 1 ; 
		xy[1] -= 43;
		YAHOO.util.Dom.setXY('rte_Actionstatus', xy);
	}

	//:::::::
	//:::::::	
	function fnTimeResizeQuickRTE() 
	{
		fnResizeQuickRTE()
		//setTimeout(function(){ fnResizeQuickRTE(); }, 1000);
	}

	//:::::::
	//:::::::
	function fnQuickRTESend()
	{
		mRTEMsgGUID = '';
		mRTEMsgAction = 'r';

	  	//account is disabled?
	  	if ( sendingdisabled == 'True' )
	  	{
	  		UpdateInboxAlert('<span style="color:red">The Compose feature of your account has been disabled due to a suspected spam activity.  Contact Support to reactivate this feature.</span>', '');
	  		return
	  	}
	  	
	  	var sQuickReplyMsg = trim( $('#rte_QuickT').html() + '' );
	  	if ( sQuickReplyMsg.length < 1 )
	  	{
	  		UpdateInboxAlert(mcLang.Text('lang_mfilter_44',1), '');
	  		return;
	  	}
	  	
	  	//sQuickReplyMsg = sQuickReplyMsg.replace(/\n/g, "<br/>")

	  	if (uploadDone == false)
	  	{
			//prompt user for  action...
			if ( fnYUIPrompt(mcLang.Text('lang_mail_77',1), mcLang.Text('lang_mail_74',1), mcLang.Text('lang_mail_75',1), 'message icon-bubble', fnQuickRTESend, arguments) )
				return;
	  	}
	  	
	  	sQuickReplyMsg = '<div style="white-space: pre-wrap">' + sQuickReplyMsg + '</div>'
	  				
		var l_sSubject = htmlDecode(messages.subject);
		var sHTMLBODYValue = messages.body;
		var sOrigFrom = messages.from_email;
		var sOrigToEmail = messages.to_email;
		var sOrigCCEmail = messages.cc_email;
		var sOrigBCCEmail = messages.bcc_email;
		var sCurrentUserEmail = m_sUsername + '@' + m_sDomain;
		var sFrom = sCurrentUserEmail;
		var sFromName = messages.from;
		var sFromEmail = messages.from_email;
		var xml_Sent = messages.received;
		var xml_MsgToEmail = messages.to_email;
		var xml_CCEmail = "";
		var sReceivedDate_full = messages.received_full;
		var oCCA = messages.cc_email;
		if (oCCA) {
			xml_CCEmail = messages.cc_email;
		}
		
		var xml_OriginalSubject = messages.subject;
		var bIncMsg = true;
		var bShowHeaders = true;
				    
		$('#divRTETitleMin').html(htmlEncode(l_sSubject));
		$('#divRTETitle').html(htmlEncode(l_sSubject));
		
		document.getElementById('FolderIDs').value = '';
		document.getElementById('AllFiles').value = ''; 
			    	
		mRTEMsgGUID = m_MSGID;
		mCurrentSavedDraftGUID = '';
				    
		sSubject = addSubjPrefix("Re:", l_sSubject);
		sBody 	 = FormatMsgBody(sFromName, sFromEmail, sReceivedDate_full, xml_MsgToEmail, xml_CCEmail, xml_OriginalSubject, sHTMLBODYValue, bIncMsg, bShowHeaders);
		sBody = '<p style="margin-top:2px; margin-bottom:2px"><br/>' + sQuickReplyMsg  + '</p>' + sBody ;
								
		///////////////////////////
		/*  	
  		//Detect the word 'attached' in the message body and alert the user if no attachments found
		if (m_iTotalQAttach == 0)
  			if ( fnCheckForAttachedWords() )
  			{
				//prompt user for  action...
				if ( fnYUIPrompt(mcLang.Text('lang_mail_76',1), mcLang.Text('lang_mail_74',1), mcLang.Text('lang_mail_75',1), 'message icon-bubble', fnRTESend, arguments) )
					return;
		
  			}
		*/
	
		//****** Attach
		fnGetUploadedAttach();
								
		var buffer = '';
			buffer += 'save_draft=';
			buffer += '&KeepSavedDraft=true';		
			buffer += '&Send_mail=' + encodeURI('- Send Mail -') ; 	//Send_mail
			buffer += '&RichTextFormat=true';  						//RichTextFormat
			buffer += '&mail_as_HTML=true'; 						//Mail_as_HTML
			buffer += '&xml_Priorities=' + mRTEPriority;
			buffer += '&SavedDraftGUID=';
			buffer += '&multilingual=false';
			buffer += '&faction=none';
			buffer += '&AllFiles=' + encodeURI(document.getElementById('AllFiles').value);
			buffer += '&FolderIDs=' + encodeURI(document.getElementById('FolderIDs').value);
			buffer += '&mail_request_receipt=false'; //ckbRequestReceipt
            buffer += '&mail_delivery_receipt=false'; //ckbDeliveryReceipt
			buffer += '&sMsgId=' + encodeURI(m_MSGID);
			buffer += '&sAction=' + mRTEMsgAction;
			buffer += '&mail_save_message=true';
			buffer += '&xml_Bcc=';
			buffer += '&xml_Cc=';
			buffer += '&xml_To=' + encodeURIComponent(sOrigFrom);
			buffer += '&xml_From=' + encodeURIComponent(document.getElementById("xml_From").value);
			buffer += '&xml_Subject=' + encodeURIComponent(sSubject);
			buffer += '&xml_Subject3=' + Base64.encode(l_sSubject);
			buffer += '&xml_TextBody=' + encodeURIComponent(sBody);
		
		UpdateInboxAlert(mcLang.Text('lang_mail_95',1), '1359077142_info_16.png');
		m_bSendingMail = true;
				
		fnCloseQuickRTE();
				
		sLogBuffer = '?newcom=true';
		
		$.ajax({
	     type: "post",
	     url: '../../mail/mail_send.asp' + sLogBuffer,
	     data: buffer,  
	     success: function(data) {
	       
				if (data.length > 0)
				{
					arrResponse  = data.split('|');
					///////
					if ( (arrResponse[0] == '0') && (arrResponse.length > 1) )
					{
						sSavedDraftGUID = arrResponse[1];
						///////
						if (sSavedDraftGUID.length == 36)
						{
							var obj_callback = new clsAjaxcallback();    
				        	obj_callback.Ajaxcallback.success = fAJAXDraftsDeletedResponse;
							var sURL = '../../mail/mail_action.asp?Action=15&MsgIDs=' + sSavedDraftGUID + '|';
				        	makeRequest(sURL, obj_callback.Ajaxcallback); 
				        	
				        	m_bSendingMail = false;
							if ( v_sFolder.toLowerCase() == '/sent items' ) 
								NextPrevPage(CurentPage);
						}
						///////
					}
					///////
				
				}
				
			}
	   });
	   
	   
		//set new reply/forward flag
		if ( ( mRTEMsgAction != 'n' ) && ( $('div[msgid*="' + mRTEMsgGUID + '"]').length ) )
		{
			var objMsgRow = $('div[msgid*="' + mRTEMsgGUID + '"]');
			var f_sIndex = $(objMsgRow).attr('cindex');
	
			var msgico = document.getElementById(("Ico" + f_sIndex)).src.toLowerCase();
			var sNewico = '';
			if ( msgico.indexOf('/rf.png') == -1)
			{
		        switch (mRTEMsgAction) 
		        {
		            case 'r':   
		            case 'rall':
		            	if ( msgico.indexOf('/F.png') != -1)
		            		sNewico = 'RF.png';
		            	else
		            		sNewico = 'R.png';
						        break;
		            case 'f':   

		            	if ( msgico.indexOf('/R.png') != -1)
		            		sNewico = 'RF.png';
		            	else
		            		sNewico = 'F.png';
		        }
		        document.getElementById(("Ico" + f_sIndex)).src = m_sRessIMGURL + sNewico;
	        } 
		}
		///////
	   

	}


    //:::::::
	//:::::::	
	function fnREsizeRTEInput()
	{
	
		//if (document.getElementById('rte_subject').value.length > 3)
		// 	$("#rteAutoremoveallSubject").fadeIn(800); 
		// else
		// 	$("#rteAutoremoveallSubject").fadeOut(800);

		
		//Subject
		iSubjectRowWidth = $('#rte_subjectRow').outerWidth() - 13;
		iSubjectBoxWidth = iSubjectRowWidth - $('#rteSubjectTxt').outerWidth();
		$('#rteSubjectBox').width(iSubjectBoxWidth);
		iSubjectInputWidth = iSubjectBoxWidth - $('#aRTEPriority').outerWidth() - 14;
		$('#rte_subject').width(iSubjectInputWidth);

		
		//**
		SubjectXY = YAHOO.util.Dom.getXY('rte_subject');
		var irtSubject_width =  $("#rte_subject").width()
		
		 //::: Set To width
		iCcBoxWidth = iSubjectRowWidth - $('#rte_ToTxt').outerWidth();
		$('#rtEmaillistTo').width(iCcBoxWidth);

		 YAHOO.util.Dom.setStyle('rte_to', 'width', ("50px"));
		 xy  = YAHOO.util.Dom.getXY('rte_to');
		 var New_rte_to_Width = irtSubject_width - ( xy[0] - SubjectXY[0] ) +40; 
		 New_rte_to_Width -= $("#AddCcBccSpan").width(); //Bcc Cc links    
		 YAHOO.util.Dom.setStyle('rte_to', 'width', (New_rte_to_Width + "px"));


		 
		 //::: Set Cc width
		 iCcBoxWidth = iSubjectRowWidth - $('#rte_ccTxt').outerWidth();
		$('#rtEmaillistCc').width(iCcBoxWidth);
		 YAHOO.util.Dom.setStyle('rte_cc', 'width', ("50px"));
		 xy  = YAHOO.util.Dom.getXY('rte_cc');
		 var New_rte_cc_Width = irtSubject_width - ( xy[0] - SubjectXY[0] ) + 40; 
		 YAHOO.util.Dom.setStyle('rte_cc', 'width', (New_rte_cc_Width + "px"));
		 
		 //::: Set Bcc width 
		iBccBoxWidth = iSubjectRowWidth - $('#rte_bccTxt').outerWidth();
		$('#rtEmaillistBcc').width(iBccBoxWidth);
		 YAHOO.util.Dom.setStyle('rte_bcc', 'width', ("50px"));
		 xy  = YAHOO.util.Dom.getXY('rte_bcc');
		 var New_rte_bcc_Width = irtSubject_width - ( xy[0] - SubjectXY[0] ) +40; 
		 YAHOO.util.Dom.setStyle('rte_bcc', 'width', (New_rte_bcc_Width + "px"));

		/*
		 if ( $("#rtEmaillistTo > div").size() > 2)
		 	$("#rteAutoremoveallTo").fadeIn(800); 
		 else
		 	$("#rteAutoremoveallTo").fadeOut(800);
		 	
		if ( $("#rtEmaillistCc > div").size() > 2)
		 	$("#rteAutoremoveallCc").fadeIn(800);
		 else
		 	$("#rteAutoremoveallCc").fadeOut(800);

		 if ( $("#rtEmaillistBcc > div").size() > 2)
		 	$("#rteAutoremoveallBcc").fadeIn(800);
		 else
		 	$("#rteAutoremoveallBcc").fadeOut(800);
		 	*/
		 
		 if ( ($.browser.name != "firefox") && ($.browser.name != "chrome") )
		 {

		 	YAHOO.util.Dom.setStyle('rte_to', 'padding-top', ("8px"));
		 	YAHOO.util.Dom.setStyle('rte_cc', 'padding-top', ("8px"));
		 	YAHOO.util.Dom.setStyle('rte_bcc', 'padding-top', ("8px"));
		 }
		 

	}

    //:::::::
	//:::::::	
	function fnShowAttachCount()
	{
	
		if (mbDropMode == true)
			return;
	
		document.getElementById("rte_attach").style.display = "block";
		if (m_iTotalQAttach  >= 1)
		{	    
			if (m_iTotalQAttach > 1)
				document.getElementById("spanAttachCount").innerHTML = m_iTotalQAttach + ' ' + m_sAttachments + ' &nbsp;' + ShowFileSize(m_iTotalQAttachSize) + '&nbsp;';
			else
				document.getElementById("spanAttachCount").innerHTML = m_iTotalQAttach + ' ' + m_sOneAttachment + ' &nbsp;' + ShowFileSize(m_iTotalQAttachSize) + '&nbsp;';
				
			document.getElementById("rte_attach").style.display = "block";
	
		}
		else
			document.getElementById("rte_attach").style.display = "none";
	}
	
	function fnRTEXClose()
	{
		fnDocOnClick();
		if ( mRTEOpen )
		{	
		
			if ( fnReadCookie('M2W1', 'CancelMessageQuery', true) == '0')
			{
				fnRTEClose();
			}
		
			//check if the RTE is empty first
			if (!fnIsRTEEmpty())
			{			
				//prompt user for  action...
				if ( fnYUIPromptComposer(mcLang.Text('lang_mail_85',1), mcLang.Text('lang_mail_86',1), mcLang.Text('lang_mail_87',1), 'message icon-bubble', fnRTEClose, []) )
					return;
			}
		}
	

		fnRTEClose();
	
	}

    //:::::::
	//:::::::
	function fnRTEClose()
	{	
	
		//var myName = arguments.callee.toString();
    	//myName = myName.substr('function '.length);
    	//myName = myName.substr(0, myName.indexOf('('));
    	//alert(myName);
    	
    	m_bRTEUpdate = false;
    	
    	m_bManualPriority = false;
    	
		mSavedDraftCloseRTE = false;
		fnSetUpUploaderBtn(false);
		document.getElementById("main_form").reset();
		document.getElementById("raptor-wrapper").style.visibility = "hidden";
		document.getElementById("rte_Minimize").style.visibility = "hidden";
		
		document.getElementById("rte_attach").style.display = "none";
		document.getElementById("rte_Actionstatus").style.display = "none";
		document.getElementById("uploaderOverlay").style.visibility = "hidden";
		
		$('#divRTETitleMin').html(mcLang.Text('lang_mail_70',1));
		$('#divRTETitle').html(mcLang.Text('lang_mail_70',1));
		
		//reset translate from opt
		$('#rdbRTETranslate' + 0).prop( "checked", true);
		
		$('#ckbRequestReceipt').prop("checked", false);
        $('#ckbDeliveryReceipt').prop("checked", false);

		
		$('#spanAlias').html(m_sUsername + '@' + m_sDomain);
		
		$.ajax({
	     type: "GET",
	     url: '../../app/Alias_api.asp',
	     data: '',
	     success: function(data) {
	        
				if ( data.length > 5 )
				{
					$('#mRTEAlias').html(data);
					document.getElementById("rtEmaillistFromRow").style.display = "";
				} 
				else
					document.getElementById("rtEmaillistFromRow").style.display = "none";
					
				fnResizeRTE();
			}
	   });

		
		mRTEOpen = false;
		
		//reset full-screen
		if (m_bFullScreen)
		{		
				$( "#raptor-wrapper" ).removeClass( "MsgpreFullscreen" );
				$( "#raptor-wrapper" ).addClass( "RTEShadowbox" );
		}
		m_bFullScreen = false;
		$('#rte_fullscreen').attr('src', m_sRessIMGURL + 'fullscreen.png');
		$("#raptor-wrapper-fullscreen").css( "display", "none" );
		

		fnUpdateRTEText('');
		
		mCurrentSavedDraftGUID = '';
		mSavedDraftBusy = false;
		
		fnRTEPriority('1');
		mRTEPriority = 1;
		document.getElementById("xml_Priorities").value = '1';
				
		fnCloseSpellCheck();
		ResetToEmails();		
		ResetAttach();
		
		fnREsizeRTEInput();
		fnResizeRTE();
		
		window.clearTimeout(m_AutoSaveDraftTimeID);
	}


    //:::::::
	//:::::::	
	function fnRTEMinimize()
	{
		fnDocOnClick();
		
		var m_ClientHeight = YAHOO.util.Dom.getClientHeight();
		var m_ClientWidth = YAHOO.util.Dom.getClientWidth();
		
		var iRTE_height= parseInt(document.getElementById('rte_Minimize').offsetHeight);
		var iRTE_width = parseInt(document.getElementById('rte_Minimize').offsetWidth);

		var xy = YAHOO.util.Dom.getXY('rte_Minimize');
		xy[0] = parseInt(m_ClientWidth - iRTE_width) - 10 ; 
		xy[1] = parseInt(m_ClientHeight - iRTE_height) - 10;
		YAHOO.util.Dom.setXY('rte_Minimize', xy);


		fnCloseSpellCheck();

	
		document.getElementById("raptor-wrapper").style.visibility = "hidden";
		document.getElementById("rte_Minimize").style.visibility = "visible";
		document.getElementById("rte_Actionstatus").style.display = "none";
		
		//m_bFullScreen = true;
		//$('#rte_fullscreen').attr('src', m_sRessIMGURL + 'fullscreen.png');
		$("#raptor-wrapper-fullscreen").css( "display", "none" );
		
		
		if (m_bFullScreen)
		{		
				m_bFullScreen = true;
				$('#rte_min_fullscreen').attr('src', m_sRessIMGURL + 'exit_fullscreen.png');
				$('#rte_min_fullscreen').attr('title', m_sCloseFullView);
		}
		else
		{
			m_bFullScreen = false;
			$('#rte_min_fullscreen').attr('src', m_sRessIMGURL + 'fullscreen.png');
			$('#rte_min_fullscreen').attr('title', m_sOpenFullView);
		}

	}
	
    //:::::::
	//:::::::
	function fnRTEMaximize()
	{	
		fnDocOnClick();
		document.getElementById("raptor-wrapper").style.visibility = "visible";
		document.getElementById("rte_Minimize").style.visibility = "hidden";
		document.getElementById("rte_Actionstatus").style.display = "block";
	}
	
    //:::::::
	//:::::::
	function fnShowAttachList()
	{
		fnDocOnClick();
		fnShowAttachCount();
		var xy = YAHOO.util.Dom.getXY('rte_attach');

		
		if (msUploaderApp == 'composer')
		{
			$('#mAttahcMenu').css('max-height', ( $(window).height() - 190 ) + 'px');
			
			fnShowPOPOpt('rte_attach', 'mAttahcMenu', 0,0);
			var iAttachlist_height = parseInt(document.getElementById('mAttahcMenu').offsetHeight);
			xy = YAHOO.util.Dom.getXY('mPOPOpt');
			xy[1] -= (iAttachlist_height + 51) ;
			YAHOO.util.Dom.setXY('mPOPOpt', xy);
		}
		
	}
	
	function fnOpenShareMenu()
	{
	
		var xy = YAHOO.util.Dom.getXY('btnRTEShareMenu');
		fnShowPOPOpt('btnRTEShareMenu', 'mRTEShare', 0,0);
		
		var iAttachlist_height = parseInt(document.getElementById('mRTEShare').offsetHeight);
		
		xy = YAHOO.util.Dom.getXY('mPOPOpt');
		//xy[1] -= (iAttachlist_height + 220) ;
		xy[1] -= (iAttachlist_height + 160) ;
		
		YAHOO.util.Dom.setXY('mPOPOpt', xy);
	}


	function fnUserMenu()
	{
		//webpush
		g_fIniWEbPush();
		//
				
	
		if (mSkinUI == 'telmex')
			fnShowPOPOpt('usermenuarrow', 'mUserOptMenu',-195,0);
		else
		{
			fnShowPOPOpt('usermenuarrow', 'mUserOptMenu',-195,-6);
		}
	
			
	}
	
		// ************** DESKTOP NOTIFIER JS CODE STARTS ************** 

	  
	function fnWebNotifications()
	{
	
		g_bPushMenuClk = true;
	
		if ( fnWebPushPermission() == false )
		{
			fnWebPush_RegisterPush();
			return;
		}
		
		if ( fnWebPushSubscribed() )
		{
			fnWebPush_Unsubscribe();
		}
		else
		{
			fnWebPush_Subscribe();
		}
		  
	}

	
	
	function fnSettingsMenu()
	{
	
		if (mSkinUI == 'telmex')
			fnShowPOPOpt('settingsmenuarrow', 'mSettingsOptMenu',-195,0);
		else
			fnShowPOPOpt('settingsmenuarrow', 'mSettingsOptMenu',-195,-6);

	 
	}


	function fnRTEFontSizePicker(sBtn)
	{
		
			document.getElementById(m_iframeId).contentWindow.focus();
			if (document.selection)
        	{
		    	m_selection = document.getElementById('rte_QuickT').contentWindow.document.selection.createRange();
		    	document.getElementById(m_iframeId).contentWindow.document.body.focus();
        	}

		fnShowPOPOpt(sBtn, 'mRTEFontSizePicker', 0,5);
		
	}


	function fnRTEEmoticonPicker(sBtn)
	{

		if ( sBtn == "btnQuickRTEEmoticon")
			fnShowPOPOpt(sBtn, 'mRTEEmoticonPicker', 0,-440);
		else
			fnShowPOPOpt(sBtn, 'mRTEEmoticonPicker', -370,5); 
		
		if (mEmoticonCalled == false)
		{
		 	$('#SmallTabHTML0').css( "display", "block" ); 

		 	$.ajax({
			     type: "GET",
			     url: '../../app/ress/emotico.asp?v=2',
			     data: "",
			     success: function(data) {
						var aEmoticonHTML = data.split("::::|||::::::");
						$('#SmallTabHTML0').html(aEmoticonHTML[0]);
						$('#SmallTabHTML1').html(aEmoticonHTML[1]);
						$('#SmallTabHTML2').html(aEmoticonHTML[2]); 
						mEmoticonCalled = true;
					}
			   });

		}
		
	}
	
	function fnQuickRTMoreAct(iAction)
	{
		var sQuickReplyMsg = trim( $('#rte_QuickT').html() + '' );
		mQuickRTEKeepAttach = true;
	
        switch (iAction) 
        {
            case 0:   
            		QComposer('rall');
            		fnSwitchQuickRTETXT(sQuickReplyMsg)
					break;
            case 1:   
					QComposer('f');
					fnSwitchQuickRTETXT(sQuickReplyMsg)
					break;
    				    
            case 2:   
					QComposer('r');
					fnSwitchQuickRTETXT(sQuickReplyMsg)
					break;

            case 4:   
					QComposer('r');
					fnSwitchQuickRTETXT(sQuickReplyMsg);
					fnSpellCheck();
					break;
				        
            case 3:   
					fnCloseQuickRTE();
					break;
				        
        }
        
        mQuickRTEKeepAttach = false;
	
	
	}
	
	
	function fnSwitchQuickRTETXT(sQuickReplyMsg)
	{
	  	if ( sQuickReplyMsg.length < 1 )
	  	{
	  		return;
	  	}

		sMsgBody = $('#RichEditIFrameID').contents().find('body').html();
		sMsgBody = sMsgBody.split('<div origmsg="yes"></div>');
		if ( sMsgBody.length > 1 )
			sMsgBody = sQuickReplyMsg + '<br><br><br><div origmsg="yes"></div>' + sMsgBody[1];
		else
			sMsgBody = sQuickReplyMsg;
				
		$('#RichEditIFrameID').contents().find('body').html(sMsgBody);
	}
	
	function fnQuickResponsesPicker(sBtn)
	{
		var QRMenuWidth = $('#mQuickResponsesMenu').width();
		var QRMenuHeight = $('#mQuickResponsesMenu').height();
		
		QRMenuWidth += 1;
		QRMenuHeight += 73;

	
		fnShowPOPOpt(sBtn, 'mQuickResponsesMenu', (QRMenuWidth * -1), (QRMenuHeight * -1) );
	}

	function fnQuickRTMenuOpt(sBtn)
	{
		var QRMenuWidth = $('#mQuickRTMenuOpt').width();
		var QRMenuHeight = $('#mQuickRTMenuOpt').height();
				
		QRMenuWidth += 1;
		QRMenuHeight += 73;
		fnShowPOPOpt(sBtn, 'mQuickRTMenuOpt', (QRMenuWidth * -1), (QRMenuHeight * -1) );
	}
	
	function fnQuickResponseNew()
	{
		$("#sGRDMTNEWTxtBox").val('');
		$("#sGRDMTNEW").css( "display", "none" );
		$("#sGRDMTNEWTxt").css( "display", "" );
		$("#sGRDMTNEWTxtBox").focus()

	}
	
	
	function fnQuickResponsesPickerInt()
	{
		$("#sGRDMTNEW").css( "display", "" );
		$("#sGRDMTNEWTxt").css( "display", "none" );
		var sNewResponse = $("#sGRDMTNEWTxtBox").val();
		
		if ( bQuickResponseInt == false)
		{
			var sHTMLResponse  = fnSotrageLoad_QuickResponses();
			if ( sHTMLResponse.length > 20  )
			{
					$("#divCustomResponses").css( "display", "" );
				 	$( "#MSLineCustomResponses" ).after(sHTMLResponse);
			}
			bQuickResponseInt =  true;
		}
	}
	 

	function fnQRTREsponseAdd(ObjTXT, evt)
	{

		evt = (evt) ? evt : event;
		var charCode = (evt.charCode) ? evt.charCode :
			((evt.which) ? evt.which : evt.keyCode);
		
		//enter
		if (charCode == 13) {
			
			//fnDocOnClick(); 
			$("#sGRDMTNEW").css( "display", "" ); 
			$("#sGRDMTNEWTxt").css( "display", "none" );
			var sNewResponse = $("#sGRDMTNEWTxtBox").val();
			var oDate = new Date();  fnRemoveEmail
			var sID = oDate.getMilliseconds() + oDate.getMinutes() + oDate.getHours();
			var sHTMLResponse = '';

			if ( fnTrim(sNewResponse).length >= 2 )
			{
				$("#divCustomResponses").css( "display", "" );
			 	$( "#MSLineCustomResponses" ).after('<a href="JavaScript:fnQuickResponses(' + sID + ')"  class="menulink">&nbsp;<span id="sGRDMT' + sID + '">' + sNewResponse + '</span><span style="float:right; height:20px" onclick="fnRTREponseRemove(' + sID + ', event);"><img class="postLoadIMG" src="' + m_sRessIMGURL + 'close_16.png"  title="Remove"  style="height:16px; width:16px; cursor:pointer;"></span></a>');

				var arrResponses = $("#divCustomResponses").children('a');
				for (var i=0; i < arrResponses.length; i++ )
				{
					sHTMLResponse += GetouterHTML(arrResponses[i]);
				}
				
				fnSotrageSave_QuickResponses(sHTMLResponse);
			 }
			 
			 $("#sGRDMTNEWTxtBox").val('');
			 fnQuickResponsesPicker('btnQuickResponses');
			 fnQuickResponsesPicker('btnQuickResponses');
			
		}	
	
	}


	function fnRTREponseRemove(iID, evt)
	{
		evt.preventDefault();
		$(('#sGRDMT'+ iID)).parent().remove();
	
		var sHTMLResponse = '';		
		
		if ( $('#divCustomResponses').children().length == 1)
		{
			$("#divCustomResponses").css( "display", "none" );
		}
		else
		{
				var arrResponses = $("#divCustomResponses").children('a');
				for (var i=0; i < arrResponses.length; i++ )
				{
					sHTMLResponse += GetouterHTML(arrResponses[i]);
				}
		}
		fnSotrageSave_QuickResponses(sHTMLResponse);
		
		fnQuickResponsesPicker('btnQuickResponses');
		fnQuickResponsesPicker('btnQuickResponses');
	}


	function fnEmoticontabs(iTabIndex)
	{
		mPOPOptLastVisablesMenuID = null;
		
		 
		
		if (mQuickRTEOpen)
			fnShowPOPOpt('btnQuickRTEEmoticon', 'mRTEEmoticonPicker', 0,-440);
		else
			fnShowPOPOpt('btnRTEEmoticon', 'mRTEEmoticonPicker', -370,5);
		
		//document.getElementById("mPOPOpt").style.visibility= "visible"; 
		//document.getElementById('mRTEEmoticonPicker').style.display = "";

		$('#SmallTabHTML0').css( "display", "none" );
		$('#SmallTabHTML1').css( "display", "none" );
		$('#SmallTabHTML2').css( "display", "none" );
		
		$(".SmallTabSelected").removeClass("SmallTabSelected");
		$("#smallTabEmoticon" + iTabIndex).addClass("SmallTabSelected");
		$('#SmallTabHTML' + iTabIndex).css( "display", "" );
		
	}


	
	function fnRTEFontPicker(sBtn)
	{
			document.getElementById(m_iframeId).contentWindow.focus();
			if (document.selection)
        	{
		    	m_selection = document.getElementById(m_iframeId).contentWindow.document.selection.createRange();
		    	document.getElementById(m_iframeId).contentWindow.document.body.focus();
        	}
 

	
		fnShowPOPOpt(sBtn, 'mRTEFontPicker', 0,5);
	}
	
	var m_sRTEColorPickerMode = 'BackColor';
	function fnOpenColorPicker(sBtn)
	{
		
		fnShowPOPOpt(sBtn, 'mRTEColorPicker', -137,5);
		
		               
		if ( sBtn == 'btnRTEColorPickerHighlight')
			m_sRTEColorPickerMode = 'BackColor';
		else
			m_sRTEColorPickerMode = 'ForeColor';
	}
	
	//:::::::::::::
	function fnRTEChangeColor(Obj)
	{
	
		colour = $(Obj).css('backgroundColor');
		
		/*
		var range, sel;
	    if (window.getSelection) {
	        // IE9 and non-IE
	        try {
	            if (!document.execCommand(m_sRTEColorPickerMode, false, colour)) {
	                makeEditableAndHighlight(colour);
	            }
	        } catch (ex) {
	            makeEditableAndHighlight(colour)
	        }
	    } else if (document.selection && document.selection.createRange) {
	        // IE <= 8 case
	        range = document.selection.createRange();
	        range.execCommand(m_sRTEColorPickerMode, false, colour);
	    }
		*/
		
		fnSetRTEColor(colour, m_sRTEColorPickerMode)
		
	}
	
	
	//:::::::::::::
	function makeEditableAndHighlight(colour) 
	{
	    var range, sel = window.getSelection();
	    if (sel.rangeCount && sel.getRangeAt) {
	        range = sel.getRangeAt(0);
	    }
	    document.designMode = "on";
	    if (range) {
	        sel.removeAllRanges();
	        sel.addRange(range);
	    }
	    // Use HiliteColor since some browsers apply BackColor to the whole block
	    if (!document.execCommand("HiliteColor", false, colour)) {
	        document.execCommand(m_sRTEColorPickerMode, false, colour);
	    }
	    document.designMode = "off";
	}

	

    //:::::::
	//:::::::
	function fnShowRecheckspelling()
	{

		document.getElementById("rte_Recheckspelling").style.display = "block";
	}
	
	function fnMailEmptyFolder()
	{
		var sMessage = "";
		if (v_sFolder.toLowerCase() == '/deleted items')
		{
			sMessage = mcLang.Text('lang_mail_71',0);
			sMessage = sMessage.replace(/_xxbreaklinexx_/gi, "\n\n");
			sMessage = sMessage.replace(/xxFolderNamexx_/gi, mcLang.Text("tnbinbox_tab_delete",1));
			if(confirm(sMessage))
			{
				fnEmptyTrash();
				return;
			}
		}
		
		if (v_sFolder.toLowerCase() == '/junk mail')
		{
			sMessage = mcLang.Text('lang_mail_71',0);
			sMessage = sMessage.replace(/_xxbreaklinexx_/gi, "\n\n");
			
			var sFolderName = mcLang.Text("tnbinbox_tab_junk",1);
			
			if ( slang == 'en' )
				sFolderName = 'Spam';
			
			sMessage = sMessage.replace(/xxFolderNamexx_/gi, sFolderName);
			if(confirm(sMessage))
			{
				fnEmptyJunk();
				return;
			}
		}
	
	}
	
	var m_sInbox_Data = '';
	var m_aInboxLastPostData = [];
		
    //:::::::
	//:::::::
    function AC(ivalue)
    {
        //ResetTitleBar();
      
        var m_sMsgIDs = "";
        var iTotalSelected= 0;
        var sInfoMsg = "";
        var f_sBlockList = "";
        
        ////////
        for (var i=0; i < m_TotalMsgs; i++)
	    {
		    ObjBox = document.getElementById(("C" + i));
		    
            if (ObjBox == null)
	            continue;
		    
		     if (ObjBox.checked)
                iTotalSelected +=1;
	    }
	    
	    if ( iTotalSelected > 500)
	    {
	    	UpdateInboxAlert(m_sMaxMsgSelectMsg, '');
	    	return;
		} 	    
	    ////////
	    
	    //For quick undo action
	    if (iTotalSelected > 0)
	    	m_sInbox_Data = document.getElementById('Msg_Panel_Inbox_Data').innerHTML;


		iTotalSelected= 0;
        
        
        if ( (ivalue == 0) || (ivalue == 8) || (ivalue == 9)  )
        {
			if (delemessageconf != '0')
		    {
		    	inbox_confirmdelete = mcLang.Text('lang_cont_97',0);
				inbox_confirmdelete = inbox_confirmdelete.replace(/_xxbreaklinexx_/gi, "\n\n");
			    if (confirm(inbox_confirmdelete) != true)
				    return;
		    }        
        }
        
        //if move-to a folder from trash to trash?
        if (ivalue ==4 )
        {
        	v_sMoveToDirID = $('#udir' + m_iMoveToDirIndex).attr('atrdid');
			if ( ( v_sFolder.toLowerCase() == '/deleted items' )&& ( v_sMoveToDirID.toLowerCase() == '/deleted items' ) )	
			{
				ivalue = 0;	
				
				//alert users
				inbox_confirmdelete = mcLang.Text('lang_cont_97',0);
				inbox_confirmdelete = inbox_confirmdelete.replace(/_xxbreaklinexx_/gi, "\n\n");
			    if (confirm(inbox_confirmdelete) != true)
				    return;
			}

        } 
        
        for (var i=0; i < m_TotalMsgs; i++)
	    {
		    ObjBox = document.getElementById(("C" + i));
		    
            if (ObjBox == null)
	            continue;
		    
		     if (ObjBox.checked)
		     {
                ObjDiv = document.getElementById(("MDD" + i));
                
                m_sMsgIDs += "|" + ObjDiv.getAttribute("msgid");
                iTotalSelected +=1;
                //ObjBox.checked = false;
                //ObjBox.parentNode.parentNode.style.backgroundColor = "";
                
                switch (ivalue) 
			    {
				    case 0: //delete
				    
		                ObjDiv.outerHTML = "";
		                ObjDiv.style.display = "none";
				        break;
                    case 8: //delete
                    
                    	                        
		                ObjDiv.outerHTML = "";
		                ObjDiv.style.display = "none";
				        break;
                    case 2: //read
		                   YAHOO.util.Dom.setStyle(('MDD' + i), 'font-weight', 'normal');
		                   //document.getElementById(("Ico" + i)).src = m_sRessIMGURL + "t.png";
				        break;
                    case 3: //unread
							YAHOO.util.Dom.setStyle(('MDD' + i), 'font-weight', 'bold'); 
		                    //document.getElementById(("Ico" + i)).src = m_sRessIMGURL + "n.png"; 
				        break;
				    case 9: //Block and Delete
				    
				    
				        f_sBlockList += fnGetFromEmail(ObjDiv.title) + ';';
				        ObjDiv.outerHTML = "";
		                ObjDiv.style.display = "none";

                        break;
                    case 1:  //Block Only
                         f_sBlockList += fnGetFromEmail(ObjDiv.title) + ';';
				        break; 
                    case 4:  //Move to folder
                        ObjDiv.style.display = "none";
                        ObjDiv.innerHTML = "";
                        break;
                    case 10:
                        //Mark As Spam
                        ObjDiv.style.display = "none";
                        ObjDiv.innerHTML = "";
                    case 12:
                        //Not Spam
                        ObjDiv.style.display = "none";
                        ObjDiv.innerHTML = "";
				}
             }
	    }
	    
	    
	            
        //if (iTotalSelected == 0)
        //{
        //    UpdateInboxAlert( '<font color="#444646">' + mcLang.Text(select_msg_action,1) + '</font>' , '1359076646_warning_triangle.png');
        //}
        //else
        //{
        	m_aInboxLastPostData = [];
        	m_aInboxLastPostData["Action"] = ivalue;
        	m_aInboxLastPostData["folder"] = encodeURI(v_sFolder);
        	m_aInboxLastPostData["MsgIDs"] = m_sMsgIDs;
        
            f_sPostData = 'Action=' + ivalue + '&folder=' + encodeURI(v_sFolder) + '&MsgIDs=' + m_sMsgIDs;
            switch (ivalue) 
            {
                case 0: //delete
                
                	m_TotalDelMoveMsgs += iTotalSelected;
                    
                    //@@TRAN@@
                    if (iTotalSelected == 1)
                    {
                    	sInfoMsg = mcLang.Text('lang_mail_116',1);
                    	
                    	if (v_sFolder.toLowerCase() == '/deleted items')
                    	{
                    		sInfoMsg = m_sOneMsgDeleted;
                    		//we can't undo this action
                    		m_aInboxLastPostData["Action"] = -911;
                    	}
                    }
                    else
                    {
                    	sMessage = mcLang.Text('lang_mail_117',1);
						sMessage = sMessage.replace(/xxxx/gi, iTotalSelected);
                    	sInfoMsg = sMessage;
                    	
                    	if (v_sFolder.toLowerCase() == '/deleted items')
                    	{
                    	    sMessage = m_sMssgDeleted;
							sMessage = sMessage.replace(/xxxx/gi, iTotalSelected);
                    		sInfoMsg = sMessage;
                    		//we can't undo this action
                    		m_aInboxLastPostData["Action"] = -911;
                    	}
                    	
                    	
                    }
                    
                    break;
                case 8: //delete permanently
 
                    //@@TRAN@@
                    if (iTotalSelected == 1)
                    {
                    	sInfoMsg = '1 messages permanently deleted';
                    }
                    else
                    { 
                    	sInfoMsg = iTotalSelected + ' messages permanently deleted';
                    }
                   break;
                   
                case 2: //read
                
                    if (iTotalSelected == 1)
                    	sInfoMsg = mcLang.Text('lang_mail_53',1);
                    else
                    {                    
                    	sInfoMsg = mcLang.Text('lang_mail_54',1);
						sInfoMsg = sInfoMsg.replace(/xxxx/gi, iTotalSelected);
                    }
                    break;
                    
                case 3: //unread
                  
                    if (iTotalSelected == 1)
                    	sInfoMsg = mcLang.Text('lang_mail_55',1);
                    else
                    {                    
                    	sInfoMsg = mcLang.Text('lang_mail_56',1);
						sInfoMsg = sInfoMsg.replace(/xxxx/gi, iTotalSelected);
                    }
                    break;     
                    
                case 1:  //Block Only
   
					 m_aInboxLastPostData["blocksenderstring"] = f_sBlockList;
                     f_sPostData = 'Ajax=true&blocksenderstring=' + f_sBlockList;
                     AJAXCallInbox('../../options/blocksender.asp',true, f_sPostData);
                      
                     if (iTotalSelected == 1)
                    	sInfoMsg = mcLang.Text('lang_mail_51',1);
                    else
                    {                    
                    	sInfoMsg = mcLang.Text('lang_mail_52',1);
						sInfoMsg = sInfoMsg.replace(/xxxx/gi, iTotalSelected);
                    }
                    break;

    
                case 9: //Block and Delete
                
                	m_TotalDelMoveMsgs += iTotalSelected;
                	m_aInboxLastPostData["blocksenderstring"] = f_sBlockList;
                    f_sPostData = 'Ajax=true&blocksenderstring=' + f_sBlockList;
                    AJAXCallInbox('../../options/blocksender.asp',true, f_sPostData);
                    f_sPostData = 'Action=' + 0 + '&folder=' + encodeURI(v_sFolder) + '&MsgIDs=' + m_sMsgIDs;
                    
                    if (iTotalSelected == 1)
                    	sInfoMsg = mcLang.Text('lang_mail_59',1);
                    else
                    {                    
                    	sInfoMsg = mcLang.Text('lang_mail_60',1);
						sInfoMsg = sInfoMsg.replace(/xxxx/gi, iTotalSelected);
                    }
                    break;
                    
                case 4: 
                    //Move to folder  
                    
                    m_TotalDelMoveMsgs += iTotalSelected;
                    
 					//atrindex
					var v_sDirID = $('#udir' + m_iMoveToDirIndex).attr('atrdid');
					var v_sDirText = $('#dirtxt' + m_iMoveToDirIndex).attr('title');
					
					m_aInboxLastPostData["inboxmode"] = m_sInboxMode;
					m_aInboxLastPostData["folderTo"] = encodeURI(v_sDirID);
					
                    f_sPostData = 'inboxmode=' + m_sInboxMode + '&Action=' + ivalue + '&folderTo=' + encodeURI(v_sDirID) + '&MsgIDs=' + m_sMsgIDs;
                    if (iTotalSelected == 1)
                    {
                    	sInfoMsg = mcLang.Text('lang_mail_49',1);
                    	sInfoMsg = sInfoMsg.replace(/_xxfolderNamexx_/gi, v_sDirText);
                    }
                    else
                    {                    
                    	sInfoMsg = mcLang.Text('lang_mail_50',1);
						sInfoMsg = sInfoMsg.replace(/xxxx/gi, iTotalSelected);
						sInfoMsg = sInfoMsg.replace(/xxfolderNamexx/gi, v_sDirText);
                    }
                    break;   
                case 10:
                    //Mark As Spam 

                    m_TotalDelMoveMsgs += iTotalSelected;

                    m_aInboxLastPostData["inboxmode"] = m_sInboxMode;

                    f_sPostData = 'inboxmode=' + m_sInboxMode + '&Action=' + ivalue + '&MsgIDs=' + m_sMsgIDs;
                    if (iTotalSelected == 1) {
                        sInfoMsg = mcLang.Text('lang_mail_ex_2', 1);
                    }
                    else {
                        sInfoMsg = mcLang.Text('lang_mail_ex_3', 1);
                        sInfoMsg = sInfoMsg.replace(/xxxx/gi, iTotalSelected);
                    }
                    break; 
                case 12:
                    //Not Spam 

                    m_TotalDelMoveMsgs += iTotalSelected;

                    m_aInboxLastPostData["inboxmode"] = m_sInboxMode;

                    f_sPostData = 'inboxmode=' + m_sInboxMode + '&Action=' + ivalue + '&MsgIDs=' + m_sMsgIDs;
                    if (iTotalSelected == 1) {
                        sInfoMsg = mcLang.Text('lang_mail_ex_5', 1);
                    }
                    else {
                        sInfoMsg = mcLang.Text('lang_mail_ex_6', 1);
                        sInfoMsg = sInfoMsg.replace(/xxxx/gi, iTotalSelected);
                    }
                    break; 
            }
            
            m_iLastAction = ivalue;
            m_iLastSelected = iTotalSelected;
			
			//################
			//alert(f_sPostData)
            
            if (ivalue != 1)
                AJAXCallInbox('../../mail/mail_action.asp',true, f_sPostData);
            
            
			//Undo extra message action
			sInfoMsg += fnAddMUndoLink(sInfoMsg)
    
            UpdateInboxAlert(sInfoMsg, '1359077142_info_16.png');
            document.getElementById("Call").checked = false;
            fnShowInboxActions();
            
            
        //}
    }
    
    //::::::
    //::::::
    function fnAddMUndoLink(sAlertMsg)
    {
 
		var sHTML = '';    
    	switch (m_aInboxLastPostData["Action"]) 
		{
			case 0: //delete
			case 2: //read	  
			case 3: //unread   
			case 4: //Move to folder
			case 1: //Block Only
			case 9: //Block and Delete
            case 10: //Mark as spam
            case 12: //Mark as spam
				sHTML = '&nbsp;&nbsp;<a href="JavaScript:fnUndoMAction()" style="text-decoration:underline !important;  font-weight:bold">' + m_sTextUndo + '</a>'            
				break;
			default:
				m_aInboxLastPostData = [];
				m_sInbox_Data = '';
				break;
		}

    	return (sHTML);
    }
    
    //::::::
    //::::::
    function fnUndoMAction()
    {

    	var f_sPostData = '';
    	UpdateInboxAlert('Your action has been undone.', '1359077142_info_16.png');

		switch (m_aInboxLastPostData["Action"]) 
		{
			case 0: //delete
	        	m_aInboxLastPostData["Action"] = 4;
	        	sTempFolder = m_aInboxLastPostData["folder"];
	        	m_aInboxLastPostData["folder"] = encodeURI('/deleted items');
				m_aInboxLastPostData["folderTo"] = sTempFolder;
	                          
				break;
			
			case 8: //delete permanently
			 
				break;
			                
			case 2: //read
				m_aInboxLastPostData["Action"] = 3;         
				break;
			                    
			case 3: //unread
				m_aInboxLastPostData["Action"] = 2;              
				break;     
			                    
			case 1:  //Block Only
			
                    f_sPostData = 'unblocksenderstring=' + m_aInboxLastPostData["blocksenderstring"];
                    m_aInboxLastPostData = [];
                    AJAXCallInbox('../../options/unblocksender.asp',true, f_sPostData);
                    return;
			   
				break;
			    
			case 9: //Block and Delete
			
					//unblock
					f_sPostData = 'unblocksenderstring=' + m_aInboxLastPostData["blocksenderstring"];
                    AJAXCallInbox('../../options/unblocksender.asp',true, f_sPostData);
                    
                    //un-delete
                	m_aInboxLastPostData["Action"] = 4;
	        		sTempFolder = m_aInboxLastPostData["folder"];
	        		m_aInboxLastPostData["folder"] = encodeURI('/deleted items');
					m_aInboxLastPostData["folderTo"] = sTempFolder;
       
				break;
			                    
			case 4: //Move to folder
			
	        	m_aInboxLastPostData["Action"] = 4;
	        	sTempFolder = m_aInboxLastPostData["folder"];
	        	m_aInboxLastPostData["folder"] = m_aInboxLastPostData["folderTo"];
				m_aInboxLastPostData["folderTo"] = sTempFolder;
  
			                    
				break;   

            case 10: //Mark as spam

                m_aInboxLastPostData["Action"] = 11;
                sTempFolder = m_aInboxLastPostData["folder"];
                m_aInboxLastPostData["folder"] = m_aInboxLastPostData["folderTo"];
                m_aInboxLastPostData["folderTo"] = sTempFolder;
                break;

            case 12: //Not spam

                m_aInboxLastPostData["Action"] = 13;
                sTempFolder = m_aInboxLastPostData["folder"];
                m_aInboxLastPostData["folder"] = m_aInboxLastPostData["folderTo"];
                m_aInboxLastPostData["folderTo"] = sTempFolder;

                break;   
		}
  	
    	document.getElementById('Msg_Panel_Inbox_Data').innerHTML = m_sInbox_Data;
    	fnEnableDragnDrop();
    	m_sInbox_Data = '';
    	CheckBoxOpt('None');
    	
    	//post data for the Undo
    	f_sPostData = 'inboxmode=' + m_aInboxLastPostData["inboxmode"] + '&Action=' + m_aInboxLastPostData["Action"] + '&folder=' + m_aInboxLastPostData["folder"] + '&folderTo=' + m_aInboxLastPostData["folderTo"]  + '&MsgIDs=' + m_aInboxLastPostData["MsgIDs"];
    	m_aInboxLastPostData = [];
    	AJAXCallInbox('../../mail/mail_action.asp',true, f_sPostData);
    	

    	window.setTimeout("AutoCheckMailCount()",1000);

    }
    
    
    
    //::::::
    function fnCheckAutoNextPage()
    {
    	/*
    	var iPercentage = (1 / 100) * m_TotalMsgs;
    
    	if ( m_TotalDelMoveMsgs >= iPercentage )
    	{
    		if (CurentPage < m_iNumPages) 
    		{
    			m_TotalDelMoveMsgs =0;
    			NextPrevPage(CurentPage);
    		}
    	}
    	*/
    	
    	if ( m_TotalDelMoveMsgs == 0)
    		return;

    	var iNextPage = CurentPage;
    	//last page and selected all msgs?
    	if ( CurentPage == m_iNumPages )
    	{
    		if ( (m_TotalDelMoveMsgs - m_TotalMsgs) == 0 )
    		{
    			iNextPage -= 1;
    			if ( iNextPage < 1 )
    				iNextPage = 1 
    		}
    	}

    	m_bInboxAutoNextPageScroll = $('#Msg_Panel_Inbox_Data').scrollTop();

    	m_TotalDelMoveMsgs =0;
    	NextPrevPage(iNextPage);

    	
    }
   

    //::::::
    function fnGetFromEmail(sTitle)
    {
        var f_sEmail = "";
        if (sTitle.length > 5)
        {
            f_sEmail = sTitle.split('\n')[0];
            return(trim(f_sEmail));
        }
        else
            return("");
    
    }

    
    //:::::::
	//:::::::
    function AJAXCallInbox(sURL, bShowLoading, sPostData)
    {
        window.clearTimeout(m_AutoCheckTimeID);
        var obj_callback = new clsAjaxcallback();    
        obj_callback.Ajaxcallback.success = fAJAXResponse;

        if (sPostData == null)    
            makeRequest(sURL, obj_callback.Ajaxcallback); 
        else
            makePOSTRequest(sURL, obj_callback.Ajaxcallback, sPostData); 
    }
    
    //:::::::
	//:::::::
    function fAJAXResponse(o)
    {
        var sHTTPData = o.responseText; 
        if (sHTTPData == "m2w99")
        {
			sMessage = mcLang.Text('lang_Gen_19',0);
			sMessage = sMessage.replace(/_xxbreaklinexx_/gi, "\n\n");
			alert(sMessage);
            fnSignoutUser();
            return;
        }
        
        fnCheckAutoNextPage();

        fUpdateDirs(sHTTPData); 
        o = null;

        if (m_iLastAction >= 0 && m_iLastSelected > 0)
        {
            if (m_iLastAction == 0 || m_iLastAction == 8 || m_iLastAction == 4)
            {
                //if ( m_iLastSelected >= (0.5 * MsgPerPage) ) 
                //    NextPrevPage(CurentPage);
                //if (m_sInboxMode != 'search' )
                //	fnShowInbox(v_sFolder);
            }
        }
        m_iLastAction = -911;
        m_iLastSelected = -911;
        
    }




///////////////


//::::::
function fnEmptyTrash()
{
    m_bBusyEmptyTrash = true;
     
    $.ajax({
     type: "GET",
     url: '../../mail/mail_action.asp',
     data: 'Action=5&folder=' + encodeURI("/Deleted Items"), 
     success: function(data) {
        
		    m_bBusyEmptyTrash = false; 
		    
		    
		    sMessage = mcLang.Text('lang_mail_101',0);
			sMessage = sMessage.replace(/_xxFolderNamexx_/gi, mcLang.Text("tnbinbox_tab_delete",1));
		    UpdateInboxAlert(sMessage, '1359077142_info_16.png');
		    
		    fnRefreshFolders();
		    
		    document.getElementById('Msg_Panel_Inbox_Data').innerHTML = '<div class="MHEmpty">' + folders_txt_nomess + '</div>';
		    ShowPagesList(0);
		    
		   fnCloseMsg();

		} 
   });

    
}

//::::::
function fnEmptyFolder(sFolderID)
{
    m_bBusyEmptyTrash = true;
     
    $.ajax({
     type: "GET",
     url: '../../mail/mail_action.asp',
     data: 'Action=5&folder=' + encodeURI(sFolderID), 
     success: function(data) {
        
		    m_bBusyEmptyTrash = false; 
		    
		    sMessage = mcLang.Text('lang_mail_101',0);
			sMessage = sMessage.replace(/_xxFolderNamexx_/gi, '');
		    UpdateInboxAlert(sMessage, '1359077142_info_16.png');
		    
		    fnRefreshFolders();
		    
		    document.getElementById('Msg_Panel_Inbox_Data').innerHTML = '<div class="MHEmpty">' + folders_txt_nomess + '</div>';
		    ShowPagesList(0);
		    
		   fnCloseMsg();

		} 
   });

    
}


//::::::
function fnEmptyJunk()
{
    m_bBusyEmptyJunk = true;

    $.ajax({
     type: "GET",
     url: '../../mail/mail_action.asp',
     data: 'Action=6&folder=' + encodeURI("/Junk Mail"), 
     success: function(data) {
        
		    m_bBusyEmptyJunk = false;
		   	var  sFolderName = mcLang.Text("tnbinbox_tab_junk",1);
		    
		   	sMessage = mcLang.Text('lang_mail_101',0);
		   	
		   	if ( slang == 'en' )
				sFolderName = 'Spam';
	
			sMessage = sMessage.replace(/_xxFolderNamexx_/gi, sFolderName);
			
			
		    UpdateInboxAlert(sMessage, '1359077142_info_16.png');
		    
		    fnRefreshFolders();
		    
		    document.getElementById('Msg_Panel_Inbox_Data').innerHTML = '<div class="MHEmpty">' + folders_txt_nomess + '</div>';
		    ShowPagesList(0);
		    
		    fnCloseMsg();

		}
   });


}


//:::::::
//:::::::
function AutoCheckMailCount()
{
	window.clearTimeout(m_AutoCheckTimeCountID);

	var obj_callback = new clsAjaxcallback(); 
	obj_callback.Ajaxcallback.success = fAXAutoCheckMAilResponse;
	var sURL = '../../mail/mail_action.asp?Action=7';
	makeRequest(sURL, obj_callback.Ajaxcallback);

	//m_AutoCheckTimeCountID = window.setTimeout("AutoCheckMailCount()",m_AutoCheckTimeCount);
}


//:::::::
//:::::::
function fAXAutoCheckMAilResponse(o) 
{
	var sHTTPData = o.responseText;
	if (iTreashTotal == -99)
	{
		if (sHTTPData.indexOf("/Deleted Items|0|0") < 0)
			return;
		else
			 iTreashTotal = 0;
	}
	
	if (iJunkMailTotal == -99)
	{
		if (sHTTPData.indexOf("/Junk Mail|0|0") < 0)
			return;
		else
			iTreashTotal = 0;
	}
	
	fUpdateDirs(sHTTPData); 
		
}


//:::::::
//:::::::
function fUpdateDirs(v_sDirBulk)
{	

	/*
	var objpLeftFolders = document.getElementById('pgLeftFoldersID');
	var arrDirs = objpLeftFolders.getElementsByTagName('a');
	for( var i=0; i<arrDirs.length; i++)
	{
		alert(arrDirs[i].getAttribute('atrDID'));
		//alert(arrDirs[i].getElementsByTagName('span')[0].outerHTML)
		//var children = document.getElementById('id').childNodes;
	}
	*/
	
	//var objpLeftFolders = document.getElementById('pgLeftFoldersID');
	//alert(document.getElementById('/inbox').outerHTML)
	

	
	m_iTotalIncomingMsg = 0;
	m_iTotalNewMsg = 0;
	
	var sFolderID, id;
	var oArray    = v_sDirBulk.split("#@");
	var oArray2   = null;
	
	for( i=0; i < oArray.length; i++)
	{
		oArray2   = oArray[i].split("|");
		
		sFolderID = oArray2[0].toLowerCase();
		
		newItem   = parseInt(oArray2[2]);
		iCurentN  = 0;
		
		if ( (sFolderID.toLowerCase() == '/sent items') || (sFolderID.toLowerCase() == '/drafts')  ) 
			newItem = 0;

		objSPAN = document.getElementById(sFolderID);
		iCurentN = $(objSPAN).attr('title');  
		$(objSPAN).attr('title', newItem);	
	
		//444444444
		iCount = newItem/1000;
      	iCountRound = parseInt(iCount);
        	
        if (iCount >= 100)
        		iCount = "99K+";
        else
        {
        	if (iCount >= 1)
        	{
        		if  (iCount > iCountRound )
        				iCount = (iCountRound)  + "K+";
        		else
        		{
        			if  (iCountRound > iCount)
        				iCount = (iCountRound - 1)  + "K+";
        			else
        				iCount = (iCount)  + "K";	
        		}
 			}
 			else
        		iCount = newItem;
        }

		objSPAN.innerHTML = iCount;
		
		if (m_bStorageCall)
		{
			m_bStorageCall = false;
			return;
		}
	
		if (iCurentN.length > 0)
			iCurentN = parseInt(iCurentN);
		else
			iCurentN = 0;
			
		if (sFolderID == '/webs')
		{
			//alert($(objSPAN).parent().parent().html())
		}

		if (newItem > 0)
		{
			objSPAN.style.display = "";
			$(objSPAN).parent().parent().removeClass( "LeftPanelDirNew" ); 
			$(objSPAN).parent().parent().addClass( "LeftPanelDirNew" );
			
		}
		else
		{
			objSPAN.style.display = "none";
			$(objSPAN).parent().parent().removeClass( "LeftPanelDirNew" );	
		}
		
		if (  (sFolderID != '/deleted items') && (sFolderID != '/junk mail') && (sFolderID != '/sent items') && (sFolderID != '/drafts') )
			m_iTotalNewMsg += iCurentN; 
		
		//notify
		if ( (newItem > iCurentN) && (sFolderID != '/deleted items') && (sFolderID != '/junk mail') && (sFolderID != '/sent items') && (sFolderID != '/drafts') )
		{
			m_iTotalIncomingMsg += newItem - iCurentN;
		}
			 
	} 
	
	 if (m_iTotalIncomingMsg > 0)
        PageTitleNewIncoming();
	
	if (m_iTotalIncomingMsg == 0)
	    UpdatePageTitle();
}


//:::::::
//:::::::
function UpdatePageTitle()
{
	sUnreadText = mcLang.Text('lang_mail_4',0); 
	top.document.title = '(' + m_iTotalNewMsg + ' ' + sUnreadText.toLowerCase() + ') ' + ' - ' + m_sUsername + '@' + m_sDomain;
}


//:::::::
//:::::::
function fnIsRTEEmpty()
{

	//typed message?
	var sRTEBody = fnGetRTEText();
	
	if ( sRTEBody.length > m_RTEEmptyChars )
		return(false);
	
	//added subject?	
	if ( $("#rte_subject").val().length > 0 )
		return(false);

	//add to/cc/bb emails?	
	if ( irteEmailsCounter > 0 )
		return(false);
	
	//	
	if (m_iTotalQAttach  >= 1)
		return(false);

	return(true);
	
}


//:::::::
//:::::::
function fnYUIPrompt(sDialogMsg, sButton1Txt, sButton2Txt, sIconClass, callbackFn, callbackFnArguments) 
{
	if (mYUIDialog_called)
	{
		mYUIDialog_called = false;
		return(false);
	}
	
	mYUIDialog_callbackFn = callbackFn;
	mYUIDialog_callbackFnArguments = callbackFnArguments;
	mYUIDialog_called = true;
	
		YUI().use("panel", function (Y) {  // loading escape only for security on this page
	    var dialog = new Y.Panel({
	        contentBox : Y.Node.create('<div id="dialog" />'),
	        bodyContent: '<div class="message icon-bubble" style="font-family: arial, helvetica, sans-serif !important; font-size:13.5px !important; margin-left:20px; margin-right:20px"><div style=" margin-left:20px; margin-right:20px;">' + sDialogMsg + '</div></div>',
	       	zIndex     : 1001,
	        centered   : true,
	        modal      : true, // modal behavior
	        render     : '.example',
	        visible    : false, // make visible explicitly with .show()
	        buttons    : {
	            footer: [
	                {
	                    name  : 'cancel',
	                    label : sButton1Txt, //'Cancel'
	                    action: 'onCancel'
	                },
	
	                {
	                    name     : 'proceed',
	                    label    : sButton2Txt, //'OK'
	                    action   : 'onOK'
	                }
	            ]
	        }
	    });
	
	    dialog.onCancel = function (e) {
	        
	        e.preventDefault();
	        this.hide();
	        
	        // the callback is not executed, and is
	        // callback reference removed, so it won't persist
	        this.callback = false;
	        
	        mYUIDialog_called = true;
	        mYUIDialog_callbackFn.apply(this, mYUIDialog_callbackFnArguments);

			mYUIDialog_called = false;
	       	
	       	dialog.destroy();
	    };
	
	    dialog.onOK = function (e) {
	        e.preventDefault();
	        this.hide();
	        // code that executes the user confirmed action goes here
	        if(this.callback){
	           this.callback();
	        }
	        // callback reference removed, so it won't persist
	        this.callback = false;
	         mYUIDialog_called = false;
	         
	         dialog.destroy();

	    };
	    
	    

	                                             
	    // set the callback to reference a function
	    //dialog.callback = fnYUIPromptCallback; 
	    
	    dialog.show();

		Y.one('.yui3-widget-mask').setStyle('background','#fff'); 
		
	
	});
	
	return(true);

}






//:::::::
//:::::::
function fnYUIPromptOK(sDialogMsg, sButton1Txt)
{
	
	
		YUI().use("panel", function (Y) {  // loading escape only for security on this page
	    var dialog = new Y.Panel({
	        contentBox : Y.Node.create('<div id="dialog" />'),
	        bodyContent: '<div class="message icon-bubble" style="font-family: arial, helvetica, sans-serif !important; font-size:14px !important; margin-left:20px; margin-right:20px"><div style=" margin-left:20px; margin-right:20px">' + sDialogMsg + '</div></div>',
	        zIndex     : 1001,
	        centered   : true,
	        modal      : true, // modal behavior
	        render     : '.example',
	        visible    : false, // make visible explicitly with .show()
	        buttons    : {
	            footer: [
	                {
	                    name  : 'cancel',
	                    label : sButton1Txt, //'Cancel'
	                    action: 'onCancel'
	                }
	            ]
	        }
	    });
	
	    dialog.onCancel = function (e) {
	        
	        e.preventDefault();
	        this.hide();
	        
	        // the callback is not executed, and is
	        // callback reference removed, so it won't persist
	        this.callback = false;
	        
	       	dialog.destroy();
	    };
	  

	    // set the content you want in the message
	    //Y.one('#dialog .message').setHTML('<div class="message" style="font-family: arial, helvetica, sans-serif !important; font-size:14px !important"> hello ?</div>');
	    
	    // set the icon (or none) that appears next to the message.
	    // the Class 'message' also needs to be maintained.
	    //Y.one('#dialog .message').set('className', 'message icon-bubble');
	    /* classnames and images provided in the CSS are:
	        .icon-bubble
	        .icon-error
	        .icon-info
	        .icon-question
	        .icon-warn
	        .icon-success
	        .icon-none
	     */
	                                             
	    // set the callback to reference a function
	    //dialog.callback = fnYUIPromptCallback; 
	    
	    dialog.show();

		Y.one('.yui3-widget-mask').setStyle('background','#fff'); 
		
	
	});
	
	return(true);

}



//:::::::
//:::::::
function fnYUIPromptAttachLimit(sDialogMsg, sButton1Txt, sButton2Txt, sIconClass, callbackFn, callbackFnArguments)
{
		YUI().use("panel", function (Y) {  // loading escape only for security on this page
	    var dialog = new Y.Panel({
	        contentBox : Y.Node.create('<div id="dialog" />'),
	        bodyContent: '<div class="message icon-bubble" style="font-family: arial, helvetica, sans-serif !important; font-size:13.5px !important; margin-left:20px; margin-right:20px"><div style=" margin-left:20px; margin-right:20px;">' + sDialogMsg + '</div></div>',
	        width      : 510,
	        zIndex     : 1001,
	        centered   : true,
	        modal      : true, // modal behavior
	        render     : '.example',
	        visible    : false, // make visible explicitly with .show()
	        buttons    : {
	            footer: [
	                {
	                    name  : 'cancel',
	                    label : sButton1Txt, //'Cancel'
	                    action: 'onCancel'
	                },
	
	                {
	                    name     : 'proceed',
	                    label    : sButton2Txt, //'OK'
	                    action   : 'onOK'
	                }
	            ]
	        }
	    });
	
	    dialog.onCancel = function (e) {
	        
	        e.preventDefault();
	        this.hide();
	        
	       	
	       	fnRTESendViaDrive();
	       		dialog.destroy();
	    };
	
	    dialog.onOK = function (e) {
	        e.preventDefault();
	        this.hide();
	         
	         fnRemoveAttachLimitFiles();
	         dialog.destroy();

	    };
	    
	    	    
	    dialog.show();

		Y.one('.yui3-widget-mask').setStyle('background','#fff'); 
		
	
	});
	
	return(true);

} 

//fnYUIPromptAttachLimit(sMessage, 'Close', 'Sign in', 'message icon-bubble', fnBlacnkcall, arguments)
//fnYUIPrompAuthPass(sDialogMsg, 'Close', 'Confirm', sIconClass, callbackFn, callbackFnArguments)

//:::::::
//:::::::
var m_sAuthCancelBtnID = null;
function fnYUIPrompAuthPass(sDialogMsg, sButton1Txt, sButton2Txt, sIconClass, callbackFn, callbackFnArguments)
{
		YUI().use("panel", function (Y) {  // loading escape only for security on this page
	    var dialog = new Y.Panel({
	        contentBox : Y.Node.create('<div id="dialog" />'),
	        bodyContent: '<div class="message icon-bubble" style="font-family: arial, helvetica, sans-serif !important; font-size:13.5px !important; margin-left:20px; margin-right:20px"><div style=" margin-left:20px; margin-right:20px;">' + sDialogMsg + '</div></div>',
	        zIndex     : 1001,
	        centered   : true,
	        modal      : true, // modal behavior
	        render     : '.example',
	        visible    : false, // make visible explicitly with .show()
	        buttons    : {
	            footer: [
	                {
	                    name  : 'ok',
	                    label : sButton1Txt, //'OK'
	                    action: 'onOK',
	                },
	
	                {
	                    name     : 'cancel',
	                    label    : sButton2Txt, //'Cancel'
	                    action   : 'onCancel'
	                }
	            ]
	        }
	    });
	
	    dialog.onCancel = function (e) {
	        
	        e.preventDefault();
	        this.hide();
	        dialog.destroy();
	        
	        
	        try {
				//new settings page
				$('#ifm_settings')[0].contentWindow.$('#settings_body')[0].contentWindow.$('#mailforwardenable1').click(); 		
			}
			catch (x) {
				$('#ifm_settings')[0].contentWindow.$('#mailforwardenable1').click();
			}


	       		
	    };
	
	    dialog.onOK = function (e) {
	        e.preventDefault();

	    	fnAuthPassCall();


	    };
	    
	    	    
	    dialog.show();
	    
	    
	    m_sAuthCancelBtnID = dialog.getButton('cancel').get('id');



		Y.one('.yui3-widget-mask').setStyle('background','#fff'); 
		
		$('.yui3-widget-bd').css({'height':'109px'})
		
	
	});
	
	
	return(true);

}



//:::::::
//:::::::
function fnYUIPromptSaveRecipients(sDialogMsg, sButton1Txt, sButton2Txt, sIconClass, callbackFn, callbackFnArguments)
{
		YUI().use("panel", function (Y) {  // loading escape only for security on this page
	    var dialog = new Y.Panel({
	        contentBox : Y.Node.create('<div id="dialog" />'),
	        bodyContent: '<div class="message icon-bubble" style="font-family: arial, helvetica, sans-serif !important; font-size:13.5px !important; margin-left:20px; margin-right:20px"><div style=" margin-left:20px; margin-right:20px;">' + sDialogMsg + '</div></div>',
	        width      : 510,
	        zIndex     : 1001,
	        centered   : true,
	        modal      : true, // modal behavior
	        render     : '.example',
	        visible    : false, // make visible explicitly with .show()
	        buttons    : {
	            footer: [
	                {
	                    name  : 'cancel',
	                    label : sButton1Txt, //'Cancel'
	                    action: 'onCancel'
	                },
	
	                {
	                    name     : 'proceed',
	                    label    : sButton2Txt, //'OK'
	                    action   : 'onOK'
	                }
	            ]
	        }
	    });
	
	    dialog.onCancel = function (e) {
	        
	        e.preventDefault();
	        this.hide();
	        
	       	
	       	alert('cancel');
	       		dialog.destroy();
	    };
	
	    dialog.onOK = function (e) {
	        e.preventDefault();
	        this.hide();
	         
	         alert('ok');
	         dialog.destroy();

	    };
	    
	    

	    // set the content you want in the message
	    //Y.one('#dialog .message').setHTML(sDialogMsg);
	    
	    // set the icon (or none) that appears next to the message.
	    // the Class 'message' also needs to be maintained.
	    //Y.one('#dialog .message').set('className', sIconClass);
	    
	    dialog.show();

		Y.one('.yui3-widget-mask').setStyle('background','#fff'); 
		
	
	});
	
	return(true);

}



//:::::::
//:::::::
function fnYUIPromptComposer(sDialogMsg, sButton1Txt, sButton2Txt, sIconClass, callbackFn, callbackFnArguments)
{
	
	mYUIDialog_callbackFn = callbackFn;
	mYUIDialog_callbackFnArguments = callbackFnArguments;
	
		YUI().use("panel", function (Y) {  // loading escape only for security on this page
	    var dialog = new Y.Panel({
	        contentBox : Y.Node.create('<div id="dialog" />'),
	        bodyContent: '<div class="message icon-bubble" style="font-family: arial, helvetica, sans-serif !important; font-size:13.5px !important; margin-left:20px; margin-right:20px"><div style=" margin-left:20px; margin-right:20px;">' + sDialogMsg + '</div></div>',
	        width      : 410,
	        zIndex     : 1001,
	        centered   : true,
	        modal      : true, // modal behavior
	        render     : '.example',
	        visible    : false, // make visible explicitly with .show()
	        buttons    : {
	            footer: [
	                {
	                    name  : 'cancel',
	                    label : sButton1Txt, //'Cancel'
	                    action: 'onCancel'
	                },
	
	                {
	                    name     : 'proceed',
	                    label    : mcLang.Text('lang_mail_87',1), //'Keep writing'
	                    action   : 'onOK'
	                },
	
	                {
	                    name     : 'draft',
	                    label    : mcLang.Text('lang_rte_58',1)  , //'OK' 'Save deaft'
	                    action   : 'onDraft'
	                }

	            ]
	        }
	    });
	
	    dialog.onCancel = function (e) {
	        
	       	
	        e.preventDefault();
	        this.hide();
	        // code that executes the user confirmed action goes here
	        if(this.callback){
	           this.callback();
	        }
	        
	        mYUIDialog_callbackFn.apply(this, mYUIDialog_callbackFnArguments);
	        
	        // callback reference removed, so it won't persist
	        this.callback = false;
	      
	         dialog.destroy();

	       	
	    };
	
	    dialog.onOK = function (e) {
	        e.preventDefault();
	        this.hide();
	        // code that executes the user confirmed action goes here
	        if(this.callback){
	           this.callback();
	        }
	        // callback reference removed, so it won't persist
	        this.callback = false;
	        

	         
	         dialog.destroy();

	    };
	    

	    dialog.onDraft = function (e) {
	        e.preventDefault();
	        this.hide();
	        // code that executes the user confirmed action goes here
	        if(this.callback){
	           this.callback();
	        }
	        // callback reference removed, so it won't persist
	        this.callback = false;
	         
	         mSavedDraftCloseRTE = true;
	         fnSaveDraft('m');
	         
	   
	         
	         dialog.destroy();

	    };

	    Y.one('#dialog .message').set('className', sIconClass);
	 
	    dialog.show();

		Y.one('.yui3-widget-mask').setStyle('background','#fff'); 
		
	
	});
	
	return(true);

}

//:::::::
//:::::::
function fnYUIDialog(sDialogMsg, sButton1Txt, sButton2Txt)
{
	
		YUI().use("panel", function (Y) {  // loading escape only for security on this page
	    var dialog = new Y.Panel({
	        contentBox : Y.Node.create('<div id="dialog" />'),
	        bodyContent: '<div class="message icon-bubble" style="font-family: arial, helvetica, sans-serif !important; font-size:13.5px !important; margin-left:20px; margin-right:20px"><div style=" margin-left:20px; margin-right:20px;">' + sDialogMsg + '</div></div>',
	        width      : 410,
	        zIndex     : 1001,
	        centered   : true,
	        modal      : true, // modal behavior
	        render     : '.example',
	        visible    : false, // make visible explicitly with .show()
	        buttons    : {
	            footer: [
	                {
	                    name  : 'cancel',
	                    label : sButton1Txt, //'Cancel'
	                    action: 'onCancel'
	                },
	
	                {
	                    name     : 'proceed',
	                    label    : sButton2Txt, //'OK'
	                    action   : 'onOK'
	                }
	            ]
	        }
	    });
	
	    dialog.onCancel = function (e) {
	        e.preventDefault();
	        this.hide();
	        // the callback is not executed, and is
	        // callback reference removed, so it won't persist
	        this.callback = false;
	        
	        window.location.href = "http://browsehappy.com/";
	    };
	
	    dialog.onOK = function (e) {
	        e.preventDefault();
	        this.hide();
	        // code that executes the user confirmed action goes here
	        if(this.callback){
	           this.callback();
	        }
	        // callback reference removed, so it won't persist
	        this.callback = false;
	    };
	    
	    

	    // set the content you want in the message
	    //Y.one('#dialog .message').setHTML(sDialogMsg);
	    
	    // set the icon (or none) that appears next to the message.
	    // the Class 'message' also needs to be maintained.
	    Y.one('#dialog .message').set('className', 'message icon-none');
	    /* classnames and images provided in the CSS are:
	        .icon-bubble
	        .icon-error
	        .icon-info
	        .icon-question
	        .icon-warn
	        .icon-success
	        .icon-none
	     */
	                                             
	    
	    dialog.show();

	
	
	});

}

var mYUIdialog;

//:::::::
//:::::::
function fnYUIGeneralDialog(sDialogMsg, sButton1Txt, sButton2Txt, sIconClass)
{
	
		YUI().use("panel", function (Y) {  // loading escape only for security on this page
	    mYUIdialog = new Y.Panel({
	        contentBox : Y.Node.create('<div id="dialog" />'),
	       bodyContent: '<div class="message icon-bubble" style="font-family: arial, helvetica, sans-serif !important; font-size:13.5px !important; margin-left:20px; margin-right:20px"><div style=" margin-left:20px; margin-right:20px;">' + sDialogMsg + '</div></div>',
	        width      : 410,
	        zIndex     : 1001,
	        centered   : true,
	        modal      : true, // modal behavior
	        render     : '.example',
	        visible    : false, // make visible explicitly with .show()
	        buttons    : {
	            footer: [
	                {
	                    name  : 'cancel',
	                    label : sButton1Txt, //'Cancel'
	                    action: 'onCancel'
	                },
	
	                {
	                    name     : 'proceed',
	                    label    : sButton2Txt, //'OK'
	                    action   : 'onOK'
	                }
	            ]
	        }
	    });
	
	    mYUIdialog.onCancel = function (e) {
	    

	    	sURL 	=  $('#txtInsertLink').val();
	    	sURLTxt =  $('#txtInsertLinkText').val();
	    	
	    	if ( sURL.trim().length == 0 )
	        {
	        	$('#txtInsertLink').focus();
	        	return;
	        }


	    	if ( sURLTxt.trim().length == 0 )
	        {
	        	if ( sURL.split("://").length > 1 )
					sURLTxt = sURL.split("://")[1];
				else
					sURLTxt = sURL;
	        }

	    
	       e.preventDefault();
	        this.hide();
	        // the callback is not executed, and is
	        // callback reference removed, so it won't persist
	        this.callback = false;
	        
	        
	        var $f = $("#RichEditIFrameID");
			$f[0].contentWindow.fnRestoreSelection();  //works
	        fnInsertURL( sURLTxt, sURL );
	        
	    };
	
	    mYUIdialog.onOK = function (e) {
	        e.preventDefault();
	        this.hide();
	        // code that executes the user confirmed action goes here
	        if(this.callback){
	           this.callback();
	        }
	        	        
	        // callback reference removed, so it won't persist
	        this.callback = false;
	    };
	    
	    

	    // set the content you want in the message
	    //Y.one('#dialog .message').setHTML(sDialogMsg);
	    
	    // set the icon (or none) that appears next to the message.
	    // the Class 'message' also needs to be maintained.
	    Y.one('#dialog .message').set('className', 'message ' + sIconClass);
	    /* classnames and images provided in the CSS are:
	        .icon-bubble
	        .icon-error
	        .icon-info
	        .icon-question
	        .icon-warn
	        .icon-success
	        .icon-none
	     */
	                                             
	    
	    mYUIdialog.show();
	    
	    $('#txtInsertLink').focus();
	    
	    $(".yui3-panel-focused").css( {'top' : (200 + 'px')} );

	
	
	});

}



//:::::::
//:::::::
function fnYUIInsertImglDialog(sDialogMsg, sButton1Txt, sButton2Txt, sIconClass)
{
	
		YUI().use("panel", function (Y) {  // loading escape only for security on this page
	    mYUIdialog = new Y.Panel({
	        contentBox : Y.Node.create('<div id="dialog" />'),
	       bodyContent: '<div class="message icon-bubble" style="font-family: arial, helvetica, sans-serif !important; font-size:13.5px !important; margin-left:20px; margin-right:20px"><div style=" margin-left:20px; margin-right:20px;">' + sDialogMsg + '</div></div>',
	        width      : 410,
	        zIndex     : 1001,
	        centered   : true,
	        modal      : true, // modal behavior
	        render     : '.example',
	        visible    : false, // make visible explicitly with .show()
	        buttons    : {
	            footer: [
	                {
	                    name  : 'cancel',
	                    label : sButton1Txt, //'Cancel'
	                    action: 'onCancel'
	                },
	
	                {
	                    name     : 'proceed',
	                    label    : sButton2Txt, //'OK'
	                    action   : 'onOK'
	                }
	            ]
	        }
	    });
	
	    mYUIdialog.onCancel = function (e) {
	    

	    	sURL 	=  $('#txtInsertImgURL').val();
	    	
	    	if ( sURL.trim().length == 0 )
	        {
	        	$('#txtInsertImgURL').focus();
	        	return;
	        }

	    
	       e.preventDefault();
	        this.hide();
	        // the callback is not executed, and is
	        // callback reference removed, so it won't persist
	        this.callback = false;
	        
	        
	        //var $f = $("#RichEditIFrameID");
			//$f[0].contentWindow.fnRestoreSelection();  //works
	        //fnInsertURL( sURLTxt, sURL );
	        fnRTEAddImage(sURL);
	        
	    };
	
	    mYUIdialog.onOK = function (e) {
	        e.preventDefault();
	        this.hide();
	        // code that executes the user confirmed action goes here
	        if(this.callback){
	           this.callback();
	        }
	        	        
	        // callback reference removed, so it won't persist
	        this.callback = false;
	    };
	    
	    

	    // set the content you want in the message
	    //Y.one('#dialog .message').setHTML(sDialogMsg);
	    
	    // set the icon (or none) that appears next to the message.
	    // the Class 'message' also needs to be maintained.
	    Y.one('#dialog .message').set('className', 'message ' + sIconClass);
	                                             
	    
	    mYUIdialog.show();
	    
	    $('#txtInsertImgURL').focus();
	    
	    $(".yui3-panel-focused").css( {'top' : (200 + 'px')} );

	
	
	});

}



//:::::::
//:::::::
function fnSettingsAction(iOption)
{
	switch (iOption) 
	{
		case 0: 
				// 				
				if (mSkinUI == 'telmex')
					fnShowPOPOpt('btnSettings', 'mSEttingsOptMenu',-80,0);
				else
					fnShowPOPOpt('btnSettings', 'mSEttingsOptMenu',-80,-6);
				
				break;
				
		case 1:   
				fnOpenHelp(); 
				break;


		case 2:   
				fnOpenSettings(1); 
				break;

	}

}


//::::::
//::::::
function fnOpenHelp()
{		
	window.open('http://faqstage.mail2world.com/faq/lang/' + slang, 'Help', 'width=1050,height=850')
}

//:::::::
//:::::::
function fnOpenSettings(iSetting)
{
	var iMsgDivTop = 90;
	var iMsgDivLeft= 170;
	

	if (m_ClientWidth <= 1200)
	{
		iMsgDivTop = 20;
		iMsgDivLeft= 20;
	}
	
	//fnOpenSettingsTab(1);
		
	$("#settings-fullscreen").css( "display", "" );
		
	$("#divSettings").css( {'position' : 'absolute', 'left' : (iMsgDivLeft + 'px'), 'top' : (iMsgDivTop + 'px'), 'display' : 'none'} );

    
    var iMsgDivHeight = $( window ).height() - (iMsgDivTop * 2) - 45;
	var iMsgDivWidth  = $( window ).width() - (iMsgDivLeft * 2) - 35;
	
	
	$('#divSettings').width(iMsgDivWidth);
	$('#divSettings').height(iMsgDivHeight);
	
	$('#mSettingstabsContainer').width();
	
	
	$("#divSettings").fadeIn( "fast", function() { });
	
	//set iframe height
	$('#ifm_settings').height(iMsgDivHeight - 40);
	
	
	if ( m_bUpdatedSettingsPage == 'true' )
		sURL = '/app/PageSettings.asp?setting=' + iSetting;
	else
		sURL = '/options/ms_options.asp';
	
	
	$('#ifm_settings').attr('src','about:blank');
	$('#ifm_settings').fadeOut(200, function() 
	{ 
	
	
	    //$('#ifm_settings').load(function(){
        //	$('#ifm_settings').contents().find('body').html('');
    	//});
				
		$("#ifm_settings").css( {'display' : ''} );
		$('#ifm_settings').attr('src',sURL);
	});
	
	
	
	$( "#ifm_settings" ).load(function() {
  		// Handler for .load() called.
  		//alert($('#ifm_settings').attr('src'))
  		
  		if ( m_bUpdatedSettingsPage == 'false' )
  		{
	  		var currIframeURL = frames['ifm_settings'].location.href;
	  		if ( (currIframeURL != 'about:blank') && ( currIframeURL.indexOf('ms_options.asp') == -1 ) )
				$("#settingsBack").css( "display", "" );  	
			else
				$("#settingsBack").css( "display", "none" ); 
		}	
			
	
	});
	

}


//::::::
//::::::
function fnSettingsBack()
{
	sURL = '../../options/ms_options.asp';
	$('#ifm_settings').attr('src',sURL);
}

//::::::
//::::::

function fnSettingsExitFullscreen()
{
	$("#settings-fullscreen").css( "display", "none" );
	$("#divSettings").css( "display", "none" );
	$('#ifm_settings').attr('src','about:blank');
}


//::::::
//::::::
function fnOpenSettingsTab(iTabIndex)
{
	$(".SettingsTabSelected").removeClass("SettingsTabSelected");
	$("#SetTab" + iTabIndex).addClass("SettingsTabSelected");
	
	switch (iTabIndex) 
	{
		case 0: 
				$('#SubSettings').html( '<a id="SubSettings0" href="JavaScript:fnOpenSettingsSubTab(\'Login\')" class="aSubSettings">Login</a><a id="SubSettings1" href="JavaScript:fnOpenSettingsSubTab(\'Themes\')" class="aSubSettings">Themes</a><a id="SubSettings5" href="JavaScript:fnOpenSettingsSubTab(\'Language\')" class="aSubSettings">Language</a>' ); 
				fnOpenSettingsSubTab('Login');   
				break;		
				
		case 1: 
				$('#SubSettings').html( '<a id="SubSettings2" href="JavaScript:fnOpenSettingsSubTab(\'Message Display\')" class="aSubSettings">Message Display</a><a id="SubSettings3" href="JavaScript:fnOpenSettingsSubTab(\'Mail Sending\')" class="aSubSettings">Mail Sending</a><a id="SubSettings4" href="JavaScript:fnOpenSettingsSubTab(\'Message Deletion\')" class="aSubSettings">Message Deletion</a>' );
				fnOpenSettingsSubTab('Message Display');
				break;
				
		case 2:
				$('#SubSettings').html( '<a id="SubSettings6" href="JavaScript:fnOpenSettingsSubTab(\'My Profile\')" class="aSubSettings">My Profile</a><a id="SubSettings7" href="JavaScript:fnOpenSettingsSubTab(\'Password\')" class="aSubSettings">Password</a><a id="SubSettings8" href="JavaScript:fnOpenSettingsSubTab(\'Signatures\')" class="aSubSettings">Signatures</a><a id="SubSettings9" href="JavaScript:fnOpenSettingsSubTab(\'Identities & Aliases\')" class="aSubSettings">Identities & Aliases</a>' ); 
				fnOpenSettingsSubTab('My Profile');
				break;		
		case 3:
   
				$('#SubSettings').html('<a id="SubSettings10" href="JavaScript:fnOpenSettingsSubTab(\'SMS\')" class="aSubSettings">SMS</a><a id="SubSettings11" href="JavaScript:fnOpenSettingsSubTab(\'Alerts\')" class="aSubSettings aSubSettingsSelect">Alerts</a>'); 
				fnOpenSettingsSubTab('SMS');
				break;
		case 4:
		


				$.ajax({
			
			     type: "GET",
			     url: '../../app/isadmin.asp',
			     data: "id=xxx", 
			     success: function(data) {

						if (data == 'yes')
						{
							OpenWindow('../../admin/ControlCenter/Control_Center.asp', 'cc', 800, 600, true);
							fnSettingsExitFullscreen();
							return;
						}
						else
						{
							alert('You need to signin as an administrator to use the Control Center')
						}
		
								
							}
					
					   });


		
				$('#SubSettings').html('');
				fnOpenSettingsSubTab('xxxxx');   
				break; 
	}
	
			
	
		
	
	

}


function fnOpenSettingsSubTab(sTab)
{
	var sURL = 'about:blank';
	
	$(".aSubSettingsSelect").removeClass("aSubSettingsSelect");
	
	switch (sTab) 
	{
		case 'Login': 
				sURL = '../../options/preferences/general.asp';   
				$("#SubSettings" + 0).addClass("aSubSettingsSelect");
				break;		
				
		case 'Themes': 
				sURL = '../../options/preferences/Theames.asp';   
				$("#SubSettings" + 1).addClass("aSubSettingsSelect");
				break;
				
		case 'Message Display':
				sURL = '../../options/preferences/messagedisplay.asp'; 
				$("#SubSettings" + 2).addClass("aSubSettingsSelect"); 
				break;		
		case 'Mail Sending':
				sURL = '../../options/preferences/mailsending.asp';    
				$("#SubSettings" + 3).addClass("aSubSettingsSelect"); 
				break;
		case 'Message Deletion':
				sURL = '../../options/preferences/messagedeletion.asp';  
				$("#SubSettings" + 4).addClass("aSubSettingsSelect");
				break;

		case 'Language':
				sURL = '../../options/ms_language.asp';  
				$("#SubSettings" + 5).addClass("aSubSettingsSelect");
				break;

		case 'My Profile':
				sURL = '../../options/profile_update.asp';  
				$("#SubSettings" + 6).addClass("aSubSettingsSelect");
				break;

		case 'Password':
				sURL = '../../options/ms_change_password.asp';  
				$("#SubSettings" + 7).addClass("aSubSettingsSelect");
				break;

		case 'Signatures':
				sURL = '../../options/RichEdit_Signature/ms_signature.asp';  
				$("#SubSettings" + 8).addClass("aSubSettingsSelect");
				break;
				
		case 'Identities & Aliases':
				sURL = '../../alias/alias_enter.asp';  
				$("#SubSettings" + 9).addClass("aSubSettingsSelect");
				break;

		
		case 'SMS':
				sURL = '../../options/sms/sms_service.asp';  
				$("#SubSettings" + 10).addClass("aSubSettingsSelect");
				break;
				

		case 'Alerts':
				sURL = '../../options/alerts_notify.asp';  
				$("#SubSettings" + 11).addClass("aSubSettingsSelect");
				break;
	
				
	}

	$('#ifm_settings').attr('src','about:blank');
	$('#ifm_settings').fadeOut(200, function() 
	{ 
	
	
	    //$('#ifm_settings').load(function(){
        //	$('#ifm_settings').contents().find('body').html('');
    	//});
			
			
		

			
		$("#ifm_settings").css( {'display' : ''} );
		$('#ifm_settings').attr('src',sURL);
	});	


}


function fnSettingsSave()
{
	
	 //$("#ifm_settings").contents().find('form').submit();
	 
	 var MyIFrame = document.getElementById("ifm_settings");
	var MyIFrameDoc = (MyIFrame.contentWindow || MyIFrame.contentDocument);
	if (MyIFrameDoc.document) MyIFrameDoc = MyIFrameDoc.document;
	MyIFrameDoc.getElementById("myform").submit();
	//MyIFrameDoc.getElementById("mybutton").click();

}

//:::::::
//:::::::
function PageTitleNewIncoming() 
{
    if (m_iTotalIncomingMsg <= 0)
    {
        window.clearTimeout(m_UpdateTimeID);
        UpdatePageTitle();
        return;
    }
    
    if ( top.document.title.indexOf(sTitleNewMailAlert) < 0)
        top.document.title = '(' + m_iTotalIncomingMsg + ') ' + sTitleNewMailAlert + ' ';
    else
		UpdatePageTitle(); 
	 
	 window.clearTimeout(m_UpdateTimeID);
	 m_UpdateTimeID = window.setTimeout("PageTitleNewIncoming()",1500);
	 
}


	
	
	

	//:::::::
	//:::::::
	function preload() 
	{
		for (i = 0; i < preload.arguments.length; i++) 
		{
			images[i] = new Image();
			images[i].src = preload.arguments[i]
		}
	}
	
	/*
		preload(
				"http://domain.tld/gallery/image-001.jpg",
				"http://domain.tld/gallery/image-002.jpg",
				"http://domain.tld/gallery/image-003.jpg"
			)
	*/
	


	//--------------------------------------------------------------
	//- Helper Functions
	//--------------------------------------------------------------
  	function fnGetTimestamp() 
  	{
	    dtNow = new Date();
	    var Hours = dtNow.getHours();
	    var Mins;
	    var Secs;
	    var Time;
	    if (Hours >= 12) {
	      Time = " PM";
	    } else {
	      Time = " AM";
	    }
	    if (Hours > 12) Hours -= 12;
	    if (Hours == 0) Hours = 12;
	    Mins = dtNow.getMinutes();
	    if (Mins < 10) Mins = "0" + Mins;
	    Secs = dtNow.getSeconds();
	    if (Secs < 10) Secs = "0" + Secs;
	    return (Hours + ":" + Mins + ":" + Secs + " " + Time);
  	}


//::::::: - Util
//:::::::
function IsEmail(email) {
  var regex = /^([a-zA-Z0-9_\.\-\+])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
  
  //var regex = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
  
  return regex.test(email);
}



/*
':::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
'             name: spellcheck.js
'        author(s): Khalid A. Abed
'             Date: 12/19/2013
'      description:	SPELL-CHECK COD
' revision History: 
'                   copyright (c) 2013 Mail2World, Inc. all rights reserved.
':::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/

//::::::
function  fnSpellCheck()
{
	CheckSpellDone();
	
	var sMsgBody = fnGetRTEText();
	sMsgBody = sMsgBody.split('<div origmsg="yes"></div>')[0];
	
	var sMsgBody = sMsgBody; 
	var buffer = "xml_TextBody=" + escape(sMsgBody);
	
	if ( (slang == "av") || (slang == "es") )
		m_sSelectSpellLang = "Spanish"
	
	buffer += "&Language=" + m_sSelectSpellLang; 

	var sURL = '../../mail/spell_check_call.asp';
	var obj_callback = new clsAjaxcallback();    
	obj_callback.Ajaxcallback.success = handleSpellResponse;
    makePOSTRequest(sURL, obj_callback.Ajaxcallback, buffer);
}

//::::::
function handleSpellResponse(o)
{
	sHTTPData = o.responseText;	
				
	if ( sHTTPData == "NO SPELL ERRS")
	{
		YAHOO.util.Dom.removeClass(document.getElementById('btnSpellChk'), 'buttonSpellOn');
		UpdateInboxAlert(mcLang.Text('lang_rte_68',1));
		m_SpellStatus = 'off';
		return;
	}
	
	m_bAutoSpellCall = false;
		
	m_arrSpellCheck = null;
	m_arrSpellCheck = new Array();
	var arrSpellWords = sHTTPData.split("|^|");
	m_bad_SpellWords_count = arrSpellWords.length;
				
    for( i=0; i < arrSpellWords.length; i++)
	{
		arrTemp = arrSpellWords[i].split('|*|');
		m_arrSpellCheck[m_arrSpellCheck.length] = new Class_SpellCheck(arrTemp[0], arrTemp[1], arrTemp[2]);
	}
	BuildSpell();

}

//::::::
function BuildSpell()
{
    var sSpellText = fnGetRTEText();
      
    m_iActualSpellErr = 0;
    for(var i= (m_bad_SpellWords_count - 1); i >= 0; i--)
	{
	    _SpellCheck = m_arrSpellCheck[i];
	    
	    if (_SpellCheck.original.length > 1)
	    {
	        if (m_sSpellIgnoreList.indexOf(("@S#P!L" + _SpellCheck.original + "@S#P!L")) < 0)
	        {
	            replaced_word = '<span spIndex="' + i + '" style="decoration: none; border-bottom: #FF0000 1px dashed; background: #FFDFE8" id="UR' + i + '">' +  _SpellCheck.original + '</span>';
	            
	            sSpellText = FixedReplace(sSpellText, _SpellCheck.position, _SpellCheck.original , replaced_word)
                m_iActualSpellErr += 1;
            }
        }
	}
 
	//mC._orteBody.LoadMessage(sSpellText);
	
	m_SpellStatus = 'on';
	
	fnUpdateRTEText(sSpellText);
	
	mwSpellChecker("RichEditIFrameID");
    UpdateMisspelled();
    
    fnShowRecheckspelling()
}
 
function UpdateMisspelled()
{    
    if (m_iActualSpellErr > 1)
        sSpellMsg = " Misspellings Found"; 
    else
        sSpellMsg = " misspelling found";
 
 	//sMessage = m_iActualSpellErr + sSpellMsg + '</font>';
 	UpdateInboxAlert(mcLang.Text('lang_rte_69',1));

}

//::::::  
function CM(Obj, iValue, vIndex, e)
{    	
    if ( iValue == 1)
    {
        Obj.style.backgroundColor = "#e5f3fb";
        Obj.style.borderColor = "#FBD31B";
        return;
    }
	    	
    if ( iValue == 2)
    {
        if (Obj.className == "CMDBOn")
            return;
        Obj.style.backgroundColor = "#F5F5F5";
        Obj.style.borderColor = "#F5F5F5";
        return;
    }
	    	
    if ( iValue == 3)
    {
    	if(document.all)
     		sTextValue = Obj.innerText;
		else
			sTextValue = Obj.textContent;

        ReplaceWord(sTextValue, vIndex);
        m_iActualSpellErr -= 1;
    }
    
    if ( iValue == 4)
    {
        AddToDictionary(m_objURLSpell.innerHTML, false);
        ReplaceWord(m_objURLSpell.innerHTML, vIndex);
    }
    
    if ( iValue == 5)
    {
        ReplaceWord("", vIndex);
        m_iActualSpellErr -= 1;
    }
    
    if ( iValue == 7)
    {
        m_sSpellIgnoreList += "@S#P!L" + m_objURLSpell.innerHTML + "@S#P!L";
        ReplaceWord(m_objURLSpell.innerHTML, vIndex);
        m_iActualSpellErr -= 1;
    }
    
    if ( iValue == 8)
    {
        m_sSpellIgnoreList += "@S#P!L" + m_objURLSpell.innerHTML + "@S#P!L";
        AddToDictionary(m_objURLSpell.innerHTML, true);
    }
    
    
    if ( iValue == 9)
    {
        _spHideMenu();
        OpenDictionaryDialog();
        return;
    }
    
 }

//:::::: 
function OpenDictionaryDialog()
{
	strImage = showModalDialog("../../mail/Dictionary.asp","","font-family:Verdana; font-size:10; dialogWidth:30.8em; dialogHeight:19em" );
}

//:::::: 
function AddToDictionary(v_sNewCustomWord, bIgnoreAll)
{
    var buffer = "Dictionary=yes&CustomWord=" + escape(v_sNewCustomWord);
    
    for(var i=0; i < m_bad_SpellWords_count; i++)
    {
        if (_doc.getElementById("UR" + i) != null )
        {
            _URL = _doc.getElementById("UR" + i);
            if (v_sNewCustomWord == _URL.innerHTML)
            {
                _URL.outerHTML = _URL.innerHTML;
                m_iActualSpellErr -= 1;
            }
        }
    }
    
    if (bIgnoreAll == false)
    {           
		var sURL = '../../mail/spell_check_call.asp';
		var obj_callback = new clsAjaxcallback();    
		obj_callback.Ajaxcallback.success = handleDictionaryCallResponse;
	    makePOSTRequest(sURL, obj_callback.Ajaxcallback, buffer);
    }

}

// Hack, hack, hack :)
// Returns the real elements to scroll (supports window/iframes, documents and regular nodes)
$.fn._scrollable = function(){
  return this.map(function(){
    var elem = this,
      isWin = !elem.nodeName || $.inArray( elem.nodeName.toLowerCase(), ['iframe','#document','html','body'] ) != -1;

    if( ! isWin ) {
      return elem;
    }


    var doc = (elem.contentWindow || elem).document || elem.ownerDocument || elem;

     return $.browser.safari || doc.compatMode == 'BackCompat' ?
       doc.body : 
       doc.documentElement;
  });
};

//::::::		
function SWO(v_index, objURL, evt)
{



    m_objURLSpell = objURL;
    var sHTMLMenu = "";
     _SpellCheck = m_arrSpellCheck[v_index];
     var suggestions = _SpellCheck.suggestions.split(",");
    for( i=0; i < suggestions.length; i++)
	{
	    if ( ((i +1) ==  suggestions.length) || (i >= 6) )
	        sClass = 'class="CMSB"';
	    else
            sClass = '';
            
		sHTMLMenu += '<a onclick="CM(this, 3, ' + v_index + ', event)" href="JavaScript:" class="menulink">' + suggestions[i] + '</a>';
	    if (i >= 6)
	        i = suggestions.length;
	}
	sHTMLMenu += '<div class="MSLine"></div>';
	sHTMLMenu += '<a onclick="CM(this, 7, ' + v_index + ', event)" href="JavaScript:" class="menulink">' + mcLang.Text('lang_rte_70',1) + '</a>';
	//sHTMLMenu += '<a onclick="CM(this, 8, ' + v_index + ', event)" href="JavaScript:" class="menulink">Ignore All</a>';
	//sHTMLMenu += '<a onclick="CM(this, 4, ' + v_index + ', event)" href="JavaScript:" class="menulink">Add to Dictionary</a>';
	//sHTMLMenu += '<a onclick="CM(this, 9, ' + v_index + ', event)" href="JavaScript:" class="menulink">Edit Dictionary</a>';
	
	document.getElementById("mSpellMenu").innerHTML = sHTMLMenu;
	

	fnShowPOPOpt('UR' + v_index, 'mSpellMenu', 0,-10);
	
	//*****************
	
	var clickX = YAHOO.util.Event.getPageX(evt);   
    var clickY = YAHOO.util.Event.getPageY(evt); 
    
    var xyRTE = YAHOO.util.Dom.getXY("RichEditIFrameID");
	

    var xy = [0,0];
    xy[0] = clickX + xyRTE[0];
    //xy[1] = (clickY + xyRTE[1] -10) - ( m_iRTEScrollPos );
    xy[1] = (clickY + xyRTE[1] -10) - ( $('#RichEditIFrameID')._scrollable().scrollTop() );
    YAHOO.util.Dom.setXY("mPOPOpt", xy);
    

	
	//******************
	
	
	YAHOO.util.Event.stopEvent(evt); 
}	

//:::::: 
function ReplaceWord(v_sWord, vIndex)
{
	var theDiv = m_objURLSpell;
    var newDiv = document.createElement("span");
    newDiv.innerHTML= v_sWord;
    theDiv.parentNode.replaceChild(newDiv, theDiv);
    
    //menuobj.style.display = "none";

}

//::::::  
function handleDictionaryCallResponse(o)
{
    //sHTTPData = o.responseText;
} 	

//:::::: 
function Class_SpellCheck(original, position, suggestions) 
{
	this.original    = original;
	this.position    = parseInt(position);
	this.suggestions = suggestions;
}
 
function FixedReplace(v_sText, v_iPosition, v_sFindWord, v_sReplaceWord)
{
    var sPart1 = v_sText.substring(0, v_iPosition);
    var sPart2 = v_sText.substring((v_sFindWord.length + v_iPosition));
    return (sPart1 + v_sReplaceWord + sPart2);
}
 
//:::::: 
function mwSpellChecker(ifrm)
{    
	_ifm = document.getElementById(ifrm);
    _doc = _ifm.contentDocument || _ifm.contentWindow.document;


    //_doc = document.getElementById(ifrm);
        
    if(window.addEventListener){ // Mozilla, Netscape, Firefox
		_doc.addEventListener('click', _spGetWord, true);
		_doc.addEventListener('keypress', _spKeyPress, true);
	} else { // IE
		_doc.attachEvent('onclick', _spGetWord);
		_doc.attachEvent('onkeypress', _spKeyPress);
	}
	
}

//:::::: 
function _spKeyPress()
{
    _spHideMenu();

}
 

//:::::: 
function _spHideMenu()
{
    //menuobj=document.getElementById("mSpellMenu");
    //menuobj.style.display = "none";
}

//::::::		
function _spGetWord(evt)
{
	var srcElement = evt.srcElement ? evt.srcElement : evt.target; 
	//alert(srcElement.tagName);
	
    if (srcElement.getAttribute("spIndex") != null)
    {
        var _wrd = srcElement.innerHTML;
        SWO(srcElement.getAttribute("spIndex"), srcElement, evt)
    }
    else
    {
        //menuobj.style.display = "none";
        return;
    }
}
 

//:::::: 
function CheckSpellClose()
{
   //mC._oMsgBar.clearMessage(); 
}


//:::::: 
function CheckSpellDone()
{

	if (m_SpellStatus == "on")
	{

	    
	    _ifm = document.getElementById("RichEditIFrameID");
    	_doc = _ifm.contentDocument || _ifm.contentWindow.document;

	    
	    if(window.addEventListener){ // Mozilla, Netscape, Firefox
			_doc.removeEventListener('click', _spGetWord, true);
			_doc.removeEventListener('keypress', _spKeyPress, true);
		} else { // IE
			_doc.detachEvent('onclick', _spGetWord);
			_doc.detachEvent('onkeypress', _spKeyPress);
		}
		
		for(var i=0; i < m_bad_SpellWords_count; i++)
	    {
	        if (_doc.getElementById("UR" + i) != null )
	        {
	            _URL = _doc.getElementById("UR" + i);

	            theDiv = _URL;
    			newDiv = _doc.createElement("span");
    			newDiv.innerHTML= _URL.innerHTML;
    			theDiv.parentNode.replaceChild(newDiv, theDiv);
	        }
	    }
	    
	}
	
	YAHOO.util.Dom.removeClass(document.getElementById('btnSpellChk'), 'buttonSpellOn');
	m_SpellStatus = "off";
	m_arrSpellCheck = null;
}

function fnCloseSpellCheck()
{

	document.getElementById("rte_Recheckspelling").style.display = "none";
	CheckSpellDone();

}

//':::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/


/*
':::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
'             name: connection.js
'        author(s): Khalid A. Abed
'             Date: 12/19/07
'      description:	User Message List Display v3.0
' revision History: 
'                   copyright (c) 2008 Mail2World, Inc. all rights reserved.
':::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/

    var m_bEnableAJAXDebug = false;
    var m_sAJAXDebugContainer = null;
    
    //:::AJAX :::
    //:::
    var g_fnHandleAJAXSuccess = function(o){
	    if(o.responseText !== undefined){
		    g_fnShowAJAXCallDebug(o);
	    }
    };

    //:::
    var g_fnHandleAJAXFailure = function(o){
	    if(o.responseText !== undefined){
		    g_fnShowAJAXCallDebug(o);
	    }
    };

    function clsAjaxcallback() {
        this.Ajaxcallback = {
          success:g_fnHandleAJAXSuccess,
          failure:g_fnHandleAJAXFailure,
          //cache:false,
          argument: { call:"", msg:"", module:null }
        };
        return(this);
    }

    //:::
    function makeRequest(f_sURL, fn_callback)
    {
	    var request = YAHOO.util.Connect.asyncRequest('GET', f_sURL, fn_callback);
    }
    
    //:::

    function makeRequestInbox(f_sURL, fn_callback)
    {
        //if(YAHOO.util.Connect.isCallInProgress(g_oConnect)) 
	    //{
            YAHOO.util.Connect.abort(g_oConnect);
        //}
	    g_oConnect = YAHOO.util.Connect.asyncRequest('GET', f_sURL, fn_callback);
    }
    
    
    function makePOSTRequest(f_sURL, fn_callback, fPostData)
    {
	    var request = YAHOO.util.Connect.asyncRequest('POST', f_sURL, fn_callback, fPostData);
    }

    //:::
    function g_fnShowAJAXCallDebug(o)
    {
        if (m_bEnableAJAXDebug != true) 
            return;
            
        var sDebugData = "";
        sDebugData = "<li>Transaction id: " + o.tId + "</li>";
        sDebugData += "<li>HTTP status: " + o.status + "</li>";
        sDebugData += "<li>Status code message: " + o.statusText + "</li>";
        sDebugData += "<li>HTTP headers: <ul>" + o.getAllResponseHeaders + "</ul></li>";
        sDebugData += "<li><b>Server response:</b>" + o.responseText + "</li>";
        sDebugData += "<li>Argument object: Object ( [s_fCall] => " + o.argument.call +
						         " [f_sMsg] => " + o.argument.msg +" )</li>";
						      
	    if (m_sAJAXDebugContainer != null)
	    {
            var div = document.getElementById(m_sAJAXDebugContainer);
            div.style.display = "";
	        div.innerHTML = sDebugData;
	    }
	    else
	        alert(sDebugData)
    }
    //:::AJAX ENDS :::
//':::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/


/*
':::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
'             name: contacts_autocomp.asp
'        author(s): Khalid A. Abed
'             Date: 12/19/07
'      description:	User Message List Display v3.0
' revision History: 
'                   copyright (c) 2008 Mail2World, Inc. all rights reserved.
':::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/


function fnrtAutoComBlur()
{
	//console.log('bluer first');		
 	if ($(oCurrentAutoTextBox).val().length > 4 )
   	{
   		mBTEMPAutoBlure = true;
        var sEmail = $(oCurrentAutoTextBox).val();
        $(oCurrentAutoTextBox).val('');
        fnInsertRTEXEmail(sEmail);
          
    }
    else
    	$(oCurrentAutoTextBox).val('');


}

function fnrtFilterAutoComBlur()
{
	return;
 	//email not in contacts?...see if it's valid and added it
 	var sExternalEmail = $(oCurrentAutoTextBox).val();
    sExternalEmail = fnTrim(sExternalEmail);
 	if (sExternalEmail.length > 3 )
   	{
        fnInsertFilterFromEmail(null, sExternalEmail);
        return;
    }
}


//:::::::
//:::::::
function fnrteKeyDown(ObjTXT, evt)
{

	    evt = (evt) ? evt : event;
	    var charCode = (evt.charCode) ? evt.charCode :
	        ((evt.which) ? evt.which : evt.keyCode);
	
		//enter
 		if (charCode == 13) {
			//alert('enter');
	    }
	    
	    //backspace
 		if (charCode == 8) {
			//alert('enter');
			if (ObjTXT.value.length == 0)
			{
				$(oCurrentAutoTextBox).prev().remove();
				fnREsizeRTEInput();
				fnResizeRTE();
				iTotalToEmails -=1;
			}
	    }
	    
	    
 		if ( (charCode == 13) || (charCode == 186) || (charCode == 188) || (charCode == 59) ) 
 		{
 			
 			if (charCode == 13)
 			{
 				if (m_iCurentAutoComp >= 0)
 				{
 					 $(('#autoEmail' + m_iCurentAutoComp)).trigger('click');
 					 return;
 				}
 			}
 			 			
 			if ($(oCurrentAutoTextBox).val().length > 2 )
   			{
        		var sEmail = $(oCurrentAutoTextBox).val();
        		$(oCurrentAutoTextBox).val('');
        		fnInsertRTEXEmail(sEmail);
    		}

	    }

	    
	    //down key
	    if (charCode == 40) 
	    {
	    	fnMoveAutoComList(1);
	    	
	    }
 
 	    //up key
	    if (charCode == 38) 
	    {
	    	fnMoveAutoComList(-1);
	    }


}


//:::::::
//:::::::
function fnrteKeyDownFilterFromEmails(ObjTXT, evt)
{

	    evt = (evt) ? evt : event;
	    var charCode = (evt.charCode) ? evt.charCode :
	        ((evt.which) ? evt.which : evt.keyCode);
	
	    	     
 		if ( (charCode == 13) || (charCode == 186) || (charCode == 188) || (charCode == 59) ) 
 		{
 			
 			if (charCode == 13)
 			{
 				if (m_iCurentAutoComp >= 0)
 				{
 					 $(('#autoEmail' + m_iCurentAutoComp)).trigger('click');
 					 return;
 				}
 			}
 			 			
    		
    		 //email not in contacts?...see if it's valid and added it
 			var sExternalEmail = $(oCurrentAutoTextBox).val();
        	sExternalEmail = fnTrim(sExternalEmail);
 			if (sExternalEmail.length > 3 )
   			{
        		fnInsertFilterFromEmail(null, sExternalEmail);
        		return;
    		}

	    }

	    
	    //down key
	    if (charCode == 40) 
	    {
	    	fnMoveAutoComList(1);
	    	
	    }
 
 	    //up key
	    if (charCode == 38) 
	    {
	    	fnMoveAutoComList(-1);
	    }


}


//:::::::
//:::::::
function ResetToEmails()
{
	iTotalToEmails = 0;
	irteEmailsCounter =0;
	
	oCurrentAutoTextBox = $('#rte_to');

	$("#rtEmaillistTo").children("div").remove();
	$("#rtEmaillistCc").children("div").remove();
	$("#rtEmaillistBcc").children("div").remove();
	
	$("#aAddCc").css({display:''});
	$("#rtEmaillistCcRow").css({display:'none'});
		
	$("#aAddBcc").css({display:''});
	$("#rtEmaillistBccRow").css({display:'none'});

}

//::::::: 
//:::::::
function fnCheckRTEEmails(ObjTXT, evt)
{
	
	evt = (evt) ? evt : event;
	var charCode = (evt.charCode) ? evt.charCode :
		((evt.which) ? evt.which : evt.keyCode);
		
	        
	if ( (charCode == 40) || (charCode == 38) ) 
 	{
		//Set mouse focus and move cursor to end of input
		$(oCurrentAutoTextBox).focus();
		$(oCurrentAutoTextBox).val($(oCurrentAutoTextBox).val());
			
			return;
	}

	
    if (ObjTXT.value.length == 0 || ObjTXT.value == " ")
    {
        fnDocOnClick();
        return;
    }
    
    if ( ( $(oCurrentAutoTextBox).val() == ';') || ( $(oCurrentAutoTextBox).val() == ',') )
    {
    	$(oCurrentAutoTextBox).val('');
    	return;
 	}
 
 	//if ( IsEmail(ObjTXT.value) == false )
 	//	return;
 
 	m_SearchQ  = ObjTXT.value;
 	m_SearchQ  = m_SearchQ.trim();
 	
	sEmail = m_sUsername + '@' + m_sDomain;
	var sURL = '../../contacts/contacts_action.asp?Action=autocomp&SearchQuery=' + encodeURIComponent(m_SearchQ) + '&ConType=global&useremail=' + sEmail;

	$.ajax({
     type: "POST",
     url: '../../contacts/contacts_action.asp',
     data: 'Action=autocomp&SearchQuery=' + encodeURIComponent(m_SearchQ) + '&ConType=global&useremail=' + sEmail, 
     success: function(data) {
      
			
			////////////
			m_bAutoSmartScroll = false;
		
			//
			document.getElementById("mContactsAutoCompMenu").innerHTML = '';
				
			var sData = data;
				
			if (sData == "@@no_contacts")
			{
				fnDocOnClick();
				m_iCurentAutoComp = -1;
				sHTMLData = 'No Contacts found';
				return;
			}
			
			mBTEMPAutoBlure = false;
			    
			var m_CDelimiter	="{]";
		    var m_RDelimiter	="-|m2|w|r|-";
		
		    var cell_arr;
			var row_arr= sData.split(m_RDelimiter);
			var iIndex =0;
			var iTotalContacts = 0;
			var MMMTEMP = "";
			
			m_TotalAutoComp = 0;
		    m_iCurentAutoScroll = 1;
		    
		    var sStrAutoComp = '';
			
			while (iIndex < row_arr.length)
			{
				cell_arr			= row_arr[iIndex].split(m_CDelimiter);
				f_ContactsID        = cell_arr[0];
				f_FName		    	= fnEscapeHtml(cell_arr[1]);
				f_LName		    	= fnEscapeHtml(cell_arr[2]);
				f_Email         	= fnEscapeHtml(cell_arr[3]);
				f_isGroup           = cell_arr[4];
				//m_SearchQ = document.getElementById("g_member").value
				
		        if (f_isGroup == "1")
		        {
		            sFullName = cell_arr[3];
		            f_FName = f_LName;
		            f_LName = "";
		            sIcon = sIconGroup;
		            sHTMLEmail = '';
		        }
		        else
		        {
		            sIcon = sIconCon;
		            sHTMLEmail = ReplaceAllCase(f_Email, m_SearchQ, ('<b>' + m_SearchQ + '</b>'), true);
		        }
		
		        if (f_FName.length > 0)
		        {
		            if (f_LName.length > 0)
		            {
		                f_Name = f_FName + ' ' + f_LName;
		                f_FNameHTML = ReplaceAllCase(f_FName, m_SearchQ, ('<b>' + m_SearchQ + '</b>'), true) + ' ' + ReplaceAllCase(f_LName, m_SearchQ, ('<b>' + m_SearchQ + '</b>'), true);
		            }
		            else
		            {
		            	f_Name =  f_FName;
		            	f_FNameHTML = ReplaceAllCase(f_FName, m_SearchQ, ('<b>' + m_SearchQ + '</b>'), true);
		            }
		        }
		        else
		        {
		        	f_Name = cell_arr[3];
		        	f_FNameHTML = ReplaceAllCase(cell_arr[3], m_SearchQ, ('<b>' + m_SearchQ + '</b>'), true);
		        	sHTMLEmail = '';
		        }
		           
		        sStrAutoComp += '<a id="autoEmail' + m_TotalAutoComp + '" aindex="' + m_TotalAutoComp + '" onclick="fnInsertRTEEmail(this)" onmouseout="fnAutoCompMouseOver(this, false, \'mContactsAutoCompMenu\')" onmouseover="fnAutoCompMouseOver(this, true, \'mContactsAutoCompMenu\')" href="JavaScript:" cname="' + f_Name + '" cemail="' + f_Email + '" cgroup="' + f_isGroup + '" class="menulink">' + sIcon + '&nbsp;&nbsp;&nbsp;&nbsp;' + f_FNameHTML + '<br><img  src="' + m_sRessIMGURL + 'trans.png" style="height:16px; width:16px;"/>&nbsp;&nbsp;&nbsp;&nbsp;' + sHTMLEmail + '</a>';
						
		        iTotalContacts +=1;
		        m_TotalAutoComp +=1;
		        iIndex++;
			}	 
			
			//clear menus for filter and rte
			document.getElementById("mFilterFromEmailsAutoCompMenu").innerHTML = '';
			document.getElementById("mContactsAutoCompMenu").innerHTML = '';

			
			document.getElementById("mContactsAutoCompMenu").innerHTML = sStrAutoComp;
		
		    m_TotalAutoComp = iTotalContacts;
		
			var xy = YAHOO.util.Dom.getXY($(oCurrentAutoTextBox).attr('id'));
			
			xy[1] += 30 ;
			
		 	mPOPOptLastVisablesMenuID = null;
			fnShowPOPOpt('rte_subject', 'mContactsAutoCompMenu', 0,0);
			
			$("#mPOPOpt").offset({ top: xy[1]});
			m_iCurentAutoComp = 0;  
			$("#autoEmail0").addClass("menulinkhover");
		
			fnAutoCompSmartScroll();

			////////////
			
		}
   	});



}


//::::::: 
//:::::::
function fnCheckFilterFromEmails(ObjTXT, evt)
{

	evt = (evt) ? evt : event;
	var charCode = (evt.charCode) ? evt.charCode :
		((evt.which) ? evt.which : evt.keyCode);
		
	        
	if ( (charCode == 40) || (charCode == 38) ) 
 	{
		//Set mouse focus and move cursor to end of input
		$(oCurrentAutoTextBox).focus();
		$(oCurrentAutoTextBox).val($(oCurrentAutoTextBox).val());
			
			return;
	}

	
    if ( (ObjTXT.value.length == 0) || (ObjTXT.value == " ") || (ObjTXT.value.trim() == "" )  )
    {
        document.getElementById("mPOPOptFiltersFromEmails").style.visibility= "hidden"; 
        return;
    }
    
    if ( ( $(oCurrentAutoTextBox).val() == ';') || ( $(oCurrentAutoTextBox).val() == ',') )
    {
    	$(oCurrentAutoTextBox).val('');
    	return;
 	}
  
 	m_SearchQ  = ObjTXT.value;
 	m_SearchQ  = m_SearchQ.trim();
 	
	sEmail = m_sUsername + '@' + m_sDomain;
	var sURL = '../../contacts/contacts_action.asp?Action=autocomp&SearchQuery=' + encodeURIComponent(m_SearchQ) + '&ConType=global&useremail=' + sEmail;

	$.ajax({
     type: "POST",
     url: '../../contacts/contacts_action.asp',
     data: 'Action=autocomp&SearchQuery=' + encodeURIComponent(m_SearchQ) + '&ConType=global&useremail=' + sEmail, 
     success: function(data) {
      
			
			////////////
			m_bAutoSmartScroll = false;
		
			//
			document.getElementById("mFilterFromEmailsAutoCompMenu").innerHTML = '';
				
			var sData = data;
				
			if (sData == "@@no_contacts")
			{
				document.getElementById("mPOPOptFiltersFromEmails").style.visibility = "hidden";
				m_iCurentAutoComp = -1;
				sHTMLData = 'No Contacts found';
				return;
			}
			
			mBTEMPAutoBlure = false;
			    
			var m_CDelimiter	="{]";
		    var m_RDelimiter	="-|m2|w|r|-";
		
		    var cell_arr;
			var row_arr= sData.split(m_RDelimiter);
			var iIndex =0;
			var iTotalContacts = 0;
			var MMMTEMP = "";
			
			m_TotalAutoComp = 0;
		    m_iCurentAutoScroll = 1;
		    
		    var sStrAutoComp = '';
			
			while (iIndex < row_arr.length)
			{
				cell_arr			= row_arr[iIndex].split(m_CDelimiter);
				f_ContactsID        = cell_arr[0];
				f_FName		    	= fnEscapeHtml(cell_arr[1]);
				f_LName		    	= fnEscapeHtml(cell_arr[2]);
				f_Email         	= fnEscapeHtml(cell_arr[3]);
				f_isGroup           = cell_arr[4];
				//m_SearchQ = document.getElementById("g_member").value
				
		        if (f_isGroup == "1")
		        {
		            iIndex++;
		            continue;
		        }
		        else
		        {
		            sIcon = sIconCon;
		            sHTMLEmail = ReplaceAllCase(f_Email, m_SearchQ, ('<b>' + m_SearchQ + '</b>'), true);
		        }
		
		        if (f_FName.length > 0)
		        {
		            if (f_LName.length > 0)
		            {
		                f_Name = f_FName + ' ' + f_LName;
		                f_FNameHTML = ReplaceAllCase(f_FName, m_SearchQ, ('<b>' + m_SearchQ + '</b>'), true) + ' ' + ReplaceAllCase(f_LName, m_SearchQ, ('<b>' + m_SearchQ + '</b>'), true);
		            }
		            else
		            {
		            	f_Name =  f_FName;
		            	f_FNameHTML = ReplaceAllCase(f_FName, m_SearchQ, ('<b>' + m_SearchQ + '</b>'), true);
		            }
		        }
		        else
		        {
		        	f_Name = cell_arr[3];
		        	f_FNameHTML = ReplaceAllCase(cell_arr[3], m_SearchQ, ('<b>' + m_SearchQ + '</b>'), true);
		        	sHTMLEmail = '';
		        }
		           
		        sStrAutoComp += '<a id="autoEmail' + m_TotalAutoComp + '" aindex="' + m_TotalAutoComp + '" onclick="fnInsertFilterFromEmail(this, \'\'); event.stopPropagation()" onmouseout="fnAutoCompMouseOver(this, false, \'mFilterFromEmailsAutoCompMenu\')" onmouseover="fnAutoCompMouseOver(this, true, \'mFilterFromEmailsAutoCompMenu\')" href="JavaScript:" cname="' + f_Name + '" cemail="' + f_Email + '" cgroup="' + f_isGroup + '" class="menulink">' + sIcon + '&nbsp;&nbsp;&nbsp;&nbsp;' + f_FNameHTML + '<br><img  src="' + m_sRessIMGURL + 'trans.png" style="height:16px; width:16px;"/>&nbsp;&nbsp;&nbsp;&nbsp;' + sHTMLEmail + '</a>';
						
		        iTotalContacts +=1;
		        m_TotalAutoComp +=1;
		        iIndex++;
			}
			
			//clear both menus for filter and rte
			document.getElementById("mFilterFromEmailsAutoCompMenu").innerHTML = '';
			document.getElementById("mContactsAutoCompMenu").innerHTML = '';
	 
			
			document.getElementById("mFilterFromEmailsAutoCompMenu").innerHTML = sStrAutoComp;
					
		    m_TotalAutoComp = iTotalContacts;
		
			m_iCurentAutoComp = 0;  
			
			$("#autoEmail0").addClass("menulinkhover");
		
			fnAutoCompSmartScroll();
			
			fnShowmPOPOptFiltersFromEmails('txtFilterFromEmails', 'mFilterFromEmailsAutoCompMenu', 0,0);

			////////////
			
		}
   	});

}


//:::::::
//:::::::
function fnInsertFilterFromEmail(oObj, sExternalEmail)
{
	document.getElementById("mPOPOptFiltersFromEmails").style.visibility = "hidden";
	
	var f_isGroup = false;
	var sEmail = '';
	var sFullEmail = '';

	if ( sExternalEmail.length > 3 )
	{
		sEmail = sExternalEmail;
		sFullEmail = sExternalEmail;
		if ( isValidEmailAddress(sEmail) != true )
		{
			UpdateInboxAlert("Please enter a valid email address");
			$('#txtFilterFromEmails').focus();
			return;
		}
	}
	else
	{
		f_isGroup = oObj.getAttribute('cgroup');
		sEmail = oObj.getAttribute('cemail');
		sFullEmail = sEmail;
	
	}

	
	//
	if ( fCheckInboxFromEmailsExist(sEmail) == true)
	{
		UpdateInboxAlert("You've already added this email address");
		$('#txtFilterFromEmails').val('');
		return;
	}
	
	iTotalToEmails +=1;
	irteEmailsCounter +=1;
	
	if (sEmail.length > 20)
		sEmail = sEmail.substr(0, 20) + '...';

	
	var sHTML = '<div id="filter_FromEmail' + irteEmailsCounter + '" style="display:none; background-color:#F4F4F4;  height:24px; line-height:24px; float:left; margin-top:4px;; margin-right:5px; overflow:hidden; text-overflow:ellipsis;  border-bottom:0px #fff solid; padding-left:5px; padding-right:5px;">' +
				'<span id="art" title="' + sFullEmail + '" validemail="yes" class="clsInboxFromEmails" style="cursor:default" >' + sEmail + '</span><div onclick="fnRemoveEmail(\'filter_FromEmail' + irteEmailsCounter + '\')" title="Remove" style="float:right; display:block ; height:25px; line-height:25px; padding-left3px; padding-right:3px"><img  alt="Close" src="' + m_sRessIMGURL + 'basic1-074.png" align="absmiddle" id="" style="height:16px; width:16px; cursor:pointer; padding-top:4.5px; padding-bottom:4.5px"></div>' +
				'</div>';
														
	$(oCurrentAutoTextBox).val('');
	
	$('#divFilterFromEmails').append(sHTML);
	
	$(oCurrentAutoTextBox).focus();
	$("#filter_FromEmail" + irteEmailsCounter).fadeIn(500);
	
	
}



//:::::::
//:::::::
function fnShowmPOPOptFiltersFromEmails(oObj, sMenuID, iCustomX, iCustomY) 
{
	$('#mPOPOptFiltersFromEmails').height('');
	var elements = YAHOO.util.Dom.getChildren('mPOPOptFiltersFromEmails');  
    for (c=0; c < elements.length; c++)
        elements[c].style.display = "none";
	

	var xy = YAHOO.util.Dom.getXY(oObj);
	//xy[0] -= 56;
	xy[1] += 31;

	xy[0] += iCustomX;
	xy[1] += iCustomY;

	YAHOO.util.Dom.setXY('mPOPOptFiltersFromEmails', xy);	
	document.getElementById("mPOPOptFiltersFromEmails").style.visibility= "visible"; 
	document.getElementById(sMenuID).style.display = "";
		
}




//:::::::
//:::::::
function fAXContAutoComp(o)
{

}


//:::::::
//:::::::
function fnAutoCompSmartScroll()
{

	if (m_TotalAutoComp <= m_iMaxAutoComp )
		return;

	m_bAutoSmartScroll = true;
	
	for (var i= m_iMaxAutoComp ; i < m_TotalAutoComp; i++)
	{
		$("#autoEmail" + i).addClass("menulinkHidden");
	}
}


//:::::::
//:::::::
function fnSetRTEEmailFocus(objBox)
{
	oCurrentAutoTextBox = objBox;
	
}


//:::::::
//:::::::	
function fnMoveAutoComList(iValue)
{

	 // $("*").removeClass("hilite");
	 
	  var $kids = null;
	 
	 //auto-comp for filters or RTE?
	 if ( $('#mPOPOptFiltersFromEmails').css( "visibility") == "visible" )
	 {
	 	console.log('VISABLE XXX mPOPOptFiltersFromEmails')
	 
	 	$kids = $("#mFilterFromEmailsAutoCompMenu").children();
	 }
	 else
		$kids = $("#mContactsAutoCompMenu").children();


      var len = $kids.removeClass("menulinkhover").length;
      
      m_iCurentAutoComp += iValue;
      
      if (m_iCurentAutoComp < 0)
      	m_iCurentAutoComp = 0;
      	
      if (m_iCurentAutoComp >= len )
      	m_iCurentAutoComp = len - 1;

	$(("#autoEmail" + m_iCurentAutoComp)).addClass("menulinkhover");
	
	console.log('VISABLE XXX 3333333333333333333333')
	
	if (m_bAutoSmartScroll == true)
	{
		 	len = $kids.addClass("menulinkHidden").length;
	
			iCurrentPage = ( (m_iCurentAutoComp) / m_iMaxAutoComp);
			
			if (parseInt(iCurrentPage) <  iCurrentPage)
           		iCurrentPage = parseInt(iCurrentPage) + 1;
        	else
            	iCurrentPage = parseInt(iCurrentPage);
            	
            var iContactsStart = (iCurrentPage - 1) * m_iMaxAutoComp;
           	var iContactsEnd   = (iCurrentPage ) * m_iMaxAutoComp ;
           	if (iContactsEnd <=0)
           		iContactsEnd = m_iMaxAutoComp;
           	  	
            for (var i = iContactsStart ; i <= iContactsEnd ; i++)
            {
            	$("#autoEmail" + i).removeClass("menulinkHidden");
            }
	}
	

	console.log('VISABLE XXX 222222222222222222222')

}


//:::::::
//:::::::
function fnAutoCompMouseOver(Obj, bValue, sMenuID)
{
	var $kids = $("#" + sMenuID).children();
	var len = $kids.removeClass("menulinkhover").length;
	
	if (bValue == false)
	{
		$(("#" + Obj.getAttribute('id'))).addClass("menulinkhover");
		m_iCurentAutoComp = parseInt(Obj.getAttribute('aindex'));
	}
}


//:::::::
//:::::::
function fnInsertRTEXEmail(sEmail) 
{
	sEmail = sEmail.replace(/ /g,'');
	if (sEmail.length <= 1)
		return; 

	//console.log(sEmail) 

	var l_oCurrentAutoTextBox = oCurrentAutoTextBox;
	
	//console.log('sEmail:' + sEmail)
	
	sEmail = sEmail.replace(/,/gi, ';');
		
	var aEmailList = sEmail.split(";");			
	for(var i=0; i < aEmailList.length; i++)
	{
		sEmail = aEmailList[i];
		if (sEmail.length > 2)
		{
			///////
			if ( isValidEmailAddress(sEmail)  )
			{
				$.ajax({
			
			     type: "GET",
			     url: '../../app/Utilities/RecipientVerification.asp',
			     data: "vcemail=" + sEmail,
			     sEmail: sEmail, 
			     success: function(data) {
			     		if ( (data == 0) )
							fnInsertRTEXEmailHTML(this.sEmail, l_oCurrentAutoTextBox, true, true); 
						else if ( (data == -11) )	
							fnInsertRTEXEmailHTML(this.sEmail, l_oCurrentAutoTextBox,  true, false);
						else
							fnInsertRTEXEmailHTML(this.sEmail, l_oCurrentAutoTextBox,  false, true);
					}
			
			   });
		   
		   }
		   else
		   		fnInsertRTEXEmailHTML(sEmail, l_oCurrentAutoTextBox,  false, false)
			///////
		}
		
		l_oCurrentAutoTextBox = oCurrentAutoTextBox;
	
	}

}	

//:::::::
//:::::::
function fnInsertRTEXEmailBuilk(sEmail)
{
	sEmail = trim(sEmail); 

	var l_oCurrentAutoTextBox = oCurrentAutoTextBox;

	if (sEmail.length <= 1)
		return;
			
	
	
	
	
}


//:::::::
//:::::::
function fnInsertRTEXContactEmail(sEmail)
{
	sEmail = trim(sEmail); 

	var l_oCurrentAutoTextBox = oCurrentAutoTextBox;
	
	iContactType = sEmail.split("||")[1];
	sEmail = sEmail.split("||")[0];
	

	if (sEmail.length <= 1)
		return;
	
	//is it a group?	
	if ( iContactType == "2")
	{
		fnInsertRTEXEmailHTML(sEmail, l_oCurrentAutoTextBox,  true, true);
		return;
	}
			
	if ( isValidEmailAddress(sEmail)  )
	{
	
		$.ajax({
	
	     type: "GET",
	     url: '../../app/Utilities/RecipientVerification.asp',
	     data: "vcemail=" + sEmail, 
	     success: function(data) {
	     
	     		if ( (data == 0) )
					fnInsertRTEXEmailHTML(sEmail, l_oCurrentAutoTextBox, true, true)
				else if ( (data == -11) )	
					fnInsertRTEXEmailHTML(sEmail, l_oCurrentAutoTextBox,  true, false)
				else
					fnInsertRTEXEmailHTML(sEmail, l_oCurrentAutoTextBox,  false, true)	
	    
			}
	
	   });
   
   }
   else
   		fnInsertRTEXEmailHTML(sEmail, l_oCurrentAutoTextBox,  false, false)
	
	
	
	
}


function fnInsertRTEXEmailHTML(sEmail, l_oCurrentAutoTextBox,  bValid, bM2WEmail)
{

	var sInvalidEmailCss = 'border-bottom: #FF0000 1px dashed;';
	var sValidEmail = 'no';

	if (bValid)
	{
		sInvalidEmailCss = '';
		sValidEmail = 'yes'; 
	}

	sFullEmail = sEmail;
	
	if (sEmail.length > 20)
		sEmail = sEmail.substr(0, 20) + '...';

	iTotalToEmails +=1;
	irteEmailsCounter +=1;
	
	
	var sHTML = '<div id="rte_emailto' + irteEmailsCounter + '" style="display:none; background-color:#F4F4F4;  height:24px; line-height:24px; float:left;  margin-top:4px; margin-right:5px; overflow:hidden; text-overflow:ellipsis;  border-bottom:0px #fff solid; -webkit-border-radius: 4px; -moz-border-radius: 4px; padding-left:5px; padding-right:5px;">' +
				'<a id="art" href="javascript:fnContactsAutoCompOpt(\'rte_emailto' + irteEmailsCounter + '\');" title="' + sFullEmail + '" class="rteEmail jqTootltipx"  validemail="' + sValidEmail + '" bm2wemail="' + bM2WEmail + '" style="' + sInvalidEmailCss + '"><span style="' + sInvalidEmailCss + '">' + sEmail + '</span></a><div onclick="fnRemoveEmail(\'rte_emailto' + irteEmailsCounter + '\')" class="jqTootltipx"  style="float:right; display:block ; height:25px; line-height:25px; padding-left3px; padding-right:3px"><img  alt="Close" src="' + m_sRessIMGURL + 'basic1-074.png" align="absmiddle" id="" style="height:16px; width:16px; cursor:pointer; padding-top:4.5px; padding-bottom:4.5px"></div>' +
				'</div>';
	
															
	$(l_oCurrentAutoTextBox).before(sHTML);
	$(l_oCurrentAutoTextBox).focus();
	
	$("#rte_emailto" + irteEmailsCounter).fadeIn(500);
	
	fnREsizeRTEInput();
	fnResizeRTE();
	
	
	
		if( (mRTEMsgAction == 'r') || (mRTEMsgAction == "rall")  )
		{
			$('#rte_to').click();
			$('#RichEditIFrameID').contents().find('body').get(0).focus();
			oCurrentAutoTextBox = l_oCurrentAutoTextBox;
		}	
	
	
	//$(".jqTootltip").tipTip({fadeOut:0});


}


//:::::::
//:::::::
function fnInsertRTESubject(sSubject)
{

	if (sSubject.length <= 1)
		return;
			
	if (sSubject.length > 20)
		sSubject= sSubject.substr(0, 20) + '...';

	var sHTML = '<div id="rte_subjectBlock" style="display:none; background-color:#F4F4F4;  height:24px; line-height:24px; float:left;  margin-top:4px; margin-right:5px; overflow:hidden; text-overflow:ellipsis;  border-bottom:0px #fff solid; -webkit-border-radius: 4px; -moz-border-radius: 4px; padding-left:5px; padding-right:5px;">' +
				'<a id="art" href="javascript:" title="' + sSubject + '" class="rteEmail jqTootltipx"  style="">' + sSubject + '</a><div onclick="fnRemoveSubject()" class="jqTootltipx"  style="float:right; display:block ; height:25px; line-height:25px; padding-left3px; padding-right:3px"><img  alt="Close" src="' + m_sRessIMGURL + 'basic1-074.png" align="absmiddle" id="" style="height:16px; width:16px; cursor:pointer; padding-top:4.5px; padding-bottom:4.5px"></div>' +
				'</div>';
											
	$('#rte_subject').before(sHTML);
	$('#rte_subject').focus();
	
	$("#rte_subject").css({display:'none'});
	$("#rte_subjectBlock").fadeIn(500);
	
	fnREsizeRTEInput();
	fnResizeRTE();
	$(".jqTootltip").tipTip();
}

//:::::::
//:::::::

function fnRemoveSubject()
{


}

//:::::::
//:::::::
function fnInsertRTEEmail(oObj)
{

	//###TEMP to resolve duplicates with blure
	if (mBTEMPAutoBlure)
	{
		mBTEMPAutoBlure = false;
		$(oCurrentAutoTextBox).prev().remove();
		iTotalToEmails -=1;
	}

	
	var f_isGroup = oObj.getAttribute('cgroup');
	var sEmail = '';
	
	if ( f_isGroup == "1" )	
	{
		sEmail = oObj.getAttribute('cname');
	}
	else
	{
		sEmail = oObj.getAttribute('cname');
	}
	
	iTotalToEmails +=1;
	irteEmailsCounter +=1;
	
	if (sEmail.length > 20)
		sEmail = sEmail.substr(0, 20) + '...';

	
	var sHTML = '<div id="rte_emailto' + irteEmailsCounter + '" style="display:none; background-color:#F4F4F4;  height:24px; line-height:24px; float:left; margin-top:4px;; margin-right:5px; overflow:hidden; text-overflow:ellipsis;  border-bottom:0px #fff solid; padding-left:5px; padding-right:5px;">' +
				'<a id="art" href="javascript:fnContactsAutoCompOpt(\'rte_emailto' + irteEmailsCounter + '\');" title="' + oObj.getAttribute('cemail') + '" validemail="yes" class="rteEmail jqTootltipx">' + sEmail + '</a><div onclick="fnRemoveEmail(\'rte_emailto' + irteEmailsCounter + '\')" class="jqTootltipx"  style="float:right; display:block ; height:25px; line-height:25px; padding-left3px; padding-right:3px"><img  alt="Close" src="' + m_sRessIMGURL + 'basic1-074.png" align="absmiddle" id="" style="height:16px; width:16px; cursor:pointer; padding-top:4.5px; padding-bottom:4.5px"></div>' +
				'</div>';
														
	//var node = $('<div id="hasalink"><a class="blah" href="#">my link!</a></div>');
	//$('#rte_to').append(node);
	//$("#rte_to").append("<div>hello world</div>")
	
	$(oCurrentAutoTextBox).val('');
	
	$(oCurrentAutoTextBox).before(sHTML);
	$(oCurrentAutoTextBox).focus();
	
	
	$('#rte_ToCc').scrollTop($('#rte_ToCc')[0].scrollHeight);
	
	$("#rte_emailto" + irteEmailsCounter).fadeIn(500);
	
	fnREsizeRTEInput();
	fnResizeRTE();
	$(".jqTootltip").tipTip({fadeOut:0});
}

function fnEmptyAutoComp(sAction)
{
	if ( sAction == 'to' )
		$("#rtEmaillistTo").children("div").remove();

	if ( sAction == 'cc' )
		$("#rtEmaillistCc").children("div").remove();

	if ( sAction == 'bcc' )
		$("#rtEmaillistBcc").children("div").remove();
		
	if ( sAction == 'subject' )
		document.getElementById('rte_subject').value = '';

		
	fnREsizeRTEInput();
	fnResizeRTE();

		
}


//:::::::
//:::::::
function fnrteCheckSubject(oObj) 
{
	//fnRTEUpdate();

	//if (oObj.value.length > 3)
	//	 $("#rteAutoremoveallSubject").fadeIn(800); 
	//else
	//	 $("#rteAutoremoveallSubject").fadeOut(800);
	
	var sSubject = oObj.value;
	
	$('#divRTETitleMin').html(htmlEncode(sSubject));
	$('#divRTETitle').html(htmlEncode(sSubject));
	
	if (m_bManualPriority) 
		return;
		 
	sSubject= sSubject.toLowerCase();
		
	if ( (sSubject.indexOf("significant") == 0) || (sSubject.indexOf("urgent") == 0) || (sSubject.indexOf("critical") == 0) || (sSubject.indexOf("imperative") == 0) || (sSubject.indexOf("important") == 0) || (sSubject.indexOf("time-sensitive") == 0) || (sSubject.indexOf("high-priority") == 0) || (sSubject.indexOf("top-priority") == 0) || (sSubject.indexOf("crucial") == 0) || (sSubject.indexOf("serious") == 0) || (sSubject.indexOf("warning") == 0) || (sSubject.indexOf("hazardous") == 0) || (sSubject.indexOf("emergency") == 0) )
	{			
			if (mRTEPriority == '1')
			{							
				fnRTEPriority('2');
				//#708194
			}
	}
	else
	{
		if (mRTEPriority == '2')
		{	
			fnRTEPriority('1');
		}
	}
		 
}


//:::::::
//:::::::
function fnContactsAutoCompOpt(sID)
{
	//fnAddDebug($('#' + sID).parent().attr('id'))
	//alert( $(this).closest('div').attr('id') );

	var sParntID = $('#' + sID).parent().attr('id');

	document.getElementById("mContactsAutoCompOpt").innerHTML = sHTMLMenu = '';
	
	var sEmail = $('#' + sID).children("a").attr('title');
	
	document.getElementById("mContactsAutoCompOpt").innerHTML = sHTMLMenu +=  '<a onclick="fnEditAutoEmail(\'' + sID + '\')" emailDivID="' + sID + '" href="JavaScript:" class="menulink">' + mcLang.Text('lang_drive_33',1) + '</a>';
	document.getElementById("mContactsAutoCompOpt").innerHTML = sHTMLMenu +=  '<a onclick="fnRemoveEmail(\'' + sID + '\')" emailDivID="' + sID + '" href="JavaScript:" class="menulink">' + mcLang.Text('lang_Gen_57',1) + '</a>';
	
	if ($.browser.name != "safari")
		document.getElementById("mContactsAutoCompOpt").innerHTML = sHTMLMenu +=  '<a  emailDivID="' + sID + '" href="JavaScript:" class="menulink"><span class="btnclipboard" data-clipboard-text="' + sEmail + '">' + m_sClipboard1 + '</span></a>';

	
	if ( sParntID == 'rtEmaillistCc' || sParntID == 'rtEmaillistBcc' )
		document.getElementById("mContactsAutoCompOpt").innerHTML = sHTMLMenu +=  '<a onclick="fnMoveAutoEmail(\'to\',\'' + sID + '\')" emailDivID="' + sID + '" href="JavaScript:" class="menulink">' + m_sRTEMoveTo + ':</a>';
	
	if ( sParntID == 'rtEmaillistTo' || sParntID == 'rtEmaillistBcc' )
		document.getElementById("mContactsAutoCompOpt").innerHTML = sHTMLMenu +=  '<a onclick="fnMoveAutoEmail(\'cc\',\'' + sID + '\')" emailDivID="' + sID + '" href="JavaScript:" class="menulink">' + m_sRTEMoveCc + ':</a>';
	
	if ( sParntID == 'rtEmaillistTo' || sParntID == 'rtEmaillistCc' )
		document.getElementById("mContactsAutoCompOpt").innerHTML = sHTMLMenu += '<a onclick="fnMoveAutoEmail(\'bcc\',\'' + sID + '\')" emailDivID="' + sID + '" href="JavaScript:" class="menulink">' + m_sRTEMoveBcc + ':</a>';
	
	//fnShowPOPOpt('rte_to', 'mContactsAutoCompOpt', 0,0);
	fnShowPOPOpt(sID, 'mContactsAutoCompOpt', 0,-2);
	
	
			//:::::::: clipboard ::::::::::::
			var clipboard = new Clipboard('.btnclipboard');
			clipboard.on('success', function(e) {
			
			fnDocOnClick();
			setTimeout(function() {
	            sMessage = m_sClipboard2;
				sMessage = sMessage.replace(/_xxEmailxx_/gi, ("'" + e.text + "'") );
				UpdateInboxAlert(sMessage, '');
			}, 100);	

			
				

			
			    console.info('Action:', e.action);
			    console.info('Text:', e.text);
			    console.info('Trigger:', e.trigger);
			
			    e.clearSelection();
			    
			    clipboard.destroy();
			});
			clipboard.on('error', function(e) {
			    console.error('Action:', e.action);
			    console.error('Trigger:', e.trigger);
			});
			//:::::::: clipboard ::::::::::::

}

//:::::::
//:::::::
function fnShowCcBcc(sAction)
{
	if (sAction == 'cc')
	{
		$("#aAddCc").css({display:'none'});
 		$("#rtEmaillistCcRow").fadeIn(300);
 		$('#rte_cc').focus();

	}
		
	if (sAction == 'bcc')
	{
		$("#aAddBcc").css({display:'none'});
		//$("#rtEmaillistBccRow").css({display:''});
		$("#rtEmaillistBccRow").fadeIn(300);
		$('#rte_bcc').focus();
	}

	
	fnREsizeRTEInput();
	fnResizeRTE();
	fnResizeRTE();


		setTimeout(function() {
			fnREsizeRTEInput();
			fnResizeRTE();

		}, 800);


}

//:::::::
//:::::::
function fnEditAutoEmail(sEmailDivID)
{

	var sEmail = $('#' + sEmailDivID).children("a").attr('title');
	fnRemoveEmail(sEmailDivID);
	
	$(oCurrentAutoTextBox).val(sEmail);
	$(oCurrentAutoTextBox).focus();
}

//:::::::
//:::::::
function fnMoveAutoEmail(sAction, sEmailDivID)
{
	if (sAction == 'to')
		oCurrentAutoTextBox = $('#rte_to');
		
	if (sAction == 'cc')
	{
		oCurrentAutoTextBox = $('#rte_cc');
		fnShowCcBcc('cc');
	}

	if (sAction == 'bcc')
	{
		oCurrentAutoTextBox = $('#rte_bcc');
		fnShowCcBcc('bcc');
	}
		
	
	$(oCurrentAutoTextBox).before($("#" + sEmailDivID));	
	
	$("#" + sEmailDivID).css({display:'none'});
	$("#" + sEmailDivID).fadeIn(500);

	
	fnREsizeRTEInput();
	fnResizeRTE();
	
	$(oCurrentAutoTextBox).focus();


}

//:::::::
//:::::::
function fnRemoveEmail(sEmailID)
{
	//fnRTEUpdate();

	iTotalToEmails -=1;
	document.getElementById(sEmailID).style.display = "none";
	$(('#'+ sEmailID)).remove();
	fnREsizeRTEInput();
	fnResizeRTE();
}


//:::::::
//:::::::
function ReplaceAllCase( str, searchTerm, replaceWith, ignoreCase )
{
    //var regex = "/"+searchTerm+"/g";
    //if( ignoreCase ) regex += "i";
    //return str.replace( eval(regex), replaceWith );
   
    if (str.length == 0)
        return str;
        
    if ( str.toLowerCase().indexOf(searchTerm.toLowerCase()) != 0 ) 
        return str;
        
    sNewStr  = str.slice(0, searchTerm.length);
    sNewStr  = '<b>' + sNewStr + '</b>';
    sNewStr += str.slice(searchTerm.length);
    
    return sNewStr;
}

	//Function to convert hex format to a rgb color
	function rgb2hex(rgb) {
	var hexDigits = ["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"];
	rgb = rgb.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);
	function hex(x) {
	return isNaN(x) ? "00" : hexDigits[(x - x % 16) / 16] + hexDigits[x % 16];
	}
	return "#" + hex(rgb[1]) + hex(rgb[2]) + hex(rgb[3]);
	}



function fnDragZoneFullscreen(bFull)
{
	if (bFull)
	{
		$("#divDropScreen").css( "height", $(window).height() - 300 );
		//$("#divDropScreen").css( "line-height", $(window).height() - 500 );
		
		
		$("#divDropScreen").css( "width", $(window).width() - 100 );
	
		$('#divMagicBox').css('visibility', 'hidden');
		$("#DropZone-fullscreen").css( "display", "" );
		$("#divDropScreen").css( "display", "" );
		
		
		
		$(function() {
		    $('#divDropScreen').css({
     		position:'absolute',
        	left: ($(window).width() - $('#divDropScreen').outerWidth())/2,
        	top: ($(window).height() - $('#divDropScreen').outerHeight())/2		    });
		});
				
	}
	else
	{
		$('#divMagicBox').css('visibility', 'visible');
		$("#DropZone-fullscreen").css( "display", "none" );
		$("#divDropScreen").css( "display", "none" );
		
		fnMagicBoxMenu(false);
		
	}
	
}


//:::::::
//:::::::
function fnMagicBoxMenu(bShow)
{

	if (bShow)
	{
		$(function() {
		
			var iTop =  ( ($(window).height() - $('#divMagicBoxMenu').outerHeight())/2) - 100;
			if (iTop < 20)
				iTop += 100;
		
		    $('#divMagicBoxMenu').css({
     		position:'absolute',
     		display:'block',
        	left: ($(window).width() - $('#divMagicBoxMenu').outerWidth())/2,
        	top: iTop		    });
		});
		
		$('#MBoxDoneBtn').html(mcLang.Text('lang_mbox_37',1));
		
		$("#divDropScreen").css( "display", "none" );
	}
	else
	{
		$("#divMagicBoxMenu").css( "display", "none" );

	}


}


// :::::: DRIVE BOX

function fnDriveBoxClose()
{
	fnOpenDriveBoxMenu(false);
}

function fnDriveBoxAttachBtn(iType)
{
	if ( m_bDriveBoxAttachBtn == false)
		return;

    var i=0;

	var sfileid = '';	
	miTotalSelectedBackPackFiles = 0;
	for (i=0; i < miTotalBackpackFile; i++)
	{
		ObjBox = document.getElementById(("pkc" + i));
        if (ObjBox == null)
	    	continue;       
        if (ObjBox.checked)
        {
        	//insert as links?
			if (iType == 0)
            	sfileid += $(ObjBox).attr('fileid') + '[]' + $('#attname' + i).text() + '|';  
            else
            	sfileid += $(ObjBox).attr('fileid') + '|'; 
            miTotalSelectedBackPackFiles +=1;
        } 
	 }
	 
	 if ( sfileid.length < 5)
	 	return;
	 		 	 	

		//insert as links?
		if (iType == 0)
		{
		    sFileID = sfileid.split("|");   	
			var sHTML = '';
		
			var iTotalFiles = 0;
			for(i=0; i < sFileID.length; i++)
			{
			 	if (sFileID[i].length > 1)
			 	{
			 		sName = sFileID[i].split('[]')[1];
			 		
			 		m_iTotalDriveLinks +=1;
			 		
			 		sAction = '&nbsp;<img src="' + m_sRessIMGURL + 'close_16.png" class="cssRemoveShare" onclick="parent.fnRemoveDriveLinks(\'' + m_iTotalDriveLinks + '\')" title="' + m_sRemoveLangvar + '" style="height:16px; width:16px; cursor:pointer; vertical-align: middle"/>';
			
					sURL = location.protocol + '//' + location.host + '/FileCabinet/Download.asp?User=' + m_sUsername + '@' + m_sDomain + '&app=web&FID=' + sFileID[i].split('[]')[0];   					
					sHTML += '<div ondragstart="return false;" id="att_drive' + m_iTotalDriveLinks + '" style="cursor:pointer; clear: both; height:27px; color:#535353; font-family: Arial, Helvetica, sans-serif; FONT-SIZE: 11px; background-color:#F4F4F4; -webkit-border-radius: 4px; -moz-border-radius: 4px; padding-left:5px; margin-bottom:8px;">' +
					  		'<a class="UploadFile" href="' +  sURL + '" style="float:left; width:295px; line-height:24px;cursor:pointer; text-decoration:none !important; color:#535353"><div style="float:left; width:40px; line-height:24px; text-align:right; display:none">&nbsp;&nbsp;</div>&nbsp;&nbsp;' + ShowFileIcon(sName,30,'') + '</a>' +
					  		'<div style="float:right; width:25px; line-height:22px;" class="rteSharedFiles">' + sAction + '</div>' +
					  		'</div>';
					
					iTotalFiles +=1;
				}
			}
			
			
			sHTML = '<br><div style="padding:5px; width:326px">' + sHTML + '</div>';
	
	
			//send as link
	//		sURL = location.protocol + '//' + location.host + '/FileCabinet/Download.asp?User=' + m_sUsername + '@' + m_sDomain + '&app=web&FID=' + arrData[3];   
	//		sURL = '<a _moz_dirty=""target="_blank" href="' + sURL + '">' + ShowFileIcon(event.file.get("name"),0,''); + '</a>'
	//		sHTML= '<br>' + sURL;
	
			sMsgBody = $('#RichEditIFrameID').contents().find('body').html();
			sMsgBody = sMsgBody.split('<div origmsg="yes"></div>');
			if ( sMsgBody.length > 1 )
					sMsgBody = sMsgBody[0] + sHTML + '<div origmsg="yes"></div>' + sMsgBody[1];
			else
					sMsgBody = sMsgBody[0] + sHTML ;
			$('#RichEditIFrameID').contents().find('body').html(sMsgBody);
		
		}
		else //as attachments
		{
		
			 $.ajax({
		     type: "GET",
		     url: '../../app/backpack_RTE_f.asp',
		     data: "action=attachfile&FilesID=" + sfileid, 
		     success: function(data) {
		          
					fnBackPack_AttachFileRTE(data, true)
					
				}
		   });
		
		
		}
		//



		
	fnOpenDriveBoxMenu(false);
}

function fnDriveBoxBack()
{
	$( "#CallBackpack" ).prop('checked', false);
	
	m_bDriveBoxBackuidFolderID.splice( (m_bDriveBoxBackuidFolderID.length - 1), 1);
	var sParentFolder =  m_bDriveBoxBackuidFolderID.splice( (m_bDriveBoxBackuidFolderID.length - 1), 1);

	fnDriveBoxGetFolders(sParentFolder); 
}

//:::::::
//:::::::
function CDriveBox(ObjBox, e)
{
	var ParentRow = ObjBox.parentNode.parentNode;
    var f_iIndex = ParentRow.getAttribute("cindex");
        
    if (ObjBox.checked)
		ObjBox.parentNode.parentNode.style.backgroundColor = sCheckboxCheckedColor;
     else
		ObjBox.parentNode.parentNode.style.backgroundColor = "";
            
	YAHOO.util.Event.stopPropagation(e);
	
	$("#DriveBoxeAttachBtn").addClass( "yui3-button-disabled" );
	$("#DriveBoxeInsertBtn").addClass( "yui3-button-disabled" ); 
	
	
	m_bDriveBoxAttachBtn = false;
	
	var iTotalSelect = 0;
	for (var i=0; i < miTotalBackpackFile; i++)
	{
		    ObjBox = document.getElementById(("pkc" + i));
		    
            if (ObjBox == null)
	            continue;
	            
            if (ObjBox.checked)
            {
				$("#DriveBoxeAttachBtn").removeClass( "yui3-button-disabled" );
				$("#DriveBoxeInsertBtn").removeClass( "yui3-button-disabled" );
				iTotalSelect +=1;
			 	m_bDriveBoxAttachBtn = true;
            }     
	 }
	 
	 if (iTotalSelect == 1)
	 {
	 	$('#DriveBoxeInsertBtn').html(mcLang.Text('lang_drive_37',1));
	 	$('#DriveBoxeAttachBtn').html(mcLang.Text('lang_drive_38',1)); 
	 }
	 else
	 {
	 	$('#DriveBoxeInsertBtn').html(mcLang.Text('lang_drive_37',1));
	 	$('#DriveBoxeAttachBtn').html(mcLang.Text('lang_drive_38',1));
	 }
	 
	 if ( iTotalSelect == 0 )
		$( "#CallBackpack" ).prop('checked', false);
	else if ( iTotalSelect == miTotalBackpackFile )
	{
		$( "#CallBackpack" ).prop('checked', true);
	}
	else
		$( "#CallBackpack" ).prop('checked', false);
	 
}


//:::::::
//:::::::
function fnOpenDriveBoxMenu(bShow)
{
	document.getElementById('divDriveBoxList').innerHTML = '';
	if (bShow)
	{
	
		$("#DriveBoxeAttachBtn").removeClass( "yui3-button-disabled" );
		$("#DriveBoxeAttachBtn").addClass( "yui3-button-disabled" );
		$("#DriveBoxeInsertBtn").removeClass( "yui3-button-disabled" );
		$("#DriveBoxeInsertBtn").addClass( "yui3-button-disabled" );
		
		m_bDriveBoxAttachBtn = false;
		
		$(function() {
		
			var iTop =  ( ($(window).height() - $('#divDriveBoxMenu').outerHeight())/2) - 100;
			if (iTop < 20)
				iTop += 100;
		
		    $('#divDriveBoxMenu').css({
     		position:'absolute',
     		display:'block',
        	left: ($(window).width() - $('#divDriveBoxMenu').outerWidth())/2,
        	top: iTop		    });
		});
		
		//$('#MBoxDoneBtn').html('Done');
		$("#DropZone-fullscreen").css( "display", "" );
		$("#divDropScreen").css( "display", "none" );
		
		fnDriveBoxLoad();
	}
	else
	{
		$("#divDriveBoxMenu").css( "display", "none" );
		$("#DropZone-fullscreen").css( "display", "none" );

	}

	$('.yui3-button').width('');

}

//:::::::
//:::::::	
function fnDriveBoxShowCheckOpt()
{

	fnShowPOPOpt('DriveBOXCall', 'mMBoxCheckBoxOptions',-10,-7);
		
}


//:::::::
//:::::::
function fnDriveBoxLoad()
{
	m_bDriveBoxBackuidFolderID = ['backpack'];
	fnDriveBoxGetFolders('backpack');
}


//:::::::
//:::::::
function fnDriveBoxSelect(iIndex)
{
	$('#pkc' + iIndex).click(); 
}


var m_bDriveBoxGetFoldersBusy = false;

//:::::::
//:::::::
function fnDriveBoxGetFolders(uidFolderID)
{

	if (m_bDriveBoxGetFoldersBusy)
		return;

	m_bDriveBoxGetFoldersBusy = true;

	//document.getElementById("tiptip_holder").style.display = "none";
	$("#divDriveBoxList").scrollTop();
	
	if ( uidFolderID == 'backpack') 
		document.getElementById("btnDriveBoxBack").style.display = "none";
	else
		document.getElementById("btnDriveBoxBack").style.display = "inline-block";

	$.ajax({

     type: "GET",
     url: '../../app/backpack_api.asp',
     data: "action=getfolders&uidFolderID=" + uidFolderID, 
     success: function(data) {

          	aFolders = [];
			aFolders = YAHOO.lang.JSON.parse(data);

			miTotalBackpackDirs = 0;
          	var sHTML = '';
          	
		    for(var i=0; i < aFolders.length; i++)
		    {
		       	iDivWidth = 110;
		       	iDivNameWidth = 100;
		       	sEditStyleIco = "display:none";
		       	f_sDownloadURL = '';
		       	
		       	sSysfolderCss = '; font-weight:bold';
		       	
		       	sFolderName = aFolders[i].vcName;
		       	switch (sFolderName) 
			    {
			    	case 'Backpack':   
							        sFolderName = 'Drivetop'; //mcLang.Text('Drivetop',1);
                                    break;
			            case 'My Documents':   
							        sFolderName = mcLang.Text('lang_drive_19',1);
							        break;
			            case 'My Notes':   
							        sFolderName = mcLang.Text('lang_drive_22',1);
							        break;
			            case 'My Pictures':   
							        sFolderName = mcLang.Text('lang_drive_20',1);
							        break;
			            case 'My Music':   
							        sFolderName = mcLang.Text('lang_drive_21',1);
							        break;			           
			            case 'My Videos':   
							        sFolderName = mcLang.Text('lang_drive_24',1);
							        break;
			            case 'My Shares':   
							        sFolderName = mcLang.Text('lang_drive_23',1);
							        break;
			            case 'Recycle Bin':   
							        sFolderName = mcLang.Text('lang_drive_18',1); 
							        break;
			            case 'Public Folders':   
							        sFolderName = mcLang.Text('lang_drive_52',1);
							        break;
						default:
									sSysfolderCss = '';
			    }
			    
			    sFolderIcon = m_sRessIMGURL + '1389225692_folder.png';
			    if (mSkinUI == 'telmex')
			    	sFolderIcon = '../../app/ress/theme/Telmex/IMG/folder.png';
			    	
         		sHTML += ''+
				         '<div style="width:' + iDivWidth + 'px; height:110px; font-family: arial,helvetica,sans-serif; font-size: 11px; text-align:center; color:#4c6776; float:left; padding-right:15px" bbViewDir="yes"  atrdid="' + aFolders[i].uidFolderID + '" atrindex="' + i + '" onmouseover="fnDirDragEnterBackPack(this)" onmouseout="fnDirDragLeaveBackPack()" ddtype="dir"   >' +
						 '	<div title="' + mcLang.Text('lang_drive_53',1) + '" class="jqTootltip" onclick="fnDriveBoxGetFolders(\'' + aFolders[i].uidFolderID + '\'), fnBackpackResetFolderSelect()" style="cursor:pointer; float:center;max-height: 150px; ; background-color:#fff; display:inline-block; padding-right:6px"><a class="backpackImgprev" style="display:inline-block"><img src="' + sFolderIcon + '" class="BPFolder"></a></div>' +
						 '	<div style="display:block;  clear:both;  height:22px; line-height:22px; width:' + iDivNameWidth  + 'px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap ' + sSysfolderCss + '">' + sFolderName + '</div>' + 
						 '</div>';
      
				miTotalBackpackDirs += 1;	    
		    }
		    

			document.getElementById('divDriveBoxList').innerHTML = sHTML + '<div style="display:block;  clear:both"></div>';
			
			m_bDriveBoxGetFoldersBusy = false;
			
			fnDriveBoxGetFiles(uidFolderID);
			
			if ( m_bDriveBoxBackuidFolderID[m_bDriveBoxBackuidFolderID.length -1] != uidFolderID)
				m_bDriveBoxBackuidFolderID.push(uidFolderID);
				
			mBackpackFolderID = uidFolderID;
			
			
			//$('#divDriveBoxList').dblclick(function(e){ 
			//    e.preventDefault();
			//})
			

		}

   });
}

//:::::::
//:::::::
function fnDriveBoxGetFiles(uidFolderID)
{

	$.ajax({

     type: "GET",
     url: '../../app/backpack_api.asp',
     data: "action=getfiles&uidFolderID=" + uidFolderID + '&uidShareFolderID=' + m_sBackPackSahresFolderID, 
     success: function(data) {
          
          	aFolders = [];
			aFolders = YAHOO.lang.JSON.parse(data);
			
			var f_sAttachBulk = '';
			miTotalBackpackFile = 0;
          	var sHTML = '';
		    for(var i=0; i < aFolders.length; i++)
		    {				
				f_sFileName = aFolders[i].vcName;
				var ext = f_sFileName.substr(f_sFileName.lastIndexOf('.') + 1);
				ext = ext.toLowerCase();
				bImage = false;

				if ( (ext == 'jpg') || (ext == 'png') || (ext == 'bmp') || (ext == 'jpeg') || (ext == 'gif') || (ext == 'tiff') || (ext == 'tif') )
				{
					imgprev_path = '../../app/backpack_imgprev.asp?uidFileID=' +  aFolders[i].uidFileID;
					sDownloadPath  = aFolders[i].uidFileID; 
					bImage = true;
				}
				else
				{
					imgprev_path = fnFindAttachIcon(aFolders[i].vcName);
					sDownloadPath = aFolders[i].uidFileID;
				}
						
				f_sAttachBulk = f_sAttachBulk + i + ',"' + aFolders[i].uidFileID + '",' + bImage + ',"' + aFolders[i].vcName + '",50,false,"DriveBox","", "' + aFolders[i].sdtCreated + '"' + '|-*_|';
				miTotalBackpackFile += 1;
		    }


			document.getElementById('divDriveBoxList').innerHTML += sHTML + '<div id="DIVAttachPrev"></div>';

			if ( (miTotalBackpackFile + miTotalBackpackDirs) == 0 ) 
			{
			
				document.getElementById('divDriveBoxList').innerHTML = '<div class="MHEmpty">' + mcLang.Text('lang_drive_35',1) + '<br><br><img  height="32" src="' + m_sRessIMGURL + '1389238545_open-file.png"  width="32" />&nbsp;' + mcLang.Text('lang_drive_62',1) + '</div><div id="DIVAttachPrev"></div>';
			}
			

			
			sExtraBackpack = '';
			sDriveFileHTML = '';
			if (miTotalBackpackFile > 0)
				sDriveFileHTML = Thumbnail(f_sAttachBulk, true, sExtraBackpack);
				
			//document.getElementById('divDriveBoxList').ondragstart = function() { return false; };

			
			document.getElementById("DIVAttachPrev").innerHTML = sDriveFileHTML;
		
			
			$(".jqTootltip").tipTip();
			
		}
			
			
			//$('#CallBackpack').removeAttr('checked');

   });

	
}

/////GLOBAL Search box :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: STARTS @@@

//:::::::
//:::::::
function fnmSearchBoxFocus(objBox)
{
	
	QHideInfobarInbox();
	
	if ( objBox.value == (mcLang.Text('lang_msearch_36',0) + '  ') )
		 objBox.value = '';
		 
	if (mSkinUI != 'telmex')
	{	 
		$(objBox).css( "color", "#e0edf6");
		document.getElementById("mSearchBtn").src = m_sRessIMGURL + "search_icon_on.png";
		document.getElementById("mSearchOptuins").src = m_sRessIMGURL + "search_options_on.png";
		document.getElementById("mSearchX").src = m_sRessIMGURL + "search_x_on.png";
	}
}

//:::::::
//:::::::
function fnmSearchBoxBlur(objBox)
{
		if ( trim(objBox.value) == '' )
		{
		 	objBox.value = (mcLang.Text('lang_msearch_36',0) + '  ');
		 	
		 	if (mSkinUI != 'telmex')
		 	{
			 	document.getElementById("mSearchBtn").src = m_sRessIMGURL + "search_icon.png";
				document.getElementById("mSearchOptuins").src = m_sRessIMGURL + "search_options.png";
				document.getElementById("mSearchX").src = m_sRessIMGURL + "search_x.png";
				$(objBox).css( "color", "#6b727b");
			}
		 
		}
		else 
		{
			if (mSkinUI != 'telmex')
			{
				document.getElementById("mSearchBtn").src = m_sRessIMGURL + "search_icon_on.png";
				document.getElementById("mSearchOptuins").src = m_sRessIMGURL + "search_options_on.png";
				document.getElementById("mSearchX").src = m_sRessIMGURL + "search_x_on.png";
				$(objBox).css( "color", "#e0edf6");
			}
		
		}
}


//:::::::
//:::::::
function fnmSearchBoxKeyup(objBox)
{
	if ( (trim(objBox.value) == '') || (trim(objBox.value) == (mcLang.Text('lang_msearch_36',0) + '  ')) )
		document.getElementById('mSearchXdiv').style.visibility = 'hidden';
	else
		document.getElementById('mSearchXdiv').style.visibility = 'visible'; 		
}

//:::::::
//:::::::
function fnSearchSelectDir(Obj,iIndex)
{
	$('.menulinkSearchdirCheck').removeClass( "menulinkSearchdirCheck" );
	$(Obj).addClass( "menulinkSearchdirCheck" );
	$('#SearchDir' + iIndex).prop( "checked", true);	
}


//:::::::
//:::::::
function fnSearchAllFolder(bCheck)
{
}

//:::::::
//:::::::
function fnmSearchClear(bManual) 
{
	//////////////////
	$('#s_size_option').removeAttr('checked');
	$('#s_date_option').removeAttr('checked');
		
	$('#s_size_option').attr("disabled", false);
	$('#s_size').attr("disabled", true);
	$('#s_restrict_size').attr("disabled", true);     
	//$('#s_message_type').attr("disabled", true);//<uad_korney> 11/02/2015 Commented to support SOLR search v2.0
	
	$('#s_date_option').attr("disabled", false);
	$('#s_restrict_date').attr("disabled", true);
	$('#s_month').attr("disabled", true);
	$('#s_day').attr("disabled", true);
	$('#s_year').attr("disabled", true);
	
	$('#RadioearchField5').attr("disabled", true);
	ResetSearchVars();
	///////////////////

	document.getElementById('mSearchXdiv').style.visibility = 'hidden';
	
	document.getElementById('mSearchbox').value = '';
	fnmSearchBoxBlur(document.getElementById('mSearchbox'));
	
	if (bManual)
	{
		if (m_sInboxMode == 'search')
		{
			//fnShowInbox('/inbox');
			fnSDir(0);
		}
	
	}
	
	m_bGotSearchFolders = false;
	
	m_sInboxMode = '';
}


//:::::::
//:::::::
function clearForm(myFormElement) {

  var elements = myFormElement.elements;

  myFormElement.reset();

  for(i=0; i<elements.length; i++) {

  field_type = elements[i].type.toLowerCase();

  switch(field_type) {

    case "text":
    case "password":
    case "textarea":
          case "hidden":

      elements[i].value = "";
      break;

    case "radio":
    case "checkbox":
        if (elements[i].checked) {
          elements[i].checked = false;
      }
      break;

    case "select-one":
    case "select-multi":
                elements[i].selectedIndex = -1;
      break;

    default:
      break;
  }
    }
}


//:::::::
//:::::::		
function fnSearchClose()
{

	//$('#MailSearchForm')[0].reset();
	//document.getElementById("MailSearchForm").reset();
	
	fnDocOnClick();
}
						    

//:::::::
//:::::::

String.prototype.replaceAll = function(search, replace) {
    if (replace === undefined) {
        return this.toString();
    }
    return this.split(search).join(replace);
};



//:::::::
//:::::::
function fnMailSearchCheckDate(Obj)
{
	var bDisable = true;
	if (Obj.checked)
		bDisable = false;
			
	$('#s_restrict_date').attr("disabled", bDisable);
	$('#s_month').attr("disabled", bDisable);
	$('#s_day').attr("disabled", bDisable);
	$('#s_year').attr("disabled", bDisable);


}

//:::::::
//:::::::
function fnMailSearchSizeOpt(Obj)
{
	var bDisable = true;
	if (Obj.checked)
		bDisable = false;
			
	$('#s_size').attr("disabled", bDisable);
	$('#s_restrict_size').attr("disabled", bDisable);

}

var m_bGotSearchFolders = false;

//:::::::
//:::::::
function fnmSearchOptions(e)
{
	
	fnCheckSearchFolders();

	fnShowPOPOpt('SearchDiv', 'mMailSearchOptMenu',-255,7);
	e.stopPropagation();

	
	//name="RadioearchField" id="RadioearchField0" onclick="fnSearchField(0)" type="radio"
}

//:::::::
//:::::::
function fnCheckSearchFolders()
{
	if ( m_bGotSearchFolders == false )
	{
		var arrFolders = $("#mInboxDirsList").children('a');
		var sHTMLDir = '';
		
		sHTMLDir += '<a class="menulinkSearchdir" href="JavaScript:" onclick="fnSearchSelectDir(this,' + 9999 + ')"><input name="RadioSearchDir" id="SearchDir' + 9999 + '" type="radio" value="ON" onclick="SearchBO(this, event,9999)" />&nbsp;' + mcLang.Text('lang_msearch_47',1) + '</a>'; 
	
		m_iTotalSearchFolders = arrFolders.length - 1;
		for (var i=0; i < arrFolders.length - 1; i++ )
		{
			sHTMLDir += '<a class="menulinkSearchdir" href="JavaScript:" onclick="fnSearchSelectDir(this,' + $(arrFolders[i]).attr('atrindex') + ')"><input name="RadioSearchDir" id="SearchDir' + $(arrFolders[i]).attr('atrindex') + '" type="radio" disabledX value="ON" onclick="SearchBO(this, event,' + $(arrFolders[i]).attr('atrindex') + ')" />&nbsp;' + $(arrFolders[i]).html() + '</a>'; 
		
		}
		$('#pgSearchFoldersID').html(sHTMLDir) ;
		
		$('#pgSearchFoldersID').scrollTop(0);
		
		//select all folders as deafult
		$('#SearchDir' + 9999).prop( "checked", true);	
		$('#SearchDir' + 9999).parent().addClass("menulinkSearchdirCheck");

	}
	
	m_bGotSearchFolders = true;

}

//:::::::
//:::::::
function SearchBO(ObjBox, e, iIndex)
{
	var ObjParent = ObjBox.parentNode;

    
    if (ObjBox.checked)
    {
    	//$('.menulinkSearchdirCheck').addClass( "menulinkSearchdir" );
    	$('.menulinkSearchdirCheck').removeClass( "menulinkSearchdirCheck" );
		$(ObjParent).addClass( "menulinkSearchdirCheck" );
	}	
		
            

    e.stopPropagation();
	//e.preventDefault();
	YAHOO.util.Event.stopPropagation(e);


}

//:::::::
//:::::::
function convertToServerTimeZone()
{

    //Pacific time
    offset = -8.0;

    clientDate = new Date();
    utc = clientDate.getTime() + (clientDate.getTimezoneOffset() * 60000);

    serverDate = new Date(utc + (3600000*offset));

    alert (serverDate.toLocaleString());


}

 
//:::::::
//:::::::
function fnmDoSearch()
{

	var s_date_checkbox       = false;
	var s_size_checkbox       = false;
	var s_message_type_option = false;
	var s_date                = ""; //1-Feb-1994
	var s_folders_bulk        = "";
	 
	g_sOptions = false; 
	
	s_date_checkbox = document.getElementById('s_date_option').checked;
	s_size_checkbox = document.getElementById('s_size_option').checked;
        //<uad_korney> beg 11/02/2015 Search by message type for SOLR v2.0
        var s_message_type_index = document.getElementById('s_message_type').selectedIndex;
       
        if ( (s_date_checkbox == false) && (s_size_checkbox == false) && (s_message_type_index == 0))
	//if ( (s_date_checkbox == false) && (s_size_checkbox == false) )
        //<uad_korney> end 11/02/2015 
	{
		if ( (!trim(document.getElementById('mSearchbox').value)) || (document.getElementById('mSearchbox').value  == (mcLang.Text('lang_msearch_36',0) + '  ') ) )
		{
			//alert(mcLang.Text('lang_msearch_41',1))
			//UpdateInboxAlert(mcLang.Text('lang_msearch_41',1), '');
			fnDocOnClick();
			fnYUIPromptOK(mcLang.Text('lang_msearch_41',1), mcLang.Text('lang_drive_39',1) )
			document.getElementById('mSearchbox').focus();
			return;
		}
	}
	

		
	var s_message_type_index = document.getElementById('s_message_type').selectedIndex;
	if(s_message_type_index > 0)
		s_message_type_option = true;
		
	if(s_date_checkbox)
	{
		var date_index = document.getElementById('s_month').selectedIndex;
		if(date_index == 0 )
		{
			UpdateInboxAlert(mcLang.Text('lang_msearch_44',1), '');
			document.getElementById('s_month').focus();
			return;
		}
		else
			s_date = '-' + document.getElementById('s_month')[date_index].value + '-'; 
			
		date_index = document.getElementById('s_day').selectedIndex;
		if(date_index == 0 )
		{
			UpdateInboxAlert(mcLang.Text('lang_msearch_45',1), '');
			document.getElementById('s_day').focus();
			return;
		}
		else
			s_date = document.getElementById('s_day')[date_index].value + s_date;
			
		date_index = document.getElementById('s_year').selectedIndex;
			
		//1-Feb-1994	
		s_date +=  document.getElementById('s_year')[date_index].value;
	}
			
	if(!s_size_checkbox)
		document.getElementById('s_size').value = "";
	else
	{
		if(!document.getElementById('s_size').value)
		{
			UpdateInboxAlert(mcLang.Text('lang_msearch_46',1), '');
			document.getElementById('s_size').focus();
			return ;
		}
	}
	

	g_sSize_option	 = document.getElementById('s_message_type')[document.getElementById('s_message_type').selectedIndex].value;
	g_sMessage_type  = document.getElementById('s_message_type')[document.getElementById('s_message_type').selectedIndex].value;
	
	if (s_date_checkbox)
	{
		g_sRestrict_date = document.getElementById('s_restrict_date')[document.getElementById('s_restrict_date').selectedIndex].value;
		g_sDate			 = s_date;
		g_sDate_option	 = '';
		g_sOptions = true;
	}
	else
	{
		g_sRestrict_date = '';
		g_sDate = '';
		g_sDate_option	 = '';
	}
	
	if (s_size_checkbox)
	{
		g_sRestrict_size = document.getElementById('s_restrict_size')[document.getElementById('s_restrict_size').selectedIndex].value;
		g_sSize	 = document.getElementById('s_size').value;
		g_sOptions = true;
	}
	else
	{
		g_sRestrict_size = '';
		g_sSize = '';
	}
	
	//alert('g_sOptions:' + g_sOptions + '\ng_sField:' + g_sField + '\ng_sDate:' + g_sDate + '\n' + 'g_sRestrict_date:' + g_sRestrict_date + '\n' + 'g_sSize:' + g_sSize + '\n' + 'g_sRestrict_size:' + g_sRestrict_size + '\n' + 'g_sMessage_type:' + g_sMessage_type);

	//Get selected folder
	var l_iTotalDirs = m_iTotalSearchFolders;
	var l_iTotalDirChecked = 0;
        //<uad_korney> beg 11/02/2015 Fix issue with Folder selection
        g_sSearchFolders ="all";
        //<uad_korney> end 11/02/2015 
	for ( var i=0; i < m_iTotalSearchFolders; i++)
	{
		if ( $('#SearchDir' + i).prop( "checked") )
		{
    		g_sSearchFolders = $('#udir' + i).attr('atrdid');     
    		l_iTotalDirChecked += 1;
    		break;
		}
	}
	
	//Make the  JSON call
	var sSearchtxt = document.getElementById('mSearchbox').value;
        //<uad_korney> beg 11/02/2015 add Search Mode for SOLR v2.0
        g_sSearchMode = document.getElementById('s_search_mode')[document.getElementById('s_search_mode').selectedIndex].value;
        //<uad_korney> end 11/02/2015	
	//just show  the msg for the first page
	if (CurentPage == 1)
	{
	
		var sMessage = mcLang.Text('lang_msearch_43',1);
		sMessage = sMessage.replace(/_xxSearchTermsxx_/gi, sSearchtxt);
	
		UpdateInboxAlert(sMessage, '');
	}
	//else
	//	UpdateInboxAlert(mcLang.Text('lang_Gen_9',1), '');
        //<uad_korney> beg 11/02/2015 Fix request parameters encoding
	sSearchParm  = 'searchtxt=' 	 + encodeURIComponent(sSearchtxt);//we need to use encodeURIComponent when we want to encode a URL parameter. Function encodeURI(sSearchtxt) doesn't encode: ~!@#$&*()=:/,;?+';
 	//sSearchParm  = 'searchtxt=' 	 + encodeURI(sSearchtxt);
        //<uad_korney> end updated 11/02/2015	
		

	sSearchParm += '&options=' 		 + g_sOptions;
	sSearchParm += '&field='  		 + g_sField;
	sSearchParm += '&date=' 		 + g_sDate;
	sSearchParm += '&dateop=' 		 + g_sRestrict_date;
	sSearchParm += '&size=' 		 + g_sSize;
	sSearchParm += '&restrict_size=' + g_sRestrict_size;
	sSearchParm += '&message_type='  + g_sMessage_type;
	sSearchParm += '&pagelength='  + MsgPerPage;
	sSearchParm += '&pagenumber='  + CurentPage;
	sSearchParm += '&folder='  + encodeURIComponent(g_sSearchFolders);
        //<uad_korney> beg 11/02/2015 add Search Mode for SOLR v2.0
	sSearchParm += '&mode=' + g_sSearchMode;
        //<uad_korney> end 11/02/2015 			
	fnSearchClose();
	
	//sSearchParm += '&xxxxx=' + xxxxxx;
	
	//JASON call  
	$.ajax({
	type: "GET",
	url: '../../app/mail_search.asp',
	data: sSearchParm, 
	success: function(data) {
          
		m_sFolderRecords = data;
		m_sInboxMode = 'search';
		fShowInboxModule();

		}
   });	



}

//:::::::
//:::::::
function fnSearchCheckAdvanced()
{
	if (document.getElementById('mMailSearchOptMenu').style.display == "")
		return true;
	else
		return false;
}

//:::::::
//:::::::
function fnrteKeyDownSearch(ObjTXT, evt)
{
	    evt = (evt) ? evt : event;
	    var charCode = (evt.charCode) ? evt.charCode :
	        ((evt.which) ? evt.which : evt.keyCode);
	
		//enter
 		if (charCode == 13) {
			if (ObjTXT.value.length >= 2)
			{
				CurentPage =1;
				fnmDoSearch();
			}
	    }
	    
	    
}

 //:::
function ResetSearchVars()
{
	g_sField		 = 'full';
	g_sOptions		 = false;
	g_sDate			 = '';
	g_sRestrict_date = '';
	g_sRestrict_size = '';
	g_sMessage_type  = '';
	g_sSize			 = '';
	g_sSearchFolders = 'all';
	
	document.getElementById('s_date_option').checked = false;
	document.getElementById('s_size_option').checked = false;
	
	document.getElementById('s_size').value = "";
	
	document.getElementById('s_message_type').selectedIndex = 0;
	document.getElementById('s_restrict_date').selectedIndex = 0;
	document.getElementById('s_month').selectedIndex = 0;
	document.getElementById('s_day').selectedIndex = 0;	
	document.getElementById('s_year').selectedIndex = 14;
	
 	$("#RadioearchField0").prop("checked", false);
 	$("#RadioearchField1").prop("checked", false);
 	$("#RadioearchField2").prop("checked", false);
 	$("#RadioearchField3").prop("checked", false);
 	$("#RadioearchField4").prop("checked", true);
 	$("#RadioearchField5").prop("checked", false);
 	
 	if ( m_bV12FullSearch == 'false' )
 	{
 		$("#RadioearchField4").prop("checked", false);
 		$("#RadioearchField3").prop("checked", true);
 		g_sField = 'subject';	
 		document.getElementById("rdbtFullSearch").style.display = "none";
 	}


}


/////GLOBAL Search box :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: ENDS @@@



//::::::::::::::::::::SEARCH


//:::::::
//:::::::
function fnAppSearch() 
{
	
	var f_sSearchQuarry = document.getElementById('AppSearch').value;
	
	var sSearchValues = 's_search_quarry=' + f_sSearchQuarry + '&s_field=' + g_sField + '&s_search=true&s_date=' + g_sDate + '&s_restrict_date=' + g_sRestrict_date + '&s_restrict_size=' + g_sRestrict_size + '&s_message_type=' + g_sMessage_type + '&s_size=' + g_sSize + '&soptions=' + g_sOptions + '&s_folder=' + g_sSearchFolders;

	var sURL = '../mail/ms_ajax.asp?' + sSearchValues;
    var obj_callback = new clsAjaxcallback();    
    obj_callback.Ajaxcallback.success = sCheckFolderREcords;
    
    makeRequest(sURL, obj_callback.Ajaxcallback);

}


//:::::::
//:::::::
function fnShowSearchOptions()
{
	alert('options');
	fnShowPOPOpt('imgSearchOption', 'mMailSearchOptMenu',0,0)
}

function fnSearch()
{
	var f_sSearchQuarry = document.getElementById('TopPanel_searchinput').value
	var v_sDirID = m_ObjCurretnSelectedDir.getAttribute('atrDID');
	var sSearchValues = 's_search_quarry=' + f_sSearchQuarry + '&s_field=' + g_sField + '&s_search=true&s_date=' + g_sDate + '&s_restrict_date=' + g_sRestrict_date + '&s_restrict_size=' + g_sRestrict_size + '&s_message_type=' + g_sMessage_type + '&s_size=' + g_sSize + '&soptions=' + g_sOptions + '&s_folder=' + g_sSearchFolders;

	if ( (m_sMainPanelLocation.indexOf("mail.asp") > 1) )
	{
		window.frames['MainPanelContentID'].m_sSearchParam = sSearchValues;
		window.frames['MainPanelContentID'].dtTS = "full";
		window.frames['MainPanelContentID'].CheckMail(v_sDirID,1);
	}
	else
		window.frames['MainPanelContentID'].location = '/../../page/app/mail.asp?' + sSearchValues;

	//:::try close popup search
	try 
	{
		$.fn.colorbox.close();
	}	catch(err) {}
}


function fnSearchField(f_iIndex)
{
	var f_bDisabled = false;
	
	
	if (f_iIndex == 4)
	{
		f_bDisabled = true;
		document.getElementById('s_size_option').checked = false;
		document.getElementById('s_date_option').checked = false;
	}

	
	 switch (f_iIndex)
  	{
    	case 0: { g_sField = 'from'; break }
    	case 1: { g_sField = 'to'; break }
		case 2: { g_sField = 'cc'; break }
		case 3: { g_sField = 'subject'; break }
		case 4: { g_sField = 'full'; break }
		case 5: { g_sField = 'text'; break }
  	}
}


/////////////////////////// SEARCH ENDS




//**************************

////////////

/**
  Returns the html-string representation of jQuery object.
  You can also replace the whole element with some html by passing html string as an attribute.

  Pavel Pravosud <pavel@pravosud.com>
  Licensed under MIT license in 2012
  https://github.com/rwz/jquery.outerHTML
 */


(function ($) {
  'use strict';

  var jdiv = $('<div>'), div = jdiv.get(0);

  var getter = ('outerHTML' in div) ?
    // native support
    function(){ return this.get(0).outerHTML; } :

    // no native support
    function(){ return jdiv.html(this.first().clone()).html(); };

  $.fn.outerHTML = function(){
    return arguments.length ?
      this.replaceWith.apply(this, arguments) :
      getter.call(this);
  };

}(jQuery));



////center div
jQuery.fn.center = function () {
    this.parent().css("position","absolute");
    var t = this.parent().css("top");
    var l = this.parent().css("left");
    
    this.css("position","absolute");
    this.css("top", ((this.parent().height() - this.outerHeight()) / 2) + this.parent().scrollTop() + "px");
    this.css("left", ((this.parent().width() - this.outerWidth()) / 2) + this.parent().scrollLeft() + "px");
    return this;
};


////POPup win
function openit()
{
    var xMax = 640;
    var yMax = 480;
    if (window.screen)
    {
        xMax = window.screen.width;
        yMax = window.screen.height;
    }
	var xOffset = (xMax - mywidth)/2;
	var yOffset = (yMax - myheight)/2;
	open(myURL,myid,"width=" + mywidth + ",height=" + myheight + ",resizable=yes,toolbar=" + mytoolbar + ",scrollbars=yes,screenX="+xOffset+",screenY="+yOffset+",top="+yOffset+",left="+xOffset+"");
}

//::::::
//::::::
function fnReadCookie(sCookieName, sParam, bMultipleValue)
{
	var readCookie = '';
	
	if ($.cookie(sCookieName)) 
		readCookie = $.cookie(sCookieName);
	else
		return('');

	if (bMultipleValue != true)
	{
		return(readCookie);			
	}
	
	//bMultipleValue then..
	readCookie = readCookie.split('&');
	for (i=0; i<readCookie.length; i++) {
		readCookie[i] = readCookie[i].split('=');
		
		if ( sParam == readCookie[i][0] )
		{
			return( readCookie[i][1] );
		}
	}
	
	//found nothing at all...
	return('');
}


//::::::
//::::::
function OpenWindow(URL, id, width, hight, toolbar)
{
	myURL = URL;
	myid = id;
	mywidth = width;
	myheight = hight;
	mytoolbar = "yes"; //DEFAULT TO YES
	if (toolbar) mytoolbar = toolbar;
	window.setTimeout("openit()",1); //needed to solve a bug with IE 5.0
}


//::::::
//::::::
function stringreplace(instring,findstr,replacestr)
 {
  while (instring.indexOf(findstr) >= 0)
   {
    instring = instring.substring(0,instring.indexOf(findstr))
                +
               replacestr
                +
               instring.substring(instring.indexOf(findstr) + findstr.length);
   }
  return instring;
 }


//::::::
//::::::
function htmlEncode(value){
  //create a in-memory div, set it's inner text(which jQuery automatically encodes)
  //then grab the encoded contents back out.  The div never exists on the page.
  return $('<div/>').text(value).html();
}

function htmlDecode(value){
  return $('<div/>').html(value).text();
}


//::::::
//::::::
function fnIsEmpty(str) 
{ 
	while (str.substring(0,1) == ' ') str = str.substring(1);
	
	if (str.length > 0) 
		 return false; 
	else 
		return true; 
}


// Validate characters
//::::::
//::::::
function fnValidcharsinstring(instring,allowedchars)
 {
  //RETURNS TRUE IF INSTRING CONTAINS ONLY CHARACTERS IN THE STRING ALLOWEDCHARS
  //RETURNS FALSE IF OTHERWISE INCLUDING IF IT'S BLANK  
  if (instring.length > 0)
   {
    for (x=0; x < instring.length; ++x)
     {
      if (allowedchars.indexOf(instring.charAt(x)) == -1)
       {
        return false;
       }
     }
    return true;
   }
  else
   {
    return false;
   }
 }
 
// Validate date
//::::::
//::::::
function fnValidDate(dayVal, monthVal, yearVal) 
{ 
	if (dayVal == "31" && 
	   (monthVal == "2" || 
		monthVal == "4" || 
		monthVal == "6" || 
		monthVal == "9" ||
		monthVal == "11")) 
	{				
		return false;
	}
	else if (dayVal == "29" && monthVal == "2" && (yearVal%4 != 0)) 
	{
		return false;
	}
	else if (dayVal == "30" && monthVal == "2") 
	{
		return false;
	}
	return true; 
}

//create a GUID / UUID
//use:
//var uuid = guid();
var guid = (function() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000)
               .toString(16)
               .substring(1);
  }
  return function() {
    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
           s4() + '-' + s4() + s4() + s4();
  };
})();


//::::::
//::::::
function fnGetParameterByName(name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
        results = regex.exec(location.search);
    return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
}



//::::::
//::::::
function validemail(inemail)
{
 if (
     (inemail.indexOf("@") < 0) || (inemail.indexOf(".") < 0) ||
     (inemail.indexOf("@.") >= 0) || (inemail.indexOf(".@") >= 0) || (inemail.indexOf("..") >= 0)
    ) return false;

 //CHECK USERNAME BEFORE THE @ SIGN
 var mystring = inemail.substring(0,inemail.indexOf("@"));
 if (!validcharsve(mystring.toLowerCase(),"abcdefghijklmnopqrstuvwxyz0123456789-_.")) return false;

 //CHECK DOMAIN
 mystring = inemail.substring((inemail.indexOf("@") + 1));
 if (!validcharsve(mystring.toLowerCase(),"abcdefghijklmnopqrstuvwxyz0123456789-_.")) return false;

 //LENGTH OF THE STRING BEFORE THE DOT IS LESS THAN 1 OR DOT DOESN'T EXIST
 if (mystring.indexOf(".") < 1) return false;

 //GET THE TEXT AFTER THE LAST DOT - THERE IS ALWAYS ONE DOT AT THIS POINT
 mystring = mystring.substring((mystring.lastIndexOf(".") + 1));

 if (mystring.length < 2) return false;

 return true;
}

function validcharsve(instring,allowedchars) //VALIDCHARSINSTRING FUNCTION NAME CHANGED TO VALIDCHARSVE TO AVOID DOUBLE NAMING
{
 if (instring.length == 0) return false;
 for (var x=0; x<instring.length; x++)
 {
  if (allowedchars.indexOf(instring.charAt(x)) == -1) return false;
 }
 return true;
}

//::::::
//Get URL Parameters
//sPageURL = window.location.search.substring(1);
//::::::
function fnGetUrlParameter(sPageURL, sParam)
{
    //var sPageURL = window.location.search.substring(1);
    var sURLVariables = sPageURL.split('&');
    for (var i = 0; i < sURLVariables.length; i++) 
    {
        var sParameterName = sURLVariables[i].split('=');
        if (sParameterName[0] == sParam) 
        {
            return sParameterName[1];
        }
    }
}   


//RGB to hex conversion
//::::::
//::::::
$.cssHooks.backgroundColor = {
    get: function(elem) {
    
    	////////
 		try {

	        var bg;
	        if (elem.currentStyle)
	            bg = elem.currentStyle["background-color"];
	        else if (window.getComputedStyle)
	            bg = document.defaultView.getComputedStyle(elem,
	                null).getPropertyValue("background-color");
	        if (bg.search("rgb") == -1)
	            return bg;
	        else {
                    //<uad_korney> begin 4/27/2015 Fix issue with color format rgba(r,g,b,a)
 	            //bg = bg.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);
	            //function hex(x) {
	            //    return ("0" + parseInt(x).toString(16)).slice(-2);
	            //}
	            //return "#" + hex(bg[1]) + hex(bg[2]) + hex(bg[3]);
                    var bgm = bg.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);
                    function hex(x) {
                        return ("0" + parseInt(x).toString(16)).slice(-2);
                    }
                    if (!bgm)
                    {
                       bgm = bg.match(/^rgba\((\d+),\s*(\d+),\s*(\d+),\s*(\d+)\)$/);
                       return "#" + hex(bgm[1]) + hex(bgm[2]) + hex(bgm[3]) + hex(bgm[4]);
                    }
                    return "#" + hex(bgm[1]) + hex(bgm[2]) + hex(bgm[3]);
                    //<uad_korney> end 4/27/2015
	        }


		}
		catch (x) {
			return "#ff"
		}
		////////
   
   
        
    }
};


/*

highlight v4

Highlights arbitrary terms.

<http://johannburkard.de/blog/programming/javascript/highlight-javascript-text-higlighting-jquery-plugin.html>

MIT license.

Johann Burkard
<http://johannburkard.de>
<mailto:jb@eaio.com>

*/

//::::::
//::::::
jQuery.fn.highlight = function(pat) {
 function innerHighlight(node, pat) {
  var skip = 0;
  if (node.nodeType == 3) {
   var pos = node.data.toUpperCase().indexOf(pat);
   if (pos >= 0) {
    var spannode = document.createElement('span');
    //spannode.className = 'highlight';

    spannode.style.backgroundColor = "#FFFF93";
    
    var middlebit = node.splitText(pos);
    var endbit = middlebit.splitText(pat.length);
    var middleclone = middlebit.cloneNode(true);
    spannode.appendChild(middleclone);
    middlebit.parentNode.replaceChild(spannode, middlebit);
    skip = 1;
   }
  }
  else if (node.nodeType == 1 && node.childNodes && !/(script|style)/i.test(node.tagName)) {
   for (var i = 0; i < node.childNodes.length; ++i) {
    i += innerHighlight(node.childNodes[i], pat);
   }
  }
  return skip;
 }
 return this.length && pat && pat.length ? this.each(function() {
  innerHighlight(this, pat.toUpperCase());
 }) : this;
};

jQuery.fn.removeHighlight = function() {
 return this.find("span.highlight").each(function() {
  this.parentNode.firstChild.nodeName;
  with (this.parentNode) {
   replaceChild(this.firstChild, this);
   normalize();
  }
 }).end();
};
////////////////////////////////////////////////////////////////////


function isValidEmailAddress(emailAddress) {
    var pattern = new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i);
    return pattern.test(emailAddress);
};



// Use the browser's built-in functionality to quickly and safely escape the string
function fnEscapeHtml(str) {


	var MAP = { '=': '&#61;',
	            '<': '&#060;',
	            '>': '&#062;',
	            '"': '&#34;',
	            "'": '&#39;'};

	return str.replace(/[=<>"']/g, function(c) {
        return MAP[c];
    });
    
	return str;

	str = str.replace(/["]/g, "&#34;");
	str = str.replace(/[<]/g, "&#060;");
	str = str.replace(/[>]/g, "&#062;");
	str = str.replace(/[=]/g, "&#61;");
	str = str.replace(/[']/g, "&#39;");


	return str;

    var div = document.createElement('div');
    div.appendChild(document.createTextNode(str));
    return div.innerHTML;
};


////////////////////////////////////////////////////////////////////
//::::::: - Debug code
//:::::::
function fnAddDebug(sDebugTxt)
{
	var monthNames = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ];
	var dayNames= ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];

	var newDate = new Date();
	newDate.setDate(newDate.getDate() + 1);    
	var sDate = dayNames[newDate.getDay()] + " " + newDate.getDate() + ' ' + monthNames[newDate.getMonth()] + ' ' + newDate.getFullYear();

	//document.getElementById("DebugTextarea").value += '    ' + sDate + '\n'

	document.getElementById("DebugTextarea").value += '\n' + sDebugTxt;
	document.getElementById("divDebug").style.visibility = "visible";
	document.getElementById("divDebug").style.display = "block";
	
}

//:::::::
//:::::::
function fnCloseDebug()
{

	document.getElementById("divDebug").style.visibility = "hidden";
	document.getElementById("divDebug").style.display = "none";
}


//:::::::
//:::::::
function fnClearDebug()
{
	document.getElementById("DebugTextarea").value = "";
}

////////////////////////////////////////////////////////////////////


